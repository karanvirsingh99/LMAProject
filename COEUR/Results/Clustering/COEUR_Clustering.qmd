---
title: "Clustering COEUR data into distinct tumor microenvironments"
author: "Karanvir Singh"
date: "2023-03-23"
format:
  html:
    code-fold: true
---

```{r setup, include=FALSE}
library(tidyverse)
library(RSKC)
library(rstatix)
library(ggpubr)
library(circlize)
library(ComplexHeatmap)
library(corrplot)
library(igraph)
library(ggsci)
library(scales)
library(cowplot)
library(gridtext)
library(kableExtra)
```


## Load data and clean it up a bit

```{r}
# Combined densities (ADAPT AND BT panels), cells/mm2
COMBINED_PANEL_DENSITIES <- read.csv("../../Final_Data/COMBINED_PANELS_DENSITIES_08NOV22.csv")
```

There data that I am loading contains cell densities that have been aggregated between the two mcIF panels. For each panel, cell counts and areas were summed between the two cores per patient and divided by the summed stromal/epithelial/stromal+epithelial area to calculate densities (cells/mm\^2).

**Table 1: Cell types scored**

| Marker         | Cell Type        | Panel              |
|----------------|------------------|--------------------|
| CD3+CD8+PD1+   | CD8+PD1+ T cell  | Adaptive           |
| CD3+CD8+PD1-   | CD8+PD1- T cell  | Adaptive           |
| CD3+CD8-PD1+   | CD8-PD1+ T cell  | Adaptive           |
| CD3+CD8+PD1-   | CD8+PD1- T cell  | Adaptive           |
| CD3+CD8-FoxP3+ | T regulatory     | B and T cell panel |
| CD68+PDL1+     | PDL1+ macrophage | Adaptive           |
| CD68+PDL1-     | PDL1+ macrophage | Adaptive           |
| CD79a+CD20+    | B cell           | B and T cell panel |
| CD79a+CD20-    | Plasma cell      | B and T cell panel |

```{r}
# This is the list of patients that are (1) pre-chemo (2) have outcomes data
final_pNum <- read.csv("../../Final_Data/final_pNum.csv") %>% .[,1]
length(final_pNum)
```

Fron the outcome data, there are 981/`r nrow(COMBINED_PANEL_DENSITIES)` patients that are pre-treatment and have overall survival data (which I will need for survival analysis) - only these patients will be considered in the clustering.

## Format data for clustering

Here I remove the area (stroma, epithelial and proportions of) columns from the data. I also remove PDL1pCK+ cells, and CD3+CD8+- scores from the B and T panel, as I am quantifying PD1+/PD1- subsets of this population in the adaptive panel.

I also log10 transform the data, with a small offset of 0.1 to deal with zeroes.

```{r}
# Remove tissue proportion data, and cell types that are redundant (ie. the CD3CD8- calls from the BT panel)
DENSITIES_BY_TISSUE <- COMBINED_PANEL_DENSITIES %>% select(-contains("area")) %>%
  select(-PDL1pCKp_S, -BT_str_prop, -BT_epi_prop, -ADAPT_epi_prop, -ADAPT_str_prop, -avg_epi_prop) %>%
  select(-CD3pCD8p_S,-CD3pCD8p_E)

DENSITIES_LOGGED <- DENSITIES_BY_TISSUE %>%
  mutate(across(-contains(c("prop", "area", "pNum")), ~log10(.+0.1))) #log all densities
```

## Robust and sparse k-means clustering

I run the robust and sparse k-means algorithm on the 981 patient's densities, using a k=5.

The table shows the number of cases in each cluster.

```{r}
# Making heatmap with only final patients (n=981) #

# Making a logged densities matrix. I am also removing CD3-PD1p cells here because I am confident in their calls.

densities_final_m <- DENSITIES_LOGGED %>% 
  filter(pNum %in% final_pNum) %>%
  select(-contains(c("prop", "area")), -PDL1pCKp_E, -CD68nPDL1nPD1p_S, -CD68nPDL1nPD1p_E) %>% 
  column_to_rownames("pNum") %>% 
  as.matrix()

#optimal_n_final <- Clest(densities_final_m, 8, alpha=0.05, beta=0.05) #Trimming 10% of cases, significance level between clusters at least 0.05

#Optimal cluster N is 4 without or with PDL1+CK+
set.seed(1000)
#clusters <- RSKC(densities_final_m, 5, alpha=0.05)$labels

# Freeze output
clusters <- c(2, 3, 3, 2, 1, 3, 3, 3, 4, 2, 5, 3, 3, 1, 4, 2, 5, 4, 4, 1, 
              2, 4, 3, 1, 3, 4, 2, 5, 4, 1, 3, 4, 2, 1, 4, 4, 5, 4, 2, 1, 4, 
              5, 3, 2, 4, 2, 5, 3, 2, 4, 1, 4, 5, 2, 4, 1, 4, 5, 4, 1, 3, 2, 
              4, 3, 5, 1, 4, 3, 2, 3, 1, 5, 5, 5, 4, 5, 3, 5, 4, 4, 1, 1, 3, 
              1, 5, 1, 1, 3, 2, 3, 1, 5, 5, 3, 5, 2, 2, 4, 4, 1, 4, 1, 4, 4, 
              4, 5, 3, 4, 4, 3, 2, 1, 5, 2, 4, 2, 5, 3, 2, 2, 1, 2, 2, 4, 4, 
              2, 4, 1, 5, 5, 3, 5, 4, 2, 5, 1, 3, 5, 2, 2, 3, 5, 1, 4, 1, 4, 
              4, 4, 5, 5, 5, 5, 2, 4, 2, 4, 1, 5, 4, 3, 4, 3, 1, 4, 2, 5, 1, 
              3, 1, 5, 2, 3, 3, 3, 1, 3, 5, 5, 4, 4, 1, 4, 3, 2, 1, 5, 5, 4, 
              3, 3, 2, 4, 4, 4, 2, 5, 4, 4, 3, 3, 3, 4, 1, 2, 4, 2, 1, 2, 4, 
              3, 2, 2, 1, 5, 2, 4, 5, 5, 4, 1, 3, 3, 4, 5, 3, 4, 1, 5, 1, 2, 
              3, 2, 5, 4, 4, 5, 2, 3, 5, 3, 2, 3, 2, 1, 1, 5, 2, 5, 4, 2, 4, 
              3, 1, 5, 1, 4, 4, 4, 4, 3, 4, 4, 4, 2, 3, 2, 5, 3, 4, 4, 5, 2, 
              1, 3, 4, 5, 4, 4, 5, 4, 5, 4, 1, 5, 1, 2, 4, 3, 3, 1, 4, 5, 4, 
              2, 3, 2, 3, 2, 2, 5, 4, 1, 3, 3, 4, 1, 2, 3, 4, 3, 2, 4, 4, 5, 
              1, 1, 3, 1, 4, 2, 2, 3, 5, 2, 3, 4, 5, 2, 4, 3, 4, 4, 4, 5, 4, 
              1, 4, 2, 5, 3, 3, 4, 3, 3, 5, 4, 4, 2, 5, 3, 5, 1, 3, 4, 4, 1, 
              5, 3, 1, 1, 2, 2, 3, 2, 5, 4, 1, 4, 2, 1, 4, 2, 2, 4, 1, 4, 3, 
              1, 3, 1, 4, 4, 5, 4, 3, 1, 1, 3, 1, 2, 3, 4, 1, 5, 1, 2, 5, 4, 
              1, 4, 2, 4, 2, 2, 1, 4, 3, 1, 1, 3, 4, 2, 1, 2, 5, 3, 1, 1, 4, 
              1, 1, 1, 4, 3, 3, 2, 1, 2, 1, 4, 3, 4, 5, 1, 4, 5, 4, 1, 3, 5, 
              4, 5, 2, 4, 1, 5, 4, 1, 1, 5, 2, 3, 5, 1, 5, 4, 5, 4, 2, 3, 3, 
              1, 3, 3, 1, 2, 3, 5, 5, 3, 4, 2, 4, 3, 5, 4, 2, 5, 4, 5, 5, 1, 
              3, 1, 3, 3, 3, 2, 4, 5, 4, 3, 4, 2, 5, 4, 5, 4, 5, 5, 1, 1, 3, 
              1, 2, 5, 3, 4, 4, 4, 1, 4, 3, 3, 4, 2, 2, 3, 4, 2, 3, 5, 5, 5, 
              1, 2, 4, 5, 4, 5, 3, 1, 2, 2, 1, 2, 5, 2, 4, 4, 1, 3, 2, 1, 4, 
              5, 4, 4, 5, 1, 5, 4, 3, 3, 3, 5, 4, 4, 5, 2, 5, 4, 3, 3, 3, 2, 
              5, 5, 4, 3, 5, 1, 3, 4, 4, 1, 5, 2, 1, 2, 5, 1, 1, 4, 5, 5, 4, 
              2, 3, 1, 3, 1, 4, 1, 2, 4, 5, 1, 4, 1, 1, 1, 5, 2, 4, 5, 5, 4, 
              5, 5, 3, 5, 5, 5, 1, 3, 2, 5, 1, 1, 3, 5, 2, 4, 2, 3, 4, 2, 5, 
              5, 4, 5, 3, 1, 4, 5, 5, 3, 5, 5, 1, 1, 5, 1, 4, 3, 2, 3, 5, 1, 
              1, 2, 5, 5, 3, 5, 5, 3, 3, 3, 4, 3, 2, 3, 3, 5, 4, 2, 2, 1, 5, 
              3, 5, 2, 3, 3, 1, 5, 4, 2, 2, 2, 5, 3, 4, 3, 2, 2, 1, 2, 1, 5, 
              5, 1, 2, 2, 3, 2, 5, 4, 4, 1, 4, 2, 2, 2, 1, 4, 4, 5, 2, 5, 4, 
              3, 4, 5, 5, 1, 1, 4, 2, 5, 2, 5, 4, 4, 5, 4, 4, 1, 4, 2, 4, 1, 
              4, 4, 2, 3, 2, 4, 4, 5, 2, 2, 3, 2, 3, 2, 4, 4, 3, 4, 2, 5, 4, 
              3, 5, 5, 4, 1, 4, 5, 2, 1, 4, 3, 4, 1, 3, 1, 3, 5, 1, 3, 3, 1, 
              1, 5, 4, 5, 3, 5, 1, 5, 2, 4, 3, 4, 2, 2, 1, 3, 5, 4, 4, 4, 4, 
              2, 3, 4, 4, 5, 4, 5, 3, 1, 3, 2, 5, 3, 1, 4, 2, 2, 3, 4, 4, 5, 
              5, 5, 4, 5, 2, 1, 2, 4, 2, 4, 5, 5, 2, 5, 2, 2, 5, 2, 4, 4, 5, 
              5, 4, 3, 5, 3, 2, 5, 5, 1, 3, 5, 4, 5, 4, 4, 1, 3, 5, 4, 3, 4, 
              3, 5, 3, 2, 5, 2, 2, 3, 3, 4, 5, 2, 4, 4, 3, 4, 5, 4, 4, 5, 1, 
              4, 4, 1, 1, 3, 4, 3, 3, 4, 3, 2, 4, 3, 5, 4, 2, 4, 5, 3, 5, 5, 
              5, 1, 2, 2, 5, 1, 4, 3, 5, 2, 1, 4, 5, 2, 4, 5, 2, 5, 1, 3, 3, 
              1, 5, 5, 2, 5, 2, 3, 3, 4, 1, 3, 3, 3, 5, 4, 3, 5, 1, 1, 4, 1, 
              5, 1, 5, 1, 5, 4, 4, 5, 5, 1, 5, 2, 4, 1, 3, 5, 1, 5, 3, 3, 5, 
              2, 5, 4, 5, 4, 4, 1, 3, 3, 5, 1, 1, 1, 2, 1, 3)

# Change order of labels. 2 -> 1, 5 -> 2, 3 ->3, 4 -> 4, 1 -> 5
new_clusters <- recode(clusters, '3' = 1L, '1' = 2L, '2' = 3L, '4' = 4L, '5' = 5L)

#new densities DF with clusters
DENSITIES_LOGGED_FINAL <- DENSITIES_LOGGED %>% filter(pNum %in% final_pNum) %>% 
  mutate(cluster_ID = new_clusters)

table(DENSITIES_LOGGED_FINAL$cluster_ID)
```

## Heatmap plotting

```{r}
# subset data to only include densities
H1 <- DENSITIES_LOGGED_FINAL %>%
  mutate(clusterID = new_clusters) %>%
  arrange(clusterID) %>%
  select(-contains(c("prop", "category", "cluster", "ratio")), -CD68nPDL1nPD1p_S, -CD68nPDL1nPD1p_E, -PDL1pCKp_E) %>% column_to_rownames("pNum")

#renaming the columns so that they're prettier
colnames(H1) <- gsub("p", "+", colnames(H1))
colnames(H1) <- gsub("n", "-", colnames(H1))
H1 <- dplyr::rename(H1, "CD79a+CD20+_E" = "CD20+_E",
                       "CD79a+CD20+_S" = "CD20+_S",
                   "CD79a+CD20-_E" = "CD79A+CD20-_E",
                        "CD79a+CD20-_S" = "CD79A+CD20-_S",
                   "CD3+CD8-FoxP3-_E" = "CD3+CD8-_E",
                   "CD3+CD8-FoxP3-_S" = "CD3+CD8-_S")

#the order of the rows (grouped by cell type)
H1_row_order <- c(
  "CD3+CD8-FoxP3-_S", 
  "CD3+CD8-FoxP3-_E",
  "CD3+CD8-PD1-_S",
  "CD3+CD8-PD1-_E",
  "CD3+CD8-PD1+_S",
  "CD3+CD8-PD1+_E",
  "CD3+CD8+PD1-_S",
  "CD3+CD8+PD1-_E",
  "CD3+CD8+PD1+_S",
  "CD3+CD8+PD1+_E",
  "CD3+CD8+FoxP3+_S",
  "CD3+CD8+FoxP3+_E",
  "CD3+CD8-FoxP3+_S",
  "CD3+CD8-FoxP3+_E",
  "CD68+PDL1-_S",
  "CD68+PDL1-_E",
  "CD68+PDL1+_S",
  "CD68+PDL1+_E",
  "CD79a+CD20+_S",
  "CD79a+CD20+_E",
  "CD79a+CD20-_S",
  "CD79a+CD20-_E")

#split the rows by cell type
row_split <- c(rep("CD8-", 6),
               rep("CD8+", 6),
               rep("T reg", 2),
               rep("Macrophage", 4), 
               rep("B cell", 4))[match(colnames(H1), H1_row_order)]

#legend color breaks
col_fun <- colorRamp2(c(0,2,4), c("#2c7bb6", "#ffffbf", "#d7191c"))

#Cluster labels
clust_labels <- paste("C",1:5, " (", table(new_clusters), ")", sep="")

#Row names
row_names <- gsub("+", "<sup>+</sup>", colnames(H1), fixed = TRUE) %>%
  gsub("-", "<sup>-</sup>", ., fixed = TRUE) %>%
  gsub("_E", "", .) %>%
  gsub("_S", "", .)

lgd = Legend(labels = c("Stromal", "Intraepithelial"),
             title = "Cell Location", legend_gp = gpar(fill = c("#3C5488FF","#DC0000FF")),
             nrow = 1)

heatmap1 <- Heatmap(
  t(H1),
  # name = "hey",
  row_split = factor(
    row_split,
    levels = c("CD8+", "CD8-", "T reg", "Macrophage", "B cell")
  ),
  row_labels = gt_render(row_names),
  row_names_gp = gpar(col = c(rep(c("#3C5488FF","#DC0000FF"), times = 12), "#DC0000FF")[match(colnames(H1), H1_row_order)]),
  column_split = sort(new_clusters),
  row_order = H1_row_order,
  row_gap = unit(2.5, "mm"),
  cluster_row_slices = FALSE,
  show_column_names = FALSE,
  cluster_columns = FALSE,
  top_annotation = HeatmapAnnotation(cluster = anno_block(
    gp = gpar(fill = pal_npg()(5)),
    labels = clust_labels,
    labels_gp = gpar(col ="white", fontsize = 10)
  )),
  heatmap_legend_param = list(
    title = gt_render("log<sub>10</sub>(cells/mm<sup>2</sup> + 0.1)"),
    legend_width = unit(6, "cm"),
    direction = "horizontal",
    at = c(-1, 0, 1, 2, 3, 4)
  ),
  col = col_fun,
  column_title = NULL,
  border = TRUE
)
```


```{r, fig.width=7, fig.height=7}
draw(heatmap1, heatmap_legend_side = "bottom")
draw(lgd, x=unit(0.8, "npc"), y=unit(0.05, "npc"))
```

## Boxplots by TME

```{r, message=FALSE}
DENSITIES_LONGER <- DENSITIES_LOGGED_FINAL %>% select(-avg_str_prop) %>%
  mutate(cluster_ID = factor(cluster_ID)) %>%
  pivot_longer(cols=-c("cluster_ID", "pNum"), names_sep = "_", names_to=c("density", "location"))
DENSITIES_LONGER$density <- gsub("p", "+", DENSITIES_LONGER$density, fixed=TRUE) %>%
  gsub("n", "-", ., fixed = TRUE) %>%
  gsub("CD20+", "CD79a+CD20+", ., fixed = TRUE) %>%
  replace(., .=="CD3+CD8-", "CD3+CD8-FoxP3-") %>%
  replace(., .=="CD79A+CD20-", "CD79a+CD20-") %>%
  replace(., .=="CD68-PDL1-PD1+", "CD3-CD8-PD1+") %>%
  replace(., .=="PDL1pCKp", "PDL1+CK+")

# add jitter..
DENSITIES_LONGER <- DENSITIES_LONGER %>% group_by(density, location, cluster_ID) %>%
  mutate(outlier = value > median(value) + 
           IQR(value)*1.5 | value < median(value) -
           IQR(value)*1.5) 


T_cells = c("CD3+CD8-FoxP3-", "CD3+CD8-PD1-", "CD3+CD8-PD1+", "CD3+CD8+PD1-", "CD3+CD8+PD1+", "CD3+CD8-FoxP3+", "CD3+CD8+FoxP3+")

T_cells_subset = c("CD3+CD8-PD1-", "CD3+CD8-PD1+", "CD3+CD8+PD1-", "CD3+CD8+PD1+", "CD3+CD8+FoxP3+")
B_cells = c("CD79a+CD20+", "CD79a+CD20-")
Mac = c("CD68+PDL1+", "CD68+PDL1-")
other = "PDL1+CK+"

stats <- DENSITIES_LONGER %>% group_by(density, location) %>% t_test(value ~ cluster_ID) %>% add_xy_position()

median_densities <- DENSITIES_LONGER %>% group_by(density, location, cluster_ID) %>% summarise(median_density = median(value)) %>% pivot_wider(names_from = cluster_ID, values_from = median_density, names_prefix="cluster_")

make_label <- function(value) {
x <- as.character(value)
bquote(x)
}

plot_labeller <- function(variable, value) { do.call(expression, lapply(levels(value), make_label)) }

T_cell_boxplots <- DENSITIES_LONGER %>%
  filter(density %in% T_cells) %>%
  mutate(density = ordered(density, levels=T_cells)) %>%
ggplot(aes(x=cluster_ID, y=value))+ geom_boxplot(outlier.shape = NA, position=position_dodge(2))+
  facet_grid(location~density, switch = "y", labeller = label_parsed)+
  geom_jitter(data = function(x) dplyr::filter(x, outlier), height=0, width = 0.1, alpha=0.5)+ labs(y=NULL, x=NULL)+ theme_cowplot(12)

T_cell_subset_boxplots <- DENSITIES_LONGER %>%
  filter(density %in% T_cells_subset) %>%
  mutate(density = ordered(density, levels=T_cells)) %>%
  ggplot(aes(x=cluster_ID, y=value))+
  geom_boxplot(outlier.shape = NA, position=position_dodge(2))+ facet_grid(location~density, switch = "y", labeller = labeller(density = function(x) gsub("CD3+","",x, fixed = TRUE)))+
  geom_jitter(data = function(x) dplyr::filter(x, outlier), height=0, width = 0.1, alpha=0.5)+
  labs(y=NULL, x=NULL)+ theme_cowplot(12)

B_cell_boxplots <- DENSITIES_LONGER %>%
  filter(density %in% B_cells) %>%
  ggplot(aes(x=cluster_ID, y=value))+ geom_boxplot(outlier.shape = NA, position=position_dodge(2))+
  facet_grid(location~density, switch = "y")+
  geom_jitter(data = function(x) dplyr::filter(x, outlier), height=0, width = 0.1, alpha=0.5)+ labs(y=NULL, x=NULL)+
  theme_cowplot(12)

Mac_boxplots <- DENSITIES_LONGER %>%
  filter(density %in% Mac) %>%
  ggplot(aes(x=cluster_ID, y=value))+
  geom_boxplot(outlier.shape = NA, position=position_dodge(2))+
  facet_grid(location~density, switch = "y")+
  geom_jitter(data = function(x) dplyr::filter(x, outlier), height=0, width = 0.1, alpha=0.5)+
  labs(y=NULL, x=NULL)+
  theme_cowplot(12)

other_boxplot <- DENSITIES_LONGER %>%
  filter(density %in% other) %>%
  ggplot(aes(x=cluster_ID, y=value))+
  geom_boxplot(outlier.shape = NA, position=position_dodge(2))+
  facet_grid(location~density, switch = "y")+
  geom_jitter(data = function(x) dplyr::filter(x, outlier), height=0, width = 0.1, alpha=0.5)+
  labs(y=NULL, x=NULL)+
  theme_cowplot(12)

yleft = richtext_grob("log<sub>*10*</sub>(cells/mm<sup>*2*</sup>+0.1)", rot=90)
xbottom = richtext_grob("TME")

# gridExtra::grid.arrange(grobs = list(T_cell_boxplots, B_cell_boxplots, Mac_boxplots, other_boxplot), layout_matrix = rbind(c(1,1,1,1,1), c(1,1,1,1,1), c(1,1,1,1,1), c(2,2,3,3,4), c(2,2,3,3,4)), left=yleft, bottom=xbottom)

gridExtra::grid.arrange(grobs = list(T_cell_subset_boxplots, B_cell_boxplots, Mac_boxplots), layout_matrix = rbind(c(1,1,1,1), c(1,1,1,1), c(2,2,3,3), c(2,2,3,3)), left=yleft, bottom=xbottom)
```
## Epithelial area by TME

```{r}
EPI_PROP <- DENSITIES_LOGGED_FINAL %>% left_join(., COMBINED_PANEL_DENSITIES %>% select(pNum, avg_epi_prop))

anova_epi_prop <- EPI_PROP %>%
  mutate(cluster_ID = factor(cluster_ID)) %>%
  tukey_hsd(avg_epi_prop ~ cluster_ID) %>%
  add_xy_position()

EPI_PROP %>% ggplot(aes(x=factor(cluster_ID), y=avg_epi_prop))+
  geom_boxplot()+
  ggtitle("Average proportion of epithelial tissue per case, by TME")+
  xlab("TME")+
  ylab("Epithelial area/Total core area (%)")+
  stat_pvalue_manual(data=anova_epi_prop, hide.ns=T, 
                     remove.bracket = F,
                     step.increase = 0.05)+
  labs(caption="P-values from Tukey HSD test, adjusted for multiple testing")+
  theme_minimal()
```

## Association between immune cell density and epithelial area

All densities are negatively associated with epithelial area (more epithelium than stroma = lower densities),
except for PDL1p macrophages. P-values in the table not adjusted for multiple testing.

```{r}
cell_types <- c("CD3pCD8nPD1n_S", "CD3pCD8nPD1n_E", "CD3pCD8nPD1p_S", 
"CD3pCD8nPD1p_E", "CD3pCD8pPD1n_S", "CD3pCD8pPD1n_E", "CD3pCD8pPD1p_S", 
"CD3pCD8pPD1p_E", "CD68nPDL1nPD1p_S", "CD68nPDL1nPD1p_E", "CD68pPDL1n_S", 
"CD68pPDL1n_E", "CD68pPDL1p_S", "CD68pPDL1p_E", "PDL1pCKp_E", 
"CD3pCD8n_E", "CD3pCD8n_S", "CD3pCD8nFoxP3p_E", "CD3pCD8nFoxP3p_S", 
"CD20p_E", "CD20p_S", "CD3pCD8pFoxP3p_E", "CD3pCD8pFoxP3p_S", 
"CD79ApCD20n_E", "CD79ApCD20n_S")

DENSITIES_LOGGED_FINAL <- DENSITIES_LOGGED_FINAL %>% left_join(., COMBINED_PANEL_DENSITIES %>% select(pNum, avg_epi_prop))

density_stroma_lm <- list()
for(celltype in cell_types){
  reg_formula = formula(paste0(celltype, "~ avg_epi_prop"))
  
  model <- lm(reg_formula, data=DENSITIES_LOGGED_FINAL)
  model_summary <- tidy(model)
  
  density_stroma_lm[[celltype]] <- data.frame(CellType = celltype,
                                              estimate = model_summary$estimate[2],
                                              p = model_summary$estimate[2])
}

density_stroma_lm <- bind_rows(density_stroma_lm)
density_stroma_lm$p <- format.pval(density_stroma_lm$p, digits=3)

density_stroma_lm$CellType <- gsub("p", "+", density_stroma_lm$CellType, fixed=TRUE) %>%
  gsub("n", "-", ., fixed = TRUE) %>%
  gsub("CD20+", "CD79a+CD20+", ., fixed = TRUE) %>%
  replace(., .=="CD3+CD8-", "CD3+CD8-FoxP3-") %>%
  replace(., .=="CD79A+CD20-", "CD79a+CD20-") %>%
  replace(., .=="CD68-PDL1-PD1+", "CD3-CD8-PD1+") %>%
  replace(., .=="PDL1pCKp", "PDL1+CK+")

density_stroma_lm %>% kableExtra::kbl(col.names = c("Cell Type", "Effect Size", "P value")) %>%
  kable_paper()
```

