[
  {
    "objectID": "COEUR/Results/Clustering/COEUR_Clustering.html",
    "href": "COEUR/Results/Clustering/COEUR_Clustering.html",
    "title": "Clustering COEUR data into distinct tumor microenvironments",
    "section": "",
    "text": "Code\n# Combined densities (ADAPT AND BT panels), cells/mm2\nCOMBINED_PANEL_DENSITIES &lt;- read.csv(\"../../Final_Data/COMBINED_PANELS_DENSITIES_08NOV22.csv\")\n\n\nThere data that I am loading contains cell densities that have been aggregated between the two mcIF panels. For each panel, cell counts and areas were summed between the two cores per patient and divided by the summed stromal/epithelial/stromal+epithelial area to calculate densities (cells/mm^2).\nTable 1: Cell types scored\n\n\n\nMarker\nCell Type\nPanel\n\n\n\n\nCD3+CD8+PD1+\nCD8+PD1+ T cell\nAdaptive\n\n\nCD3+CD8+PD1-\nCD8+PD1- T cell\nAdaptive\n\n\nCD3+CD8-PD1+\nCD8-PD1+ T cell\nAdaptive\n\n\nCD3+CD8+PD1-\nCD8+PD1- T cell\nAdaptive\n\n\nCD3+CD8-FoxP3+\nT regulatory\nB and T cell panel\n\n\nCD68+PDL1+\nPDL1+ macrophage\nAdaptive\n\n\nCD68+PDL1-\nPDL1+ macrophage\nAdaptive\n\n\nCD79a+CD20+\nB cell\nB and T cell panel\n\n\nCD79a+CD20-\nPlasma cell\nB and T cell panel\n\n\n\n\n\nCode\n# This is the list of patients that are (1) pre-chemo (2) have outcomes data\nfinal_pNum &lt;- read.csv(\"../../Final_Data/final_pNum.csv\") %&gt;% .[,1]\nlength(final_pNum)\n\n\n[1] 981\n\n\nFron the outcome data, there are 981/1064 patients that are pre-treatment and have overall survival data (which I will need for survival analysis) - only these patients will be considered in the clustering."
  },
  {
    "objectID": "COEUR/Results/Clustering/COEUR_Clustering.html#load-data-and-clean-it-up-a-bit",
    "href": "COEUR/Results/Clustering/COEUR_Clustering.html#load-data-and-clean-it-up-a-bit",
    "title": "Clustering COEUR data into distinct tumor microenvironments",
    "section": "",
    "text": "Code\n# Combined densities (ADAPT AND BT panels), cells/mm2\nCOMBINED_PANEL_DENSITIES &lt;- read.csv(\"../../Final_Data/COMBINED_PANELS_DENSITIES_08NOV22.csv\")\n\n\nThere data that I am loading contains cell densities that have been aggregated between the two mcIF panels. For each panel, cell counts and areas were summed between the two cores per patient and divided by the summed stromal/epithelial/stromal+epithelial area to calculate densities (cells/mm^2).\nTable 1: Cell types scored\n\n\n\nMarker\nCell Type\nPanel\n\n\n\n\nCD3+CD8+PD1+\nCD8+PD1+ T cell\nAdaptive\n\n\nCD3+CD8+PD1-\nCD8+PD1- T cell\nAdaptive\n\n\nCD3+CD8-PD1+\nCD8-PD1+ T cell\nAdaptive\n\n\nCD3+CD8+PD1-\nCD8+PD1- T cell\nAdaptive\n\n\nCD3+CD8-FoxP3+\nT regulatory\nB and T cell panel\n\n\nCD68+PDL1+\nPDL1+ macrophage\nAdaptive\n\n\nCD68+PDL1-\nPDL1+ macrophage\nAdaptive\n\n\nCD79a+CD20+\nB cell\nB and T cell panel\n\n\nCD79a+CD20-\nPlasma cell\nB and T cell panel\n\n\n\n\n\nCode\n# This is the list of patients that are (1) pre-chemo (2) have outcomes data\nfinal_pNum &lt;- read.csv(\"../../Final_Data/final_pNum.csv\") %&gt;% .[,1]\nlength(final_pNum)\n\n\n[1] 981\n\n\nFron the outcome data, there are 981/1064 patients that are pre-treatment and have overall survival data (which I will need for survival analysis) - only these patients will be considered in the clustering."
  },
  {
    "objectID": "COEUR/Results/Clustering/COEUR_Clustering.html#format-data-for-clustering",
    "href": "COEUR/Results/Clustering/COEUR_Clustering.html#format-data-for-clustering",
    "title": "Clustering COEUR data into distinct tumor microenvironments",
    "section": "Format data for clustering",
    "text": "Format data for clustering\nHere I remove the area (stroma, epithelial and proportions of) columns from the data. I also remove PDL1pCK+ cells, and CD3+CD8+- scores from the B and T panel, as I am quantifying PD1+/PD1- subsets of this population in the adaptive panel.\nI also log10 transform the data, with a small offset of 0.1 to deal with zeroes.\n\n\nCode\n# Remove tissue proportion data, and cell types that are redundant (ie. the CD3CD8- calls from the BT panel)\nDENSITIES_BY_TISSUE &lt;- COMBINED_PANEL_DENSITIES %&gt;% select(-contains(\"area\")) %&gt;%\n  select(-PDL1pCKp_S, -BT_str_prop, -BT_epi_prop, -ADAPT_epi_prop, -ADAPT_str_prop, -avg_epi_prop) %&gt;%\n  select(-CD3pCD8p_S,-CD3pCD8p_E)\n\nDENSITIES_LOGGED &lt;- DENSITIES_BY_TISSUE %&gt;%\n  mutate(across(-contains(c(\"prop\", \"area\", \"pNum\")), ~log10(.+0.1))) #log all densities"
  },
  {
    "objectID": "COEUR/Results/Clustering/COEUR_Clustering.html#robust-and-sparse-k-means-clustering",
    "href": "COEUR/Results/Clustering/COEUR_Clustering.html#robust-and-sparse-k-means-clustering",
    "title": "Clustering COEUR data into distinct tumor microenvironments",
    "section": "Robust and sparse k-means clustering",
    "text": "Robust and sparse k-means clustering\nI run the robust and sparse k-means algorithm on the 981 patientâ€™s densities, using a k=5.\nThe table shows the number of cases in each cluster.\n\n\nCode\n# Making heatmap with only final patients (n=981) #\n\n# Making a logged densities matrix. I am also removing CD3-PD1p cells here because I am confident in their calls.\n\ndensities_final_m &lt;- DENSITIES_LOGGED %&gt;% \n  filter(pNum %in% final_pNum) %&gt;%\n  select(-contains(c(\"prop\", \"area\")), -PDL1pCKp_E, -CD68nPDL1nPD1p_S, -CD68nPDL1nPD1p_E) %&gt;% \n  column_to_rownames(\"pNum\") %&gt;% \n  as.matrix()\n\n#optimal_n_final &lt;- Clest(densities_final_m, 8, alpha=0.05, beta=0.05) #Trimming 10% of cases, significance level between clusters at least 0.05\n\n#Optimal cluster N is 4 without or with PDL1+CK+\nset.seed(1000)\n#clusters &lt;- RSKC(densities_final_m, 5, alpha=0.05)$labels\n\n# Freeze output\nclusters &lt;- c(2, 3, 3, 2, 1, 3, 3, 3, 4, 2, 5, 3, 3, 1, 4, 2, 5, 4, 4, 1, \n              2, 4, 3, 1, 3, 4, 2, 5, 4, 1, 3, 4, 2, 1, 4, 4, 5, 4, 2, 1, 4, \n              5, 3, 2, 4, 2, 5, 3, 2, 4, 1, 4, 5, 2, 4, 1, 4, 5, 4, 1, 3, 2, \n              4, 3, 5, 1, 4, 3, 2, 3, 1, 5, 5, 5, 4, 5, 3, 5, 4, 4, 1, 1, 3, \n              1, 5, 1, 1, 3, 2, 3, 1, 5, 5, 3, 5, 2, 2, 4, 4, 1, 4, 1, 4, 4, \n              4, 5, 3, 4, 4, 3, 2, 1, 5, 2, 4, 2, 5, 3, 2, 2, 1, 2, 2, 4, 4, \n              2, 4, 1, 5, 5, 3, 5, 4, 2, 5, 1, 3, 5, 2, 2, 3, 5, 1, 4, 1, 4, \n              4, 4, 5, 5, 5, 5, 2, 4, 2, 4, 1, 5, 4, 3, 4, 3, 1, 4, 2, 5, 1, \n              3, 1, 5, 2, 3, 3, 3, 1, 3, 5, 5, 4, 4, 1, 4, 3, 2, 1, 5, 5, 4, \n              3, 3, 2, 4, 4, 4, 2, 5, 4, 4, 3, 3, 3, 4, 1, 2, 4, 2, 1, 2, 4, \n              3, 2, 2, 1, 5, 2, 4, 5, 5, 4, 1, 3, 3, 4, 5, 3, 4, 1, 5, 1, 2, \n              3, 2, 5, 4, 4, 5, 2, 3, 5, 3, 2, 3, 2, 1, 1, 5, 2, 5, 4, 2, 4, \n              3, 1, 5, 1, 4, 4, 4, 4, 3, 4, 4, 4, 2, 3, 2, 5, 3, 4, 4, 5, 2, \n              1, 3, 4, 5, 4, 4, 5, 4, 5, 4, 1, 5, 1, 2, 4, 3, 3, 1, 4, 5, 4, \n              2, 3, 2, 3, 2, 2, 5, 4, 1, 3, 3, 4, 1, 2, 3, 4, 3, 2, 4, 4, 5, \n              1, 1, 3, 1, 4, 2, 2, 3, 5, 2, 3, 4, 5, 2, 4, 3, 4, 4, 4, 5, 4, \n              1, 4, 2, 5, 3, 3, 4, 3, 3, 5, 4, 4, 2, 5, 3, 5, 1, 3, 4, 4, 1, \n              5, 3, 1, 1, 2, 2, 3, 2, 5, 4, 1, 4, 2, 1, 4, 2, 2, 4, 1, 4, 3, \n              1, 3, 1, 4, 4, 5, 4, 3, 1, 1, 3, 1, 2, 3, 4, 1, 5, 1, 2, 5, 4, \n              1, 4, 2, 4, 2, 2, 1, 4, 3, 1, 1, 3, 4, 2, 1, 2, 5, 3, 1, 1, 4, \n              1, 1, 1, 4, 3, 3, 2, 1, 2, 1, 4, 3, 4, 5, 1, 4, 5, 4, 1, 3, 5, \n              4, 5, 2, 4, 1, 5, 4, 1, 1, 5, 2, 3, 5, 1, 5, 4, 5, 4, 2, 3, 3, \n              1, 3, 3, 1, 2, 3, 5, 5, 3, 4, 2, 4, 3, 5, 4, 2, 5, 4, 5, 5, 1, \n              3, 1, 3, 3, 3, 2, 4, 5, 4, 3, 4, 2, 5, 4, 5, 4, 5, 5, 1, 1, 3, \n              1, 2, 5, 3, 4, 4, 4, 1, 4, 3, 3, 4, 2, 2, 3, 4, 2, 3, 5, 5, 5, \n              1, 2, 4, 5, 4, 5, 3, 1, 2, 2, 1, 2, 5, 2, 4, 4, 1, 3, 2, 1, 4, \n              5, 4, 4, 5, 1, 5, 4, 3, 3, 3, 5, 4, 4, 5, 2, 5, 4, 3, 3, 3, 2, \n              5, 5, 4, 3, 5, 1, 3, 4, 4, 1, 5, 2, 1, 2, 5, 1, 1, 4, 5, 5, 4, \n              2, 3, 1, 3, 1, 4, 1, 2, 4, 5, 1, 4, 1, 1, 1, 5, 2, 4, 5, 5, 4, \n              5, 5, 3, 5, 5, 5, 1, 3, 2, 5, 1, 1, 3, 5, 2, 4, 2, 3, 4, 2, 5, \n              5, 4, 5, 3, 1, 4, 5, 5, 3, 5, 5, 1, 1, 5, 1, 4, 3, 2, 3, 5, 1, \n              1, 2, 5, 5, 3, 5, 5, 3, 3, 3, 4, 3, 2, 3, 3, 5, 4, 2, 2, 1, 5, \n              3, 5, 2, 3, 3, 1, 5, 4, 2, 2, 2, 5, 3, 4, 3, 2, 2, 1, 2, 1, 5, \n              5, 1, 2, 2, 3, 2, 5, 4, 4, 1, 4, 2, 2, 2, 1, 4, 4, 5, 2, 5, 4, \n              3, 4, 5, 5, 1, 1, 4, 2, 5, 2, 5, 4, 4, 5, 4, 4, 1, 4, 2, 4, 1, \n              4, 4, 2, 3, 2, 4, 4, 5, 2, 2, 3, 2, 3, 2, 4, 4, 3, 4, 2, 5, 4, \n              3, 5, 5, 4, 1, 4, 5, 2, 1, 4, 3, 4, 1, 3, 1, 3, 5, 1, 3, 3, 1, \n              1, 5, 4, 5, 3, 5, 1, 5, 2, 4, 3, 4, 2, 2, 1, 3, 5, 4, 4, 4, 4, \n              2, 3, 4, 4, 5, 4, 5, 3, 1, 3, 2, 5, 3, 1, 4, 2, 2, 3, 4, 4, 5, \n              5, 5, 4, 5, 2, 1, 2, 4, 2, 4, 5, 5, 2, 5, 2, 2, 5, 2, 4, 4, 5, \n              5, 4, 3, 5, 3, 2, 5, 5, 1, 3, 5, 4, 5, 4, 4, 1, 3, 5, 4, 3, 4, \n              3, 5, 3, 2, 5, 2, 2, 3, 3, 4, 5, 2, 4, 4, 3, 4, 5, 4, 4, 5, 1, \n              4, 4, 1, 1, 3, 4, 3, 3, 4, 3, 2, 4, 3, 5, 4, 2, 4, 5, 3, 5, 5, \n              5, 1, 2, 2, 5, 1, 4, 3, 5, 2, 1, 4, 5, 2, 4, 5, 2, 5, 1, 3, 3, \n              1, 5, 5, 2, 5, 2, 3, 3, 4, 1, 3, 3, 3, 5, 4, 3, 5, 1, 1, 4, 1, \n              5, 1, 5, 1, 5, 4, 4, 5, 5, 1, 5, 2, 4, 1, 3, 5, 1, 5, 3, 3, 5, \n              2, 5, 4, 5, 4, 4, 1, 3, 3, 5, 1, 1, 1, 2, 1, 3)\n\n# Change order of labels. 2 -&gt; 1, 5 -&gt; 2, 3 -&gt;3, 4 -&gt; 4, 1 -&gt; 5\nnew_clusters &lt;- recode(clusters, '3' = 1L, '1' = 2L, '2' = 3L, '4' = 4L, '5' = 5L)\n\n#new densities DF with clusters\nDENSITIES_LOGGED_FINAL &lt;- DENSITIES_LOGGED %&gt;% filter(pNum %in% final_pNum) %&gt;% \n  mutate(cluster_ID = new_clusters)\n\ntable(DENSITIES_LOGGED_FINAL$cluster_ID)\n\n\n\n  1   2   3   4   5 \n187 167 169 245 213"
  },
  {
    "objectID": "COEUR/Results/Clustering/COEUR_Clustering.html#heatmap-plotting",
    "href": "COEUR/Results/Clustering/COEUR_Clustering.html#heatmap-plotting",
    "title": "Clustering COEUR data into distinct tumor microenvironments",
    "section": "Heatmap plotting",
    "text": "Heatmap plotting\n\n\nCode\n# subset data to only include densities\nH1 &lt;- DENSITIES_LOGGED_FINAL %&gt;%\n  mutate(clusterID = new_clusters) %&gt;%\n  arrange(clusterID) %&gt;%\n  select(-contains(c(\"prop\", \"category\", \"cluster\", \"ratio\")), -CD68nPDL1nPD1p_S, -CD68nPDL1nPD1p_E, -PDL1pCKp_E) %&gt;% column_to_rownames(\"pNum\")\n\n#renaming the columns so that they're prettier\ncolnames(H1) &lt;- gsub(\"p\", \"+\", colnames(H1))\ncolnames(H1) &lt;- gsub(\"n\", \"-\", colnames(H1))\nH1 &lt;- dplyr::rename(H1, \"CD79a+CD20+_E\" = \"CD20+_E\",\n                       \"CD79a+CD20+_S\" = \"CD20+_S\",\n                   \"CD79a+CD20-_E\" = \"CD79A+CD20-_E\",\n                        \"CD79a+CD20-_S\" = \"CD79A+CD20-_S\",\n                   \"CD3+CD8-FoxP3-_E\" = \"CD3+CD8-_E\",\n                   \"CD3+CD8-FoxP3-_S\" = \"CD3+CD8-_S\")\n\n#the order of the rows (grouped by cell type)\nH1_row_order &lt;- c(\n  \"CD3+CD8-FoxP3-_S\", \n  \"CD3+CD8-FoxP3-_E\",\n  \"CD3+CD8-PD1-_S\",\n  \"CD3+CD8-PD1-_E\",\n  \"CD3+CD8-PD1+_S\",\n  \"CD3+CD8-PD1+_E\",\n  \"CD3+CD8+PD1-_S\",\n  \"CD3+CD8+PD1-_E\",\n  \"CD3+CD8+PD1+_S\",\n  \"CD3+CD8+PD1+_E\",\n  \"CD3+CD8+FoxP3+_S\",\n  \"CD3+CD8+FoxP3+_E\",\n  \"CD3+CD8-FoxP3+_S\",\n  \"CD3+CD8-FoxP3+_E\",\n  \"CD68+PDL1-_S\",\n  \"CD68+PDL1-_E\",\n  \"CD68+PDL1+_S\",\n  \"CD68+PDL1+_E\",\n  \"CD79a+CD20+_S\",\n  \"CD79a+CD20+_E\",\n  \"CD79a+CD20-_S\",\n  \"CD79a+CD20-_E\")\n\n#split the rows by cell type\nrow_split &lt;- c(rep(\"CD8-\", 6),\n               rep(\"CD8+\", 6),\n               rep(\"T reg\", 2),\n               rep(\"Macrophage\", 4), \n               rep(\"B cell\", 4))[match(colnames(H1), H1_row_order)]\n\n#legend color breaks\ncol_fun &lt;- colorRamp2(c(0,2,4), c(\"#2c7bb6\", \"#ffffbf\", \"#d7191c\"))\n\n#Cluster labels\nclust_labels &lt;- paste(\"C\",1:5, \" (\", table(new_clusters), \")\", sep=\"\")\n\n#Row names\nrow_names &lt;- gsub(\"+\", \"&lt;sup&gt;+&lt;/sup&gt;\", colnames(H1), fixed = TRUE) %&gt;%\n  gsub(\"-\", \"&lt;sup&gt;-&lt;/sup&gt;\", ., fixed = TRUE) %&gt;%\n  gsub(\"_E\", \"\", .) %&gt;%\n  gsub(\"_S\", \"\", .)\n\nlgd = Legend(labels = c(\"Stromal\", \"Intraepithelial\"),\n             title = \"Cell Location\", legend_gp = gpar(fill = c(\"#3C5488FF\",\"#DC0000FF\")),\n             nrow = 1)\n\nheatmap1 &lt;- Heatmap(\n  t(H1),\n  # name = \"hey\",\n  row_split = factor(\n    row_split,\n    levels = c(\"CD8+\", \"CD8-\", \"T reg\", \"Macrophage\", \"B cell\")\n  ),\n  row_labels = gt_render(row_names),\n  row_names_gp = gpar(col = c(rep(c(\"#3C5488FF\",\"#DC0000FF\"), times = 12), \"#DC0000FF\")[match(colnames(H1), H1_row_order)]),\n  column_split = sort(new_clusters),\n  row_order = H1_row_order,\n  row_gap = unit(2.5, \"mm\"),\n  cluster_row_slices = FALSE,\n  show_column_names = FALSE,\n  cluster_columns = FALSE,\n  top_annotation = HeatmapAnnotation(cluster = anno_block(\n    gp = gpar(fill = pal_npg()(5)),\n    labels = clust_labels,\n    labels_gp = gpar(col =\"white\", fontsize = 10)\n  )),\n  heatmap_legend_param = list(\n    title = gt_render(\"log&lt;sub&gt;10&lt;/sub&gt;(cells/mm&lt;sup&gt;2&lt;/sup&gt; + 0.1)\"),\n    legend_width = unit(6, \"cm\"),\n    direction = \"horizontal\",\n    at = c(-1, 0, 1, 2, 3, 4)\n  ),\n  col = col_fun,\n  column_title = NULL,\n  border = TRUE\n)\n\n\n\n\nCode\ndraw(heatmap1, heatmap_legend_side = \"bottom\")\ndraw(lgd, x=unit(0.8, \"npc\"), y=unit(0.05, \"npc\"))"
  },
  {
    "objectID": "COEUR/Results/Clustering/COEUR_Clustering.html#boxplots-by-tme",
    "href": "COEUR/Results/Clustering/COEUR_Clustering.html#boxplots-by-tme",
    "title": "Clustering COEUR data into distinct tumor microenvironments",
    "section": "Boxplots by TME",
    "text": "Boxplots by TME\n\n\nCode\nDENSITIES_LONGER &lt;- DENSITIES_LOGGED_FINAL %&gt;% select(-avg_str_prop) %&gt;%\n  mutate(cluster_ID = factor(cluster_ID)) %&gt;%\n  pivot_longer(cols=-c(\"cluster_ID\", \"pNum\"), names_sep = \"_\", names_to=c(\"density\", \"location\"))\nDENSITIES_LONGER$density &lt;- gsub(\"p\", \"+\", DENSITIES_LONGER$density, fixed=TRUE) %&gt;%\n  gsub(\"n\", \"-\", ., fixed = TRUE) %&gt;%\n  gsub(\"CD20+\", \"CD79a+CD20+\", ., fixed = TRUE) %&gt;%\n  replace(., .==\"CD3+CD8-\", \"CD3+CD8-FoxP3-\") %&gt;%\n  replace(., .==\"CD79A+CD20-\", \"CD79a+CD20-\") %&gt;%\n  replace(., .==\"CD68-PDL1-PD1+\", \"CD3-CD8-PD1+\") %&gt;%\n  replace(., .==\"PDL1pCKp\", \"PDL1+CK+\")\n\n# add jitter..\nDENSITIES_LONGER &lt;- DENSITIES_LONGER %&gt;% group_by(density, location, cluster_ID) %&gt;%\n  mutate(outlier = value &gt; median(value) + \n           IQR(value)*1.5 | value &lt; median(value) -\n           IQR(value)*1.5) \n\n\nT_cells = c(\"CD3+CD8-FoxP3-\", \"CD3+CD8-PD1-\", \"CD3+CD8-PD1+\", \"CD3+CD8+PD1-\", \"CD3+CD8+PD1+\", \"CD3+CD8-FoxP3+\", \"CD3+CD8+FoxP3+\")\n\nT_cells_subset = c(\"CD3+CD8-PD1-\", \"CD3+CD8-PD1+\", \"CD3+CD8+PD1-\", \"CD3+CD8+PD1+\", \"CD3+CD8+FoxP3+\")\nB_cells = c(\"CD79a+CD20+\", \"CD79a+CD20-\")\nMac = c(\"CD68+PDL1+\", \"CD68+PDL1-\")\nother = \"PDL1+CK+\"\n\nstats &lt;- DENSITIES_LONGER %&gt;% group_by(density, location) %&gt;% t_test(value ~ cluster_ID) %&gt;% add_xy_position()\n\nmedian_densities &lt;- DENSITIES_LONGER %&gt;% group_by(density, location, cluster_ID) %&gt;% summarise(median_density = median(value)) %&gt;% pivot_wider(names_from = cluster_ID, values_from = median_density, names_prefix=\"cluster_\")\n\nmake_label &lt;- function(value) {\nx &lt;- as.character(value)\nbquote(x)\n}\n\nplot_labeller &lt;- function(variable, value) { do.call(expression, lapply(levels(value), make_label)) }\n\nT_cell_boxplots &lt;- DENSITIES_LONGER %&gt;%\n  filter(density %in% T_cells) %&gt;%\n  mutate(density = ordered(density, levels=T_cells)) %&gt;%\nggplot(aes(x=cluster_ID, y=value))+ geom_boxplot(outlier.shape = NA, position=position_dodge(2))+\n  facet_grid(location~density, switch = \"y\", labeller = label_parsed)+\n  geom_jitter(data = function(x) dplyr::filter(x, outlier), height=0, width = 0.1, alpha=0.5)+ labs(y=NULL, x=NULL)+ theme_cowplot(12)\n\nT_cell_subset_boxplots &lt;- DENSITIES_LONGER %&gt;%\n  filter(density %in% T_cells_subset) %&gt;%\n  mutate(density = ordered(density, levels=T_cells)) %&gt;%\n  ggplot(aes(x=cluster_ID, y=value))+\n  geom_boxplot(outlier.shape = NA, position=position_dodge(2))+ facet_grid(location~density, switch = \"y\", labeller = labeller(density = function(x) gsub(\"CD3+\",\"\",x, fixed = TRUE)))+\n  geom_jitter(data = function(x) dplyr::filter(x, outlier), height=0, width = 0.1, alpha=0.5)+\n  labs(y=NULL, x=NULL)+ theme_cowplot(12)\n\nB_cell_boxplots &lt;- DENSITIES_LONGER %&gt;%\n  filter(density %in% B_cells) %&gt;%\n  ggplot(aes(x=cluster_ID, y=value))+ geom_boxplot(outlier.shape = NA, position=position_dodge(2))+\n  facet_grid(location~density, switch = \"y\")+\n  geom_jitter(data = function(x) dplyr::filter(x, outlier), height=0, width = 0.1, alpha=0.5)+ labs(y=NULL, x=NULL)+\n  theme_cowplot(12)\n\nMac_boxplots &lt;- DENSITIES_LONGER %&gt;%\n  filter(density %in% Mac) %&gt;%\n  ggplot(aes(x=cluster_ID, y=value))+\n  geom_boxplot(outlier.shape = NA, position=position_dodge(2))+\n  facet_grid(location~density, switch = \"y\")+\n  geom_jitter(data = function(x) dplyr::filter(x, outlier), height=0, width = 0.1, alpha=0.5)+\n  labs(y=NULL, x=NULL)+\n  theme_cowplot(12)\n\nother_boxplot &lt;- DENSITIES_LONGER %&gt;%\n  filter(density %in% other) %&gt;%\n  ggplot(aes(x=cluster_ID, y=value))+\n  geom_boxplot(outlier.shape = NA, position=position_dodge(2))+\n  facet_grid(location~density, switch = \"y\")+\n  geom_jitter(data = function(x) dplyr::filter(x, outlier), height=0, width = 0.1, alpha=0.5)+\n  labs(y=NULL, x=NULL)+\n  theme_cowplot(12)\n\nyleft = richtext_grob(\"log&lt;sub&gt;*10*&lt;/sub&gt;(cells/mm&lt;sup&gt;*2*&lt;/sup&gt;+0.1)\", rot=90)\nxbottom = richtext_grob(\"TME\")\n\n# gridExtra::grid.arrange(grobs = list(T_cell_boxplots, B_cell_boxplots, Mac_boxplots, other_boxplot), layout_matrix = rbind(c(1,1,1,1,1), c(1,1,1,1,1), c(1,1,1,1,1), c(2,2,3,3,4), c(2,2,3,3,4)), left=yleft, bottom=xbottom)\n\ngridExtra::grid.arrange(grobs = list(T_cell_subset_boxplots, B_cell_boxplots, Mac_boxplots), layout_matrix = rbind(c(1,1,1,1), c(1,1,1,1), c(2,2,3,3), c(2,2,3,3)), left=yleft, bottom=xbottom)"
  },
  {
    "objectID": "COEUR/Results/Clustering/COEUR_Clustering.html#epithelial-area-by-tme",
    "href": "COEUR/Results/Clustering/COEUR_Clustering.html#epithelial-area-by-tme",
    "title": "Clustering COEUR data into distinct tumor microenvironments",
    "section": "Epithelial area by TME",
    "text": "Epithelial area by TME\n\n\nCode\nEPI_PROP &lt;- DENSITIES_LOGGED_FINAL %&gt;% left_join(., COMBINED_PANEL_DENSITIES %&gt;% select(pNum, avg_epi_prop))\n\n\nJoining, by = \"pNum\"\n\n\nCode\nanova_epi_prop &lt;- EPI_PROP %&gt;%\n  mutate(cluster_ID = factor(cluster_ID)) %&gt;%\n  tukey_hsd(avg_epi_prop ~ cluster_ID) %&gt;%\n  add_xy_position()\n\nEPI_PROP %&gt;% ggplot(aes(x=factor(cluster_ID), y=avg_epi_prop))+\n  geom_boxplot()+\n  ggtitle(\"Average proportion of epithelial tissue per case, by TME\")+\n  xlab(\"TME\")+\n  ylab(\"Epithelial area/Total core area (%)\")+\n  stat_pvalue_manual(data=anova_epi_prop, hide.ns=T, \n                     remove.bracket = F,\n                     step.increase = 0.05)+\n  labs(caption=\"P-values from Tukey HSD test, adjusted for multiple testing\")+\n  theme_minimal()"
  },
  {
    "objectID": "COEUR/Results/Clustering/COEUR_Clustering.html#association-between-immune-cell-density-and-epithelial-area",
    "href": "COEUR/Results/Clustering/COEUR_Clustering.html#association-between-immune-cell-density-and-epithelial-area",
    "title": "Clustering COEUR data into distinct tumor microenvironments",
    "section": "Association between immune cell density and epithelial area",
    "text": "Association between immune cell density and epithelial area\nAll densities are negatively associated with epithelial area (more epithelium than stroma = lower densities), except for PDL1p macrophages. P-values in the table not adjusted for multiple testing.\n\n\nCode\ncell_types &lt;- c(\"CD3pCD8nPD1n_S\", \"CD3pCD8nPD1n_E\", \"CD3pCD8nPD1p_S\", \n\"CD3pCD8nPD1p_E\", \"CD3pCD8pPD1n_S\", \"CD3pCD8pPD1n_E\", \"CD3pCD8pPD1p_S\", \n\"CD3pCD8pPD1p_E\", \"CD68nPDL1nPD1p_S\", \"CD68nPDL1nPD1p_E\", \"CD68pPDL1n_S\", \n\"CD68pPDL1n_E\", \"CD68pPDL1p_S\", \"CD68pPDL1p_E\", \"PDL1pCKp_E\", \n\"CD3pCD8n_E\", \"CD3pCD8n_S\", \"CD3pCD8nFoxP3p_E\", \"CD3pCD8nFoxP3p_S\", \n\"CD20p_E\", \"CD20p_S\", \"CD3pCD8pFoxP3p_E\", \"CD3pCD8pFoxP3p_S\", \n\"CD79ApCD20n_E\", \"CD79ApCD20n_S\")\n\nDENSITIES_LOGGED_FINAL &lt;- DENSITIES_LOGGED_FINAL %&gt;% left_join(., COMBINED_PANEL_DENSITIES %&gt;% select(pNum, avg_epi_prop))\n\n\nJoining, by = \"pNum\"\n\n\nCode\ndensity_stroma_lm &lt;- list()\nfor(celltype in cell_types){\n  reg_formula = formula(paste0(celltype, \"~ avg_epi_prop\"))\n  \n  model &lt;- lm(reg_formula, data=DENSITIES_LOGGED_FINAL)\n  model_summary &lt;- tidy(model)\n  \n  density_stroma_lm[[celltype]] &lt;- data.frame(CellType = celltype,\n                                              estimate = model_summary$estimate[2],\n                                              p = model_summary$estimate[2])\n}\n\ndensity_stroma_lm &lt;- bind_rows(density_stroma_lm)\ndensity_stroma_lm$p &lt;- format.pval(density_stroma_lm$p, digits=3)\n\ndensity_stroma_lm$CellType &lt;- gsub(\"p\", \"+\", density_stroma_lm$CellType, fixed=TRUE) %&gt;%\n  gsub(\"n\", \"-\", ., fixed = TRUE) %&gt;%\n  gsub(\"CD20+\", \"CD79a+CD20+\", ., fixed = TRUE) %&gt;%\n  replace(., .==\"CD3+CD8-\", \"CD3+CD8-FoxP3-\") %&gt;%\n  replace(., .==\"CD79A+CD20-\", \"CD79a+CD20-\") %&gt;%\n  replace(., .==\"CD68-PDL1-PD1+\", \"CD3-CD8-PD1+\") %&gt;%\n  replace(., .==\"PDL1pCKp\", \"PDL1+CK+\")\n\ndensity_stroma_lm %&gt;% kableExtra::kbl(col.names = c(\"Cell Type\", \"Effect Size\", \"P value\")) %&gt;%\n  kable_paper()\n\n\n\n\n\nCell Type\nEffect Size\nP value\n\n\n\n\nCD3+CD8-PD1-_S\n-0.0036033\n&lt; 2e-16\n\n\nCD3+CD8-PD1-_E\n-0.0001883\n&lt; 2e-16\n\n\nCD3+CD8-PD1+_S\n-0.0096121\n&lt; 2e-16\n\n\nCD3+CD8-PD1+_E\n-0.0000632\n&lt; 2e-16\n\n\nCD3+CD8+PD1-_S\n-0.0100398\n&lt; 2e-16\n\n\nCD3+CD8+PD1-_E\n-0.0042755\n&lt; 2e-16\n\n\nCD3+CD8+PD1+_S\n-0.0110333\n&lt; 2e-16\n\n\nCD3+CD8+PD1+_E\n-0.0026931\n&lt; 2e-16\n\n\nCD68-PDL1-PD1+_S\n-0.0134121\n&lt; 2e-16\n\n\nCD68-PDL1-PD1+_E\n-0.0039378\n&lt; 2e-16\n\n\nCD68+PDL1-_S\n-0.0024194\n&lt; 2e-16\n\n\nCD68+PDL1-_E\n-0.0014233\n&lt; 2e-16\n\n\nCD68+PDL1+_S\n0.0094262\n0.00943\n\n\nCD68+PDL1+_E\n0.0095077\n0.00951\n\n\nPDL1+CK+_E\n0.0041710\n0.00417\n\n\nCD3+CD8-_E\n-0.0008040\n&lt; 2e-16\n\n\nCD3+CD8-_S\n-0.0109507\n&lt; 2e-16\n\n\nCD3+CD8-FoxP3+_E\n-0.0008349\n&lt; 2e-16\n\n\nCD3+CD8-FoxP3+_S\n-0.0104265\n&lt; 2e-16\n\n\nCD79a+CD20+_E\n-0.0032007\n&lt; 2e-16\n\n\nCD79a+CD20+_S\n-0.0141103\n&lt; 2e-16\n\n\nCD3+CD8+FoxP3+_E\n-0.0009249\n&lt; 2e-16\n\n\nCD3+CD8+FoxP3+_S\n-0.0076985\n&lt; 2e-16\n\n\nCD79A+CD20-_E\n-0.0039731\n&lt; 2e-16\n\n\nCD79A+CD20-_S\n-0.0160384\n&lt; 2e-16"
  },
  {
    "objectID": "COEUR/Results/Spatial Analysis/RMD/BT-adapt-clustering-followup-analysis.html",
    "href": "COEUR/Results/Spatial Analysis/RMD/BT-adapt-clustering-followup-analysis.html",
    "title": "COEUR BT and ADAPT LMAs Analysis",
    "section": "",
    "text": "I have identified neighborhood in each image stained with the BT and ADAPT panel from the COEUR TMAs. I need to import this cell level data, filter for the cases that we are using in the heatmap (have survival analysis, samples are pre-treatment)."
  },
  {
    "objectID": "COEUR/Results/Spatial Analysis/RMD/BT-adapt-clustering-followup-analysis.html#importing-.rdata-files-from-the-spiat-workflow",
    "href": "COEUR/Results/Spatial Analysis/RMD/BT-adapt-clustering-followup-analysis.html#importing-.rdata-files-from-the-spiat-workflow",
    "title": "COEUR BT and ADAPT LMAs Analysis",
    "section": "Importing .RData files from the SPIAT workflow",
    "text": "Importing .RData files from the SPIAT workflow\n\n\nCode\nload(\"/Users/karanvir/Documents/LMAProject/COEUR/Results/Spatial Analysis/RData/BT_15r_15n_SPIAT.RData\")\nbtNeighborhoods &lt;- neighborhoods\nload(\"/Users/karanvir/Documents/LMAProject/COEUR/Results/Spatial Analysis/RData/ADAPT_15r_15n_SPIAT.RData\")\nadaptNeighborhoods &lt;- neighborhoods\nrm(neighborhoods)\n\nstroma_information&lt;- read.csv(\"../../../Final_Data/COMBINED_PANELS_DENSITIES_08NOV22.csv\") %&gt;%\n  select(pNum, avg_epi_prop)"
  },
  {
    "objectID": "COEUR/Results/Spatial Analysis/RMD/BT-adapt-clustering-followup-analysis.html#collapse-list-into-one-dataframe",
    "href": "COEUR/Results/Spatial Analysis/RMD/BT-adapt-clustering-followup-analysis.html#collapse-list-into-one-dataframe",
    "title": "COEUR BT and ADAPT LMAs Analysis",
    "section": "Collapse list into one dataframe",
    "text": "Collapse list into one dataframe\n\n\nCode\nbtNeighborhoods &lt;- bind_rows(btNeighborhoods, .id=\"Image\")\nadaptNeighborhoods &lt;- bind_rows(adaptNeighborhoods, .id=\"Image\")"
  },
  {
    "objectID": "COEUR/Results/Spatial Analysis/RMD/BT-adapt-clustering-followup-analysis.html#filter-for-patients-used-in-tme-clustering-and-survival-analysis",
    "href": "COEUR/Results/Spatial Analysis/RMD/BT-adapt-clustering-followup-analysis.html#filter-for-patients-used-in-tme-clustering-and-survival-analysis",
    "title": "COEUR BT and ADAPT LMAs Analysis",
    "section": "Filter for patients used in TME clustering and survival analysis",
    "text": "Filter for patients used in TME clustering and survival analysis\n\n\nCode\nharmonizedCounts &lt;- vroom::vroom(\"/Users/karanvir/Documents/LMAProject/COEUR/Final_Data/COMBINED_PANELS_DENSITIES_08NOV22.csv\")\ncountsbt &lt;- vroom::vroom(\"/Users/karanvir/Documents/LMAProject/COEUR/Final_Data/BT_per_image_counts.csv\")\ncountsadapt &lt;- vroom::vroom(\"/Users/karanvir/Documents/LMAProject/COEUR/Final_Data/ADAPT_per_image_counts.csv\")\ntme &lt;- vroom::vroom(\"../../Clustering/TME_pNum_key.txt\")\n\n# Adding patient identified to the cell level data\nbtNeighborhoods &lt;- left_join(btNeighborhoods, countsbt %&gt;% select(Image, pNum))\nadaptNeighborhoods &lt;- left_join(adaptNeighborhoods, countsadapt %&gt;% select(Image, pNum))\n\n# Filter for pNums with TME data\nbtNeighborhoods &lt;- filter(btNeighborhoods, pNum %in% tme$pNum)\nadaptNeighborhoods &lt;- filter(adaptNeighborhoods, pNum %in% tme$pNum)"
  },
  {
    "objectID": "COEUR/Results/Spatial Analysis/RMD/BT-adapt-clustering-followup-analysis.html#cluster-the-neighborhoods-into-distinct-lma-types",
    "href": "COEUR/Results/Spatial Analysis/RMD/BT-adapt-clustering-followup-analysis.html#cluster-the-neighborhoods-into-distinct-lma-types",
    "title": "COEUR BT and ADAPT LMAs Analysis",
    "section": "Cluster the neighborhoods into distinct LMA types",
    "text": "Cluster the neighborhoods into distinct LMA types\nUsing the clusterNeighborhoods function in /COEUR/Scripts/Neighborhood Analysis/SPIAT_functions.R. add methods for neighborhood detection\n\n\nCode\nsource(\"/Users/karanvir/Documents/LMAProject/COEUR/Scripts/Neighborhood Analysis/SPIAT_functions.R\")\nbtLMAs &lt;- clusterNeighborhoods(btNeighborhoods, 7)\nadaptLMAs &lt;- clusterNeighborhoods(adaptNeighborhoods, 7)"
  },
  {
    "objectID": "COEUR/Results/Spatial Analysis/RMD/BT-adapt-clustering-followup-analysis.html#bt-panel",
    "href": "COEUR/Results/Spatial Analysis/RMD/BT-adapt-clustering-followup-analysis.html#bt-panel",
    "title": "COEUR BT and ADAPT LMAs Analysis",
    "section": "BT Panel",
    "text": "BT Panel\nFigure 1a\n\n\nCode\ngetClusterPlots(btLMAs, breaks = c(\"CD3pCD8n\", \"CD3pCD8p\", \"CD79ApCD20n\", \"CD20p\", \"CD3pCD8nFoxP3p\", \"CD3pCD8pFoxP3p\"), cell_type_colors = c(\"#377EB8\",\n                                \"#E41A1C\",\n                                \"#4DAF4A\",\n                                \"#FF7F00\",\n                                \"#FFFF33\",\n                                \"#F781BF\"))\n\n\n\n\n\nRenaming LMAs for easier interpretation - LMA1 is mostly B cells (B1), LMA7-2-6 have similar compositions (mostly T cells), with decreasing CD8+ and increasing CD8- proportions (T1,T2,T3). LMA5-4-3 are mostly plasma cell dominated with increasing proportions of plasma cells (P1,P2,P3).\nFigure 1b\n\n\nCode\nbtLMAs$LMA &lt;- recode_factor(btLMAs$LMA, `7`=\"T1\", `2`=\"T2\", `6`=\"T3\", `5`=\"P1\", `4`=\"P2\", `3`=\"P3\", `1`=\"B1\")\n\ngetClusterPlots(btLMAs, breaks = c(\"CD3pCD8n\", \"CD3pCD8p\", \"CD79ApCD20n\", \"CD20p\", \"CD3pCD8nFoxP3p\", \"CD3pCD8pFoxP3p\"), cell_type_colors = c(\"#377EB8\",\n                                \"#E41A1C\",\n                                \"#4DAF4A\",\n                                \"#FF7F00\",\n                                \"#FFFF33\",\n                                \"#F781BF\"))"
  },
  {
    "objectID": "COEUR/Results/Spatial Analysis/RMD/BT-adapt-clustering-followup-analysis.html#adapt-panel",
    "href": "COEUR/Results/Spatial Analysis/RMD/BT-adapt-clustering-followup-analysis.html#adapt-panel",
    "title": "COEUR BT and ADAPT LMAs Analysis",
    "section": "ADAPT Panel",
    "text": "ADAPT Panel\nFigure 2a\n\n\nCode\ngetClusterPlots(adaptLMAs, breaks =  c(\"CD68pPDL1n\", \"CD68pPDL1p\", \"CD3pCD8pPD1n\", \"CD3pCD8pPD1p\", \"CD3pCD8nPD1n\", \"CD3pCD8nPD1p\"), cell_type_colors = c(\"#4DAF4A\",\n              \"#FFFF33\",\n              \n              \"#f4a3a5\",\n              \"#e41a1d\",\n              \"#afcbe3\",\n              \"#377eb8\"))\n\n\n\n\n\nRenaming LMA1-LMA6-LMA2-4 to M1-M2-M3-M4. LMA7-3-5 to T1-T2-T3\nFigure 2b\n\n\nCode\nadaptLMAs$LMA &lt;- recode_factor(adaptLMAs$LMA, `1`=\"M1\", `6`=\"M2\", `2`=\"M3\", `4`=\"M4\", `7`=\"T1\", `3`=\"T2\", `5`=\"T3\")\ngetClusterPlots(adaptLMAs, breaks =  c(\"CD68pPDL1n\", \"CD68pPDL1p\", \"CD3pCD8pPD1n\", \"CD3pCD8pPD1p\", \"CD3pCD8nPD1n\", \"CD3pCD8nPD1p\"), cell_type_colors = c(\"#4DAF4A\",\n              \"#FFFF33\",\n              \n              \"#f4a3a5\",\n              \"#e41a1d\",\n              \"#afcbe3\",\n              \"#377eb8\"))"
  },
  {
    "objectID": "IROC_WHOLE_SLIDES/results/spiat/ws-lmas.html",
    "href": "IROC_WHOLE_SLIDES/results/spiat/ws-lmas.html",
    "title": "IROC Whole Slide LMAs",
    "section": "",
    "text": "Exploring LMAs in IROC whole slides.\n\nSummary statistics\nI have data from 23 different IROC patients. The max ROIs captured is 15, the minimum is 5.\n\n\nCode\ncellLevel &lt;- vroom::vroom(\"~/Documents/LMAProject/IROC_WHOLE_SLIDES/raw_data/07Jun23_clean_cell_level.tsv.gz\")\n\ncellLevel$Patient &lt;- stringr::str_split_i(cellLevel$Image, \"_\", 1)\n\nn_images &lt;- cellLevel %&gt;% group_by(Patient) %&gt;% summarise(n_images = length(unique(Image))) %&gt;%\n  arrange(n_images)\n\nn_images$Patient &lt;- fct_relevel(n_images$Patient, n_images$Patient)\n\nn_images %&gt;% ggplot(aes(x=Patient, y=n_images))+\n  geom_col()+\n  coord_flip()+\n  xlab(\"Number of images\")+\n  cowplot::theme_cowplot()\n\n\n\n\n\nComparing 7 LMAs in whole slides to 7 LMAs in IROC TMAs.\n\n\nCode\nload(\"/Users/karanvir/Documents/LMAProject/IROC_WHOLE_SLIDES/results/spiat/rdata/IROC_WS_15r_15n_SPIAT.RData\")\nneighborhoods_df &lt;- bind_rows(neighborhoods, .id = \"Image\")\n\nclustered &lt;- clusterNeighborhoods(neighborhoods_df, 7)\n\n# Changing order of clusters based on resemblance to TMA LMAs\nclustered$LMA &lt;- factor(as.character(clustered$LMA))\nclustered$LMA &lt;- fct_relevel(clustered$LMA, \"4\",\"3\",\"1\",\"2\",\"7\",\"6\",\"5\")\n\nbarplots_ws &lt;- getClusterPlots(clustered, breaks = c(\"CD3pCD8nPD1p\", \"CD3pCD8nPD1n\", \"CD3pCD8pPD1p\", \"CD3pCD8pPD1n\", \"CD68pPDL1n\", \n\"CD68pPDL1p\", \"CD79ApCD20p\", \"CD79ApCD20n\",  \"CD3nPD1p\"), cell_type_colors = c(\"#E64B35FF\",\n                                                                                   \"#f5b8af\",\n                                                                                   \"#358295\",\n                                                                                   \"#a6ddea\",\n                                                                                   \"green\",\n                                                                                   \"yellow\",\n                                                                                   \"#744960\",\n                                                                                   \"#d4a2bc\",\n                                                                                   \"black\"))\n\n\n\n\nCode\nload(\"/Users/karanvir/Documents/LMAProject/IROC_TMA/Results/Neighborhood-analysis/RData/IROCTMA_15r_15n_SPIAT.RData\")\nneighborhoods_tma_df &lt;- bind_rows(neighborhoods, .id = \"Image\")\n\nclustered_tma &lt;- clusterNeighborhoods(neighborhoods_tma_df, 7)\n\nbarplots_tma &lt;- getClusterPlots(clustered_tma, breaks = c(\"CD3pCD8nPD1p\", \"CD3pCD8nPD1n\", \"CD3pCD8pPD1p\", \"CD3pCD8pPD1n\", \"CD68pPDL1n\", \n\"CD68pPDL1p\", \"CD20p\", \"CD79ApCD20n\",  \"PD1p\"), cell_type_colors = c(\"#E64B35FF\",\n                                                                                   \"#f5b8af\",\n                                                                                   \"#358295\",\n                                                                                   \"#a6ddea\",\n                                                                                   \"green\",\n                                                                                   \"yellow\",\n                                                                                   \"#744960\",\n                                                                                   \"#d4a2bc\",\n                                                                                   \"black\"))\n\n\n\n\nCode\nggpubr::ggarrange(barplots_ws, barplots_tma, nrow=2)\n\n\n\n\n\nI can compare the proportions of each LMA to each other by running Analysis of Similarities (ANOSIM) between pairs of LMAs. A score close to 1 indicates dissimilarities in composition, while a score close to 0 indicates that composition of species (ie. cell types) between the two is similar.\n\n\nCode\n# Analysis of similarities, pairwise between group1 and each of group2\n\npairwiseANOSIM &lt;- function(group1, group2=c(\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\")) {\n  wholeSlide &lt;- clustered %&gt;% filter(LMA == {{group1}}) %&gt;% select(-Image, -LMA, -Neighborhood) %&gt;% mutate(Group = \"WS\")\n  \n  pairwise_results &lt;- lapply(group2, function(x){\n     TMA &lt;- clustered_tma %&gt;% filter(LMA == {{x}}) %&gt;% mutate(Group = \"TMA\") %&gt;% select(-Image, -LMA, -Neighborhood) %&gt;% mutate(Group = \"TMA\")\n  \n  test_matrix &lt;- bind_rows(wholeSlide, TMA)\n  grouping_var &lt;- test_matrix$Group\n  test_matrix &lt;- test_matrix[,1:9] %&gt;% as.matrix()\n  test_matrix_prop &lt;- t(apply(test_matrix,1, function(x) x/sum(x)))\n  anosim_output &lt;- vegan::anosim(test_matrix_prop, grouping = grouping_var, distance = \"bray\", permutations = 999)\n  \n  anosim_summary &lt;- data.frame(WS_LMA = group1,\n                               TMA_LMA = group2,\n                               ANOSIM = anosim_output$statistic,\n                               p = anosim_output$signif)\n  })\n  \n  pairwise_results_df &lt;- bind_rows(pairwise_results)\n}\n\n\n# Need to make sure phenotypes match\nclustered_tma &lt;- clustered_tma %&gt;% dplyr::rename(CD79ApCD20p = \"CD20p\",\n                                          CD3nPD1p = \"PD1p\")\n\n# Running the pairwiseANOSIM function for LMAs 1:7 for the WS\nANOSIMresults &lt;- lapply(c(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"), pairwiseANOSIM)"
  },
  {
    "objectID": "IROC_TMA/Results/Neighborhood-analysis/RMD/lmas-and-stroma-iroc-tma.html",
    "href": "IROC_TMA/Results/Neighborhood-analysis/RMD/lmas-and-stroma-iroc-tma.html",
    "title": "LMAs and Stroma (IROC)",
    "section": "",
    "text": "Code\nlma &lt;- vroom::vroom(\"/Users/karanvir/Documents/LMAProject/IROC_TMA/Results/Neighborhood-analysis/7LMAs_15r15n_IROC_TMA.csv\")\n\ncolnames(lma) &lt;- gsub(\"CD20p\" , \"CD79ApCD20p\", colnames(lma)) %&gt;%\n  gsub(\"^PD1p$\", \"CD3nCD8nPD1p\", .)\n\ngetClusterPlots(lma, breaks = c(\"CD3pCD8nPD1p\", \"CD3pCD8nPD1n\", \"CD3pCD8pPD1p\", \"CD3pCD8pPD1n\", \"CD68pPDL1n\", \n\"CD68pPDL1p\", \"CD79ApCD20p\", \"CD79ApCD20n\",  \"CD3nCD8nPD1p\"), cell_type_colors = c(\"#E64B35FF\",\n                                                                                   \"#f5b8af\",\n                                                                                   \"#358295\",\n                                                                                   \"#a6ddea\",\n                                                                                   \"green\",\n                                                                                   \"yellow\",\n                                                                                   \"#744960\",\n                                                                                   \"#d4a2bc\",\n                                                                                   \"black\"))"
  },
  {
    "objectID": "IROC_TMA/Results/Neighborhood-analysis/RMD/lmas-and-stroma-iroc-tma.html#figure-1---lma-barplots",
    "href": "IROC_TMA/Results/Neighborhood-analysis/RMD/lmas-and-stroma-iroc-tma.html#figure-1---lma-barplots",
    "title": "LMAs and Stroma (IROC)",
    "section": "",
    "text": "Code\nlma &lt;- vroom::vroom(\"/Users/karanvir/Documents/LMAProject/IROC_TMA/Results/Neighborhood-analysis/7LMAs_15r15n_IROC_TMA.csv\")\n\ncolnames(lma) &lt;- gsub(\"CD20p\" , \"CD79ApCD20p\", colnames(lma)) %&gt;%\n  gsub(\"^PD1p$\", \"CD3nCD8nPD1p\", .)\n\ngetClusterPlots(lma, breaks = c(\"CD3pCD8nPD1p\", \"CD3pCD8nPD1n\", \"CD3pCD8pPD1p\", \"CD3pCD8pPD1n\", \"CD68pPDL1n\", \n\"CD68pPDL1p\", \"CD79ApCD20p\", \"CD79ApCD20n\",  \"CD3nCD8nPD1p\"), cell_type_colors = c(\"#E64B35FF\",\n                                                                                   \"#f5b8af\",\n                                                                                   \"#358295\",\n                                                                                   \"#a6ddea\",\n                                                                                   \"green\",\n                                                                                   \"yellow\",\n                                                                                   \"#744960\",\n                                                                                   \"#d4a2bc\",\n                                                                                   \"black\"))"
  },
  {
    "objectID": "IROC_TMA/Results/Neighborhood-analysis/RMD/lmas-and-stroma-iroc-tma.html#figure-2-number-of-cases-by-stroma-percentage",
    "href": "IROC_TMA/Results/Neighborhood-analysis/RMD/lmas-and-stroma-iroc-tma.html#figure-2-number-of-cases-by-stroma-percentage",
    "title": "LMAs and Stroma (IROC)",
    "section": "Figure 2: Number of cases by stroma percentage",
    "text": "Figure 2: Number of cases by stroma percentage\nThere are 60 cores with neighborhoods detected, out of 137 images stained. The median stroma proportion is 38% - cases with more stroma than these are catagorizes as â€˜highâ€™, lower as â€˜lowâ€™.\nThe total number of LMAs detected is quite similar between high and low stroma cases, however the distribution by LMA subtype is different. There are more LMA5/6/7 in low stroma cores (these are the LMAs with more PDL1p macs). LMA1/2/3 are found in high stroma cores more often (these are the LMAs with more PDL1- macs).\n\n\nCode\ndensities &lt;- vroom::vroom(\"/Users/karanvir/Documents/LMAProject/IROC_TMA/Results/IROC-tma-per-patient-densities.csv\")\ncounts &lt;- vroom::vroom(\"/Users/karanvir/Documents/LMAProject/IROC_TMA/Results/IROC-tma-per-image-counts.csv\")\n\nlma &lt;- left_join(lma, counts %&gt;% select(Image, ID))\nlma &lt;- left_join(lma, densities %&gt;% select(ID, stroma_proportion))\nlma &lt;-  mutate(lma, stroma_cat = case_when(stroma_proportion &lt;= median(stroma_proportion) ~ \"low\",\n                                           TRUE ~ \"high\"))\n\nstroma_tally &lt;- lma %&gt;% group_by(ID, LMA, stroma_cat) %&gt;% summarise(numberOfLMAs = n()) %&gt;%\n  group_by(stroma_cat, LMA) %&gt;% summarise(sumLMAs = sum(numberOfLMAs))\n\n\nstroma_tally %&gt;% \n  ggplot(aes(x=stroma_cat, y=sumLMAs)) +\n  geom_col(position=position_dodge())+\n  xlab(\"Stroma category\")+\n  ylab(\"Nunber of LMAs\")+\n  ggtitle(\"Fig. 2: Total number of neighborhoods detected by stroma %\")\n\n\n\n\n\nCode\nstroma_tally %&gt;% \n  ggplot(aes(x=stroma_cat, y=sumLMAs)) +\n  geom_col(position=position_dodge())+\n  facet_wrap(~LMA, nrow=1)+\n  xlab(\"Stroma category\")+\n  ylab(\"Nunber of LMAs\")+\n  ggtitle(\"Fig. 3: Total number of neighborhoods detected by stroma % and LMA type\")"
  }
]