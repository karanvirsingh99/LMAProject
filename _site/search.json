[
  {
    "objectID": "COEUR/Scripts/Clustering/COEUR_Clustering.html",
    "href": "COEUR/Scripts/Clustering/COEUR_Clustering.html",
    "title": "Code for generating the 5 TME clusters",
    "section": "",
    "text": "Load data and clean it up a bit\n\n# Combined densities (ADAPT AND BT panels), cells/mm2\nCOMBINED_PANEL_DENSITIES &lt;- read.csv(\"../../Final_Data/COMBINED_PANELS_DENSITIES_08NOV22.csv\")\nglimpse(COMBINED_PANEL_DENSITIES)\n\nRows: 1,064\nColumns: 41\n$ pNum             &lt;int&gt; 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ CD3pCD8nPD1n_S   &lt;dbl&gt; 86.368228, 0.000000, 67.667047, 4.944774, 266.199758,…\n$ CD3pCD8nPD1n_E   &lt;dbl&gt; 2.980469, 0.000000, 72.899001, 2.999790, 45.062111, 1…\n$ CD3pCD8nPD1p_S   &lt;dbl&gt; 90.294056, 0.000000, 210.123987, 0.000000, 154.567601…\n$ CD3pCD8nPD1p_E   &lt;dbl&gt; 5.960937, 2.943613, 43.076682, 0.000000, 16.689671, 2…\n$ CD3pCD8pPD1n_S   &lt;dbl&gt; 19.629143, 0.000000, 85.474164, 0.000000, 85.870890, …\n$ CD3pCD8pPD1n_E   &lt;dbl&gt; 0.000000, 11.774451, 49.703864, 0.000000, 11.682769, …\n$ CD3pCD8pPD1p_S   &lt;dbl&gt; 15.703314, 0.000000, 178.071176, 0.000000, 42.935445,…\n$ CD3pCD8pPD1p_E   &lt;dbl&gt; 11.921875, 41.210578, 92.780547, 0.000000, 18.358638,…\n$ CD68nPDL1nPD1p_S &lt;dbl&gt; 125.626513, 0.000000, 523.529257, 9.889549, 51.522534…\n$ CD68nPDL1nPD1p_E &lt;dbl&gt; 8.941406, 2.943613, 79.526183, 2.999790, 11.682769, 2…\n$ area_mm2_S.ADAPT &lt;dbl&gt; 0.2547233, 0.0083039, 0.2807866, 0.2022337, 0.1164539…\n$ area_mm2_E.ADAPT &lt;dbl&gt; 0.3355177, 0.3397186, 0.3017874, 0.3333567, 0.5991730…\n$ total_area.ADAPT &lt;dbl&gt; 0.5902410, 0.3480225, 0.5825740, 0.5355904, 0.7156269…\n$ CD68pPDL1n_S     &lt;dbl&gt; 812.64651, 602.12671, 658.86335, 202.73575, 661.20585…\n$ CD68pPDL1n_E     &lt;dbl&gt; 140.082028, 373.838818, 510.293008, 5.999579, 600.828…\n$ CD68pPDL1p_S     &lt;dbl&gt; 39.258285, 120.425342, 153.141211, 29.668646, 3005.48…\n$ CD68pPDL1p_E     &lt;dbl&gt; 0.000000, 114.800897, 3.313591, 0.000000, 487.338381,…\n$ PDL1pCKp_S       &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.0…\n$ PDL1pCKp_E       &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 1.668967, 0.0…\n$ CD3pCD8n_E       &lt;dbl&gt; 4.853809, 0.000000, 13.477221, 0.000000, 21.345814, 0…\n$ CD3pCD8n_S       &lt;dbl&gt; 66.296531, 0.000000, 33.670729, 0.000000, 32.648776, …\n$ CD3pCD8nFoxP3p_E &lt;dbl&gt; 12.134523, 22.412659, 124.664291, 0.000000, 40.912811…\n$ CD3pCD8nFoxP3p_S &lt;dbl&gt; 69.310010, 0.000000, 85.299180, 0.000000, 65.297551, …\n$ CD3pCD8p_E       &lt;dbl&gt; 12.134523, 64.036168, 148.249427, 0.000000, 35.576357…\n$ CD3pCD8p_S       &lt;dbl&gt; 24.107829, 10.723389, 141.417062, 5.391478, 124.06534…\n$ area_mm2_E.BT    &lt;dbl&gt; 0.4120475, 0.3123235, 0.2967971, 0.3529410, 0.5621711…\n$ area_mm2_S.BT    &lt;dbl&gt; 0.3318424, 0.0932541, 0.4454908, 0.3709558, 0.1531451…\n$ CD20p_E          &lt;dbl&gt; 0.000000, 3.201808, 6.738610, 0.000000, 3.557636, 0.0…\n$ CD20p_S          &lt;dbl&gt; 0.000000, 10.723389, 4.489431, 0.000000, 0.000000, 0.…\n$ CD3pCD8pFoxP3p_E &lt;dbl&gt; 0.000000, 0.000000, 3.369305, 0.000000, 0.000000, 0.0…\n$ CD3pCD8pFoxP3p_S &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 6.529755, 0.0…\n$ CD79ApCD20n_E    &lt;dbl&gt; 0.000000, 0.000000, 57.278188, 0.000000, 1.778818, 0.…\n$ CD79ApCD20n_S    &lt;dbl&gt; 33.148266, 0.000000, 558.934101, 0.000000, 189.362898…\n$ total_area.BT    &lt;dbl&gt; 0.7438899, 0.4055776, 0.7422879, 0.7238968, 0.7153162…\n$ BT_str_prop      &lt;dbl&gt; 44.60907, 22.99291, 60.01590, 51.24429, 21.40943, 25.…\n$ BT_epi_prop      &lt;dbl&gt; 55.39093, 77.00709, 39.98410, 48.75571, 78.59057, 74.…\n$ ADAPT_epi_prop   &lt;dbl&gt; 56.84419, 97.61398, 51.80241, 62.24098, 83.72701, 78.…\n$ ADAPT_str_prop   &lt;dbl&gt; 43.155813, 2.386024, 48.197585, 37.759023, 16.272991,…\n$ avg_str_prop     &lt;dbl&gt; 43.88244, 12.68947, 54.10675, 44.50166, 18.84121, 23.…\n$ avg_epi_prop     &lt;dbl&gt; 56.11756, 87.31053, 45.89325, 55.49834, 81.15879, 76.…\n\n\nCell densities are aggregated between the two mcIF panels. For each panel, cell counts and areas were summed between the two cores per patient and divided by the summed stromal/epithelial/stromal+epithelial area to calculate densities (cells/mm^2).\n\n# This is the list of patients that are (1) pre-chemo (2) have outcomes data\nfinal_pNum &lt;- read.csv(\"../../Final_Data/final_pNum.csv\") %&gt;% .[,1]\nlength(final_pNum)\n\n[1] 981\n\n\nThere are 981 patients that fit this criteria - only these patients will be considered in the clustering\n\n\nFormat data for clustering\n\n# Remove tissue proportion data, and cell types that are redundant (ie. the CD3CD8- calls from the BT panel)\nDENSITIES_BY_TISSUE &lt;- COMBINED_PANEL_DENSITIES %&gt;% select(-contains(\"area\")) %&gt;%\n  select(-PDL1pCKp_S, -BT_str_prop, -BT_epi_prop, -ADAPT_epi_prop, -ADAPT_str_prop, -avg_epi_prop) %&gt;%\n  select(-CD3pCD8p_S,-CD3pCD8p_E)\n\nDENSITIES_LOGGED &lt;- DENSITIES_BY_TISSUE %&gt;%\n  mutate(across(-contains(c(\"prop\", \"area\", \"pNum\")), ~log10(.+0.1))) #log all densities\n\n\n\nRobust and sparse k-means clustering\n\n# Making heatmap with only final patients (n=981) #\n\n# Making a logged densities matrix. I am also removing CD3-PD1p cells here because I am confident in their calls.\n\ndensities_final_m &lt;- DENSITIES_LOGGED %&gt;% \n  filter(pNum %in% final_pNum) %&gt;%\n  select(-contains(c(\"prop\", \"area\")), -PDL1pCKp_E, -CD68nPDL1nPD1p_S, -CD68nPDL1nPD1p_E) %&gt;% \n  column_to_rownames(\"pNum\") %&gt;% \n  as.matrix()\n\n#optimal_n_final &lt;- Clest(densities_final_m, 8, alpha=0.05, beta=0.05) #Trimming 10% of cases, significance level between clusters at least 0.05\n\n#Optimal cluster N is 4 without or with PDL1+CK+\nset.seed(1000)\n#clusters &lt;- RSKC(densities_final_m, 5, alpha=0.05)$labels\n\n# Freeze output\nclusters &lt;- c(2, 3, 3, 2, 1, 3, 3, 3, 4, 2, 5, 3, 3, 1, 4, 2, 5, 4, 4, 1, \n              2, 4, 3, 1, 3, 4, 2, 5, 4, 1, 3, 4, 2, 1, 4, 4, 5, 4, 2, 1, 4, \n              5, 3, 2, 4, 2, 5, 3, 2, 4, 1, 4, 5, 2, 4, 1, 4, 5, 4, 1, 3, 2, \n              4, 3, 5, 1, 4, 3, 2, 3, 1, 5, 5, 5, 4, 5, 3, 5, 4, 4, 1, 1, 3, \n              1, 5, 1, 1, 3, 2, 3, 1, 5, 5, 3, 5, 2, 2, 4, 4, 1, 4, 1, 4, 4, \n              4, 5, 3, 4, 4, 3, 2, 1, 5, 2, 4, 2, 5, 3, 2, 2, 1, 2, 2, 4, 4, \n              2, 4, 1, 5, 5, 3, 5, 4, 2, 5, 1, 3, 5, 2, 2, 3, 5, 1, 4, 1, 4, \n              4, 4, 5, 5, 5, 5, 2, 4, 2, 4, 1, 5, 4, 3, 4, 3, 1, 4, 2, 5, 1, \n              3, 1, 5, 2, 3, 3, 3, 1, 3, 5, 5, 4, 4, 1, 4, 3, 2, 1, 5, 5, 4, \n              3, 3, 2, 4, 4, 4, 2, 5, 4, 4, 3, 3, 3, 4, 1, 2, 4, 2, 1, 2, 4, \n              3, 2, 2, 1, 5, 2, 4, 5, 5, 4, 1, 3, 3, 4, 5, 3, 4, 1, 5, 1, 2, \n              3, 2, 5, 4, 4, 5, 2, 3, 5, 3, 2, 3, 2, 1, 1, 5, 2, 5, 4, 2, 4, \n              3, 1, 5, 1, 4, 4, 4, 4, 3, 4, 4, 4, 2, 3, 2, 5, 3, 4, 4, 5, 2, \n              1, 3, 4, 5, 4, 4, 5, 4, 5, 4, 1, 5, 1, 2, 4, 3, 3, 1, 4, 5, 4, \n              2, 3, 2, 3, 2, 2, 5, 4, 1, 3, 3, 4, 1, 2, 3, 4, 3, 2, 4, 4, 5, \n              1, 1, 3, 1, 4, 2, 2, 3, 5, 2, 3, 4, 5, 2, 4, 3, 4, 4, 4, 5, 4, \n              1, 4, 2, 5, 3, 3, 4, 3, 3, 5, 4, 4, 2, 5, 3, 5, 1, 3, 4, 4, 1, \n              5, 3, 1, 1, 2, 2, 3, 2, 5, 4, 1, 4, 2, 1, 4, 2, 2, 4, 1, 4, 3, \n              1, 3, 1, 4, 4, 5, 4, 3, 1, 1, 3, 1, 2, 3, 4, 1, 5, 1, 2, 5, 4, \n              1, 4, 2, 4, 2, 2, 1, 4, 3, 1, 1, 3, 4, 2, 1, 2, 5, 3, 1, 1, 4, \n              1, 1, 1, 4, 3, 3, 2, 1, 2, 1, 4, 3, 4, 5, 1, 4, 5, 4, 1, 3, 5, \n              4, 5, 2, 4, 1, 5, 4, 1, 1, 5, 2, 3, 5, 1, 5, 4, 5, 4, 2, 3, 3, \n              1, 3, 3, 1, 2, 3, 5, 5, 3, 4, 2, 4, 3, 5, 4, 2, 5, 4, 5, 5, 1, \n              3, 1, 3, 3, 3, 2, 4, 5, 4, 3, 4, 2, 5, 4, 5, 4, 5, 5, 1, 1, 3, \n              1, 2, 5, 3, 4, 4, 4, 1, 4, 3, 3, 4, 2, 2, 3, 4, 2, 3, 5, 5, 5, \n              1, 2, 4, 5, 4, 5, 3, 1, 2, 2, 1, 2, 5, 2, 4, 4, 1, 3, 2, 1, 4, \n              5, 4, 4, 5, 1, 5, 4, 3, 3, 3, 5, 4, 4, 5, 2, 5, 4, 3, 3, 3, 2, \n              5, 5, 4, 3, 5, 1, 3, 4, 4, 1, 5, 2, 1, 2, 5, 1, 1, 4, 5, 5, 4, \n              2, 3, 1, 3, 1, 4, 1, 2, 4, 5, 1, 4, 1, 1, 1, 5, 2, 4, 5, 5, 4, \n              5, 5, 3, 5, 5, 5, 1, 3, 2, 5, 1, 1, 3, 5, 2, 4, 2, 3, 4, 2, 5, \n              5, 4, 5, 3, 1, 4, 5, 5, 3, 5, 5, 1, 1, 5, 1, 4, 3, 2, 3, 5, 1, \n              1, 2, 5, 5, 3, 5, 5, 3, 3, 3, 4, 3, 2, 3, 3, 5, 4, 2, 2, 1, 5, \n              3, 5, 2, 3, 3, 1, 5, 4, 2, 2, 2, 5, 3, 4, 3, 2, 2, 1, 2, 1, 5, \n              5, 1, 2, 2, 3, 2, 5, 4, 4, 1, 4, 2, 2, 2, 1, 4, 4, 5, 2, 5, 4, \n              3, 4, 5, 5, 1, 1, 4, 2, 5, 2, 5, 4, 4, 5, 4, 4, 1, 4, 2, 4, 1, \n              4, 4, 2, 3, 2, 4, 4, 5, 2, 2, 3, 2, 3, 2, 4, 4, 3, 4, 2, 5, 4, \n              3, 5, 5, 4, 1, 4, 5, 2, 1, 4, 3, 4, 1, 3, 1, 3, 5, 1, 3, 3, 1, \n              1, 5, 4, 5, 3, 5, 1, 5, 2, 4, 3, 4, 2, 2, 1, 3, 5, 4, 4, 4, 4, \n              2, 3, 4, 4, 5, 4, 5, 3, 1, 3, 2, 5, 3, 1, 4, 2, 2, 3, 4, 4, 5, \n              5, 5, 4, 5, 2, 1, 2, 4, 2, 4, 5, 5, 2, 5, 2, 2, 5, 2, 4, 4, 5, \n              5, 4, 3, 5, 3, 2, 5, 5, 1, 3, 5, 4, 5, 4, 4, 1, 3, 5, 4, 3, 4, \n              3, 5, 3, 2, 5, 2, 2, 3, 3, 4, 5, 2, 4, 4, 3, 4, 5, 4, 4, 5, 1, \n              4, 4, 1, 1, 3, 4, 3, 3, 4, 3, 2, 4, 3, 5, 4, 2, 4, 5, 3, 5, 5, \n              5, 1, 2, 2, 5, 1, 4, 3, 5, 2, 1, 4, 5, 2, 4, 5, 2, 5, 1, 3, 3, \n              1, 5, 5, 2, 5, 2, 3, 3, 4, 1, 3, 3, 3, 5, 4, 3, 5, 1, 1, 4, 1, \n              5, 1, 5, 1, 5, 4, 4, 5, 5, 1, 5, 2, 4, 1, 3, 5, 1, 5, 3, 3, 5, \n              2, 5, 4, 5, 4, 4, 1, 3, 3, 5, 1, 1, 1, 2, 1, 3)\n\n# Change order of labels. 2 -&gt; 1, 5 -&gt; 2, 3 -&gt;3, 4 -&gt; 4, 1 -&gt; 5\nnew_clusters &lt;- recode(clusters, '3' = 1L, '1' = 2L, '2' = 3L, '4' = 4L, '5' = 5L)\n\n#new densities DF with clusters\nDENSITIES_LOGGED_FINAL &lt;- DENSITIES_LOGGED %&gt;% filter(pNum %in% final_pNum) %&gt;% \n  mutate(cluster_ID = new_clusters)\n\n# subset data to only include densities\nH1 &lt;- DENSITIES_LOGGED_FINAL %&gt;%\n  mutate(clusterID = new_clusters) %&gt;%\n  arrange(clusterID) %&gt;%\n  select(-contains(c(\"prop\", \"category\", \"cluster\", \"ratio\")), -CD68nPDL1nPD1p_S, -CD68nPDL1nPD1p_E, -PDL1pCKp_E) %&gt;% column_to_rownames(\"pNum\")\n\n#renaming the columns so that they're prettier\ncolnames(H1) &lt;- gsub(\"p\", \"+\", colnames(H1))\ncolnames(H1) &lt;- gsub(\"n\", \"-\", colnames(H1))\nH1 &lt;- dplyr::rename(H1, \"CD79a+CD20+_E\" = \"CD20+_E\",\n                       \"CD79a+CD20+_S\" = \"CD20+_S\",\n                   \"CD79a+CD20-_E\" = \"CD79A+CD20-_E\",\n                        \"CD79a+CD20-_S\" = \"CD79A+CD20-_S\",\n                   \"CD3+CD8-FoxP3-_E\" = \"CD3+CD8-_E\",\n                   \"CD3+CD8-FoxP3-_S\" = \"CD3+CD8-_S\")\n\n#the order of the rows (grouped by cell type)\nH1_row_order &lt;- c(\n  \"CD3+CD8-FoxP3-_S\", \n  \"CD3+CD8-FoxP3-_E\",\n  \"CD3+CD8-PD1-_S\",\n  \"CD3+CD8-PD1-_E\",\n  \"CD3+CD8-PD1+_S\",\n  \"CD3+CD8-PD1+_E\",\n  \"CD3+CD8+PD1-_S\",\n  \"CD3+CD8+PD1-_E\",\n  \"CD3+CD8+PD1+_S\",\n  \"CD3+CD8+PD1+_E\",\n  \"CD3+CD8+FoxP3+_S\",\n  \"CD3+CD8+FoxP3+_E\",\n  \"CD3+CD8-FoxP3+_S\",\n  \"CD3+CD8-FoxP3+_E\",\n  \"CD68+PDL1-_S\",\n  \"CD68+PDL1-_E\",\n  \"CD68+PDL1+_S\",\n  \"CD68+PDL1+_E\",\n  \"CD79a+CD20+_S\",\n  \"CD79a+CD20+_E\",\n  \"CD79a+CD20-_S\",\n  \"CD79a+CD20-_E\")\n\n#split the rows by cell type\nrow_split &lt;- c(rep(\"CD8-\", 6),\n               rep(\"CD8+\", 6),\n               rep(\"T reg\", 2),\n               rep(\"Macrophage\", 4), \n               rep(\"B cell\", 4))[match(colnames(H1), H1_row_order)]\n\n#legend color breaks\ncol_fun &lt;- colorRamp2(c(0,2,4), c(\"#2c7bb6\", \"#ffffbf\", \"#d7191c\"))\n\n#Cluster labels\nclust_labels &lt;- paste(\"C\",1:5, \" (\", table(new_clusters), \")\", sep=\"\")\n\n#Row names\nrow_names &lt;- gsub(\"+\", \"&lt;sup&gt;+&lt;/sup&gt;\", colnames(H1), fixed = TRUE) %&gt;%\n  gsub(\"-\", \"&lt;sup&gt;-&lt;/sup&gt;\", ., fixed = TRUE) %&gt;%\n  gsub(\"_E\", \"\", .) %&gt;%\n  gsub(\"_S\", \"\", .)\n\nlgd = Legend(labels = c(\"Stromal\", \"Intraepithelial\"),\n             title = \"Cell Location\", legend_gp = gpar(fill = c(\"#3C5488FF\",\"#DC0000FF\")),\n             nrow = 1)\n\nheatmap1 &lt;- Heatmap(\n  t(H1),\n  # name = \"hey\",\n  row_split = factor(\n    row_split,\n    levels = c(\"CD8+\", \"CD8-\", \"T reg\", \"Macrophage\", \"B cell\")\n  ),\n  row_labels = gt_render(row_names),\n  row_names_gp = gpar(col = c(rep(c(\"#3C5488FF\",\"#DC0000FF\"), times = 12), \"#DC0000FF\")[match(colnames(H1), H1_row_order)]),\n  column_split = sort(new_clusters),\n  row_order = H1_row_order,\n  row_gap = unit(2.5, \"mm\"),\n  cluster_row_slices = FALSE,\n  show_column_names = FALSE,\n  cluster_columns = FALSE,\n  top_annotation = HeatmapAnnotation(cluster = anno_block(\n    gp = gpar(fill = pal_npg()(5)),\n    labels = clust_labels,\n    labels_gp = gpar(col =\"white\", fontsize = 10)\n  )),\n  heatmap_legend_param = list(\n    title = gt_render(\"log&lt;sub&gt;10&lt;/sub&gt;(cells/mm&lt;sup&gt;2&lt;/sup&gt; + 0.1)\"),\n    legend_width = unit(6, \"cm\"),\n    direction = \"horizontal\",\n    at = c(-1, 0, 1, 2, 3, 4)\n  ),\n  col = col_fun,\n  column_title = NULL,\n  border = TRUE\n)\n\n\ndraw(heatmap1, heatmap_legend_side = \"bottom\")\ndraw(lgd, x=unit(0.8, \"npc\"), y=unit(0.05, \"npc\"))\n\n\n\n\n\n\nLet’s make some boxplots to compare the densities of each cell type in each cluster}\nDENSITIES_LONGER &lt;- DENSITIES_LOGGED_FINAL %&gt;% select(-avg_str_prop) %&gt;% mutate(cluster_ID = factor(cluster_ID)) %&gt;% pivot_longer(cols=-c(“cluster_ID”, “pNum”), names_sep = “_“, names_to=c(”density”, “location”))\nDENSITIES_LONGER\\(density &lt;- gsub(\"p\", \"+\", DENSITIES_LONGER\\)density, fixed=TRUE) %&gt;% gsub(“n”, “-”, ., fixed = TRUE) %&gt;% gsub(“CD20+”, “CD79a+CD20+”, ., fixed = TRUE) %&gt;% replace(., .==“CD3+CD8-”, “CD3+CD8-FoxP3-”) %&gt;% replace(., .==“CD79A+CD20-”, “CD79a+CD20-”) %&gt;% replace(., .==“CD68-PDL1-PD1+”, “CD3-CD8-PD1+”) %&gt;% replace(., .==“PDL1pCKp”, “PDL1+CK+”)\n\n\nadd jitter..\nDENSITIES_LONGER &lt;- DENSITIES_LONGER %&gt;% group_by(density, location, cluster_ID) %&gt;% mutate(outlier = value &gt; median(value) + IQR(value)1.5 | value &lt; median(value) - IQR(value)1.5)\nT_cells = c(“CD3+CD8-FoxP3-”, “CD3+CD8-PD1-”, “CD3+CD8-PD1+”, “CD3+CD8+PD1-”, “CD3+CD8+PD1+”, “CD3+CD8-FoxP3+”, “CD3+CD8+FoxP3+”) T_cells_subset = c(“CD3+CD8-PD1-”, “CD3+CD8-PD1+”, “CD3+CD8+PD1-”, “CD3+CD8+PD1+”, “CD3+CD8+FoxP3+”) B_cells = c(“CD79a+CD20+”, “CD79a+CD20-”) Mac = c(“CD68+PDL1+”, “CD68+PDL1-”) other = “PDL1+CK+”\nstats &lt;- DENSITIES_LONGER %&gt;% group_by(density, location) %&gt;% t_test(value ~ cluster_ID) %&gt;% add_xy_position()\nmedian_densities &lt;- DENSITIES_LONGER %&gt;% group_by(density, location, cluster_ID) %&gt;% summarise(median_density = median(value)) %&gt;% pivot_wider(names_from = cluster_ID, values_from = median_density, names_prefix=“cluster_”)\nmake_label &lt;- function(value) { x &lt;- as.character(value) bquote(x) }\nplot_labeller &lt;- function(variable, value) { do.call(expression, lapply(levels(value), make_label)) }\nT_cell_boxplots &lt;- DENSITIES_LONGER %&gt;% filter(density %in% T_cells) %&gt;% mutate(density = ordered(density, levels=T_cells)) %&gt;% ggplot(aes(x=cluster_ID, y=value))+ geom_boxplot(outlier.shape = NA, position=position_dodge(2))+ facet_grid(location~density, switch = “y”, labeller = label_parsed)+ geom_jitter(data = function(x) dplyr::filter(x, outlier), height=0, width = 0.1, alpha=0.5)+ labs(y=NULL, x=NULL)+ theme_cowplot(12)\nT_cell_subset_boxplots &lt;- DENSITIES_LONGER %&gt;% filter(density %in% T_cells_subset) %&gt;% mutate(density = ordered(density, levels=T_cells)) %&gt;% ggplot(aes(x=cluster_ID, y=value))+ geom_boxplot(outlier.shape = NA, position=position_dodge(2))+ facet_grid(location~density, switch = “y”, labeller = labeller(density = function(x) gsub(“CD3+”,““,x, fixed = TRUE)))+ geom_jitter(data = function(x) dplyr::filter(x, outlier), height=0, width = 0.1, alpha=0.5)+ labs(y=NULL, x=NULL)+ theme_cowplot(12)\nB_cell_boxplots &lt;- DENSITIES_LONGER %&gt;% filter(density %in% B_cells) %&gt;% ggplot(aes(x=cluster_ID, y=value))+ geom_boxplot(outlier.shape = NA, position=position_dodge(2))+ facet_grid(location~density, switch = “y”)+ geom_jitter(data = function(x) dplyr::filter(x, outlier), height=0, width = 0.1, alpha=0.5)+ labs(y=NULL, x=NULL)+ theme_cowplot(12)\nMac_boxplots &lt;- DENSITIES_LONGER %&gt;% filter(density %in% Mac) %&gt;% ggplot(aes(x=cluster_ID, y=value))+ geom_boxplot(outlier.shape = NA, position=position_dodge(2))+ facet_grid(location~density, switch = “y”)+ geom_jitter(data = function(x) dplyr::filter(x, outlier), height=0, width = 0.1, alpha=0.5)+ labs(y=NULL, x=NULL)+ theme_cowplot(12)\nother_boxplot &lt;- DENSITIES_LONGER %&gt;% filter(density %in% other) %&gt;% ggplot(aes(x=cluster_ID, y=value))+ geom_boxplot(outlier.shape = NA, position=position_dodge(2))+ facet_grid(location~density, switch = “y”)+ geom_jitter(data = function(x) dplyr::filter(x, outlier), height=0, width = 0.1, alpha=0.5)+ labs(y=NULL, x=NULL)+ theme_cowplot(12)\nyleft = richtext_grob(“log10(cells/mm2+0.1)”, rot=90) xbottom = richtext_grob(“Cluster”)\ngridExtra::grid.arrange(grobs = list(T_cell_boxplots, B_cell_boxplots, Mac_boxplots, other_boxplot), layout_matrix = rbind(c(1,1,1,1,1), c(1,1,1,1,1), c(1,1,1,1,1), c(2,2,3,3,4), c(2,2,3,3,4)), left=yleft, bottom=xbottom)\ngridExtra::grid.arrange(grobs = list(T_cell_subset_boxplots, B_cell_boxplots, Mac_boxplots), layout_matrix = rbind(c(1,1,1,1), c(1,1,1,1), c(2,2,3,3), c(2,2,3,3)), left=yleft, bottom=xbottom)\n\n\nWhich images make up each cluster?\nimages_per_cluster &lt;- per_image_data %&gt;% select(BT_pNum, BT_Image, ADAPT_Image) %&gt;% right_join(DENSITIES_LOGGED_FINAL %&gt;% select(pNum, cluster_ID), by=c(“BT_pNum” = “pNum”))\nimages_per_cluster\\(BT_Image &lt;- gsub(\" - resolution #1\", \"\", images_per_cluster\\)BT_Image) images_per_cluster\\(BT_Image &lt;- paste(\"C:\\\\\\\\Users\\\\\\\\Karanvir\\\\\\\\Documents\\\\\\\\Deeley\\\\\\\\COEUR_B&T_Images\\\\\\\\BR_COEUR_B&TMOTIF_5Aug21\\\\\\\\\", images_per_cluster\\)BT_Image, sep=““)\nimages_per_cluster\\(ADAPT_Image &lt;- gsub(\" - resolution #1\", \"\", images_per_cluster\\)ADAPT_Image) images_per_cluster\\(ADAPT_Image &lt;- paste(\"E:\\\\\\\\COEUR_ADAPT_IMAGES\\\\\\\\BR_COEUR_AdaptiveResistance_3Aug21\\\\\\\\\", images_per_cluster\\)ADAPT_Image, sep=““)\n\n\nPearson Correlation between different cell types per cluster (recerating Boudrette’s paper analysis)\n\n\nFirst, reorder the df so that I have all stromal densities followed by all epithelial densities\ncor_df &lt;- DENSITIES_LOGGED_FINAL %&gt;% select( c( “CD3pCD8pPD1n_E”, “CD3pCD8pPD1p_E”, “CD3pCD8pFoxP3p_E”, “CD3pCD8n_E”, “CD3pCD8nPD1n_E”, “CD3pCD8nPD1p_E”, “CD3pCD8nFoxP3p_E”, “CD68pPDL1n_E”, “CD68pPDL1p_E”, “CD20p_E”, “CD79ApCD20n_E”, “CD79ApCD20n_S”, “CD20p_S”, “CD68pPDL1p_S”, “CD68pPDL1n_S”, “CD3pCD8nFoxP3p_S”, “CD3pCD8nPD1p_S”, “CD3pCD8nPD1n_S”, “CD3pCD8n_S”, “CD3pCD8pFoxP3p_S”, “CD3pCD8pPD1p_S”, “CD3pCD8pPD1n_S”, “cluster_ID”, ) )\ncolnames(cor_df) &lt;- gsub(“p”, “+”, colnames(cor_df)) %&gt;% gsub(“n”, “-”, .)\ncor_df &lt;- cor_df %&gt;% rename(“CD79a+CD20+_E” = “CD20+_E”, “CD79a+CD20+_S” = “CD20+_S”, “CD3+CD8-FoxP3-_E” = “CD3+CD8-_E”, “CD3+CD8-FoxP3-_S” = “CD3+CD8-_S”)\ncorrelation_cluster1 &lt;- cor(cor_df %&gt;% filter(cluster_ID == 1) %&gt;% select(-cluster_ID)) correlation_cluster2 &lt;- cor(cor_df %&gt;% filter(cluster_ID == 2) %&gt;% select(-cluster_ID)) correlation_cluster3 &lt;- cor(cor_df %&gt;% filter(cluster_ID == 3) %&gt;% select(-cluster_ID)) correlation_cluster4 &lt;- cor(cor_df %&gt;% filter(cluster_ID == 4) %&gt;% select(-cluster_ID)) correlation_cluster5 &lt;- cor(cor_df %&gt;% filter(cluster_ID == 5) %&gt;% select(-cluster_ID))\n\n\nSetting a treshold of 0.3 for plotting purposes\ncorrelation_cluster1[abs(correlation_cluster1) &lt; 0.3] &lt;- 0 correlation_cluster2[abs(correlation_cluster2) &lt; 0.3] &lt;- 0 correlation_cluster3[abs(correlation_cluster3) &lt; 0.3] &lt;- 0 correlation_cluster4[abs(correlation_cluster4) &lt; 0.3] &lt;- 0 correlation_cluster5[abs(correlation_cluster5) &lt; 0.3] &lt;- 0\n\n\nAverage densities in each cluster, so that I can plot the size of the nodes accordingly\naverage_densities_cluster1 &lt;- apply(cor_df %&gt;% filter(cluster_ID == 1) %&gt;% select(-cluster_ID), 2, mean) average_densities_cluster2 &lt;- apply(cor_df %&gt;% filter(cluster_ID == 2) %&gt;% select(-cluster_ID), 2, mean) average_densities_cluster3 &lt;- apply(cor_df %&gt;% filter(cluster_ID == 3) %&gt;% select(-cluster_ID), 2, mean) average_densities_cluster4 &lt;- apply(cor_df %&gt;% filter(cluster_ID == 4) %&gt;% select(-cluster_ID), 2, mean) average_densities_cluster5 &lt;- apply(cor_df %&gt;% filter(cluster_ID == 5) %&gt;% select(-cluster_ID), 2, mean)\nlibrary(igraph)\n#Create networks net1 &lt;- graph_from_adjacency_matrix(correlation_cluster1, weighted=T, mode=“undirected”, diag=F) net2 &lt;- graph_from_adjacency_matrix(correlation_cluster2, weighted=T, mode=“undirected”, diag=F) net3 &lt;- graph_from_adjacency_matrix(correlation_cluster3, weighted=T, mode=“undirected”, diag=F) net4 &lt;- graph_from_adjacency_matrix(correlation_cluster4, weighted=T, mode=“undirected”, diag=F) net5 &lt;- graph_from_adjacency_matrix(correlation_cluster5, weighted=T, mode=“undirected”, diag=F)\n#Change colors so positive is red negative is blue E(net1)\\(color[E(net1)\\)weight &lt; 0] &lt;- “blue” E(net1)\\(color[E(net1)\\)weight &gt; 0] &lt;- “red”\nE(net2)\\(color[E(net2)\\)weight &lt; 0] &lt;- “blue” E(net2)\\(color[E(net2)\\)weight &gt; 0] &lt;- “red”\nE(net3)\\(color[E(net3)\\)weight &lt; 0] &lt;- “blue” E(net3)\\(color[E(net3)\\)weight &gt; 0] &lt;- “red”\nE(net4)\\(color[E(net4)\\)weight &lt; 0] &lt;- “blue” E(net4)\\(color[E(net4)\\)weight &gt; 0] &lt;- “red”\nE(net5)\\(color[E(net5)\\)weight &lt; 0] &lt;- “blue” E(net5)\\(color[E(net5)\\)weight &gt; 0] &lt;- “red”\n\n\nThis pushes the labels outside the nodes\nradian.rescale &lt;- function(x, start=0, direction=1) { c.rotate &lt;- function(x) (x + start) %% (2 * pi) * direction c.rotate(scales::rescale(x, c(0, 2 * pi), range(x))) }\nlab.locs &lt;- radian.rescale(x=1:24, direction=-1, start=0)\n\n\nI want to plot the edge width based on the correlation, but I want the widths to be comparable across the 5 plots.\nlinMap &lt;- function(x, from, to){ (x -(-0.985116))/(2.668254-(-0.985116)) * (to - from) + from}\n#Plots! #1 set.seed(1234) p1 &lt;- plot(net1, vertex.label.cex=0.8, layout = layout_in_circle, vertex.label.dist=1, vertex.label.degree=lab.locs, vertex.label.color=“black”, vertex.label.font=2, vertex.color = pal_npg()(5)[1], vertex.size=linMap(average_densities_cluster1, 1, 15), edge.width = rescale(E(net1)\\(weight, to=c(0, 5)), margin = -0.1, edge.color = E(net1)\\)color, main=“Cluster 1”)\nset.seed(1234) p2 &lt;- plot(net2, layout = layout_in_circle, vertex.label.cex=0.8, vertex.label.dist=1, vertex.label.degree=lab.locs, vertex.label.color=“black”, vertex.label.font=2, vertex.color = pal_npg()(5)[2], vertex.size=linMap(average_densities_cluster2, 1, 15), edge.width = rescale(E(net2)\\(weight, to=c(0, 5)), margin = -0.1, edge.color = E(net2)\\)color, main=“Cluster 2”)\nset.seed(1234) p3 &lt;- plot(net3, vertex.label.cex=0.8, layout = layout_in_circle, vertex.label.dist=1, vertex.label.degree=lab.locs, vertex.label.color=“black”, vertex.label.font=2, vertex.color = pal_npg()(5)[3], vertex.size=linMap(average_densities_cluster3, 1, 15), edge.width = rescale(E(net3)\\(weight, to=c(0, 5)), margin = -0.1, edge.color = E(net3)\\)color, main=“Cluster 3”)\nset.seed(1234) p4 &lt;- plot(net4, layout = layout_in_circle, vertex.label.cex=0.8, vertex.label.dist=1, vertex.label.degree=lab.locs, vertex.label.color=“black”, vertex.label.font=2, vertex.color = pal_npg()(5)[4], vertex.size=linMap(average_densities_cluster4, 1, 15), edge.width = rescale(E(net4)\\(weight, to=c(0, 5)), margin = -0.1, edge.color = E(net4)\\)color, main=“Cluster 4”)\nset.seed(1) p5 &lt;- plot(net5, layout = layout.fruchterman.reingold, vertex.label.cex=0.8, vertex.label.dist=1, vertex.label.degree=lab.locs, vertex.label.color=“black”, vertex.label.font=2, vertex.color = pal_npg()(5)[5], vertex.size=linMap(average_densities_cluster5, 1, 15), edge.width = rescale(E(net5)\\(weight, to=c(0, 5)), margin = -0.1, edge.color = E(net5)\\)color, main=“Cluster 5”)\nlibrary(gridExtra)\n\n\nStepwise differences in correlation matrices between clusters\n\n\nStep 1 - How does correlation change between each cluster and the one before it?\ndelta_2_1 &lt;- cor(cor_df %&gt;% filter(cluster_ID == 2) %&gt;% select(-cluster_ID)) - cor(cor_df %&gt;% filter(cluster_ID == 1) %&gt;% select(-cluster_ID))\ndelta_3_2 &lt;- cor(cor_df %&gt;% filter(cluster_ID == 3) %&gt;% select(-cluster_ID)) - cor(cor_df %&gt;% filter(cluster_ID == 2) %&gt;% select(-cluster_ID))\ndelta_4_3 &lt;- cor(cor_df %&gt;% filter(cluster_ID == 4) %&gt;% select(-cluster_ID)) - cor(cor_df %&gt;% filter(cluster_ID == 3) %&gt;% select(-cluster_ID))\ndelta_5_4 &lt;- cor(cor_df %&gt;% filter(cluster_ID == 5) %&gt;% select(-cluster_ID)) - cor(cor_df %&gt;% filter(cluster_ID == 4) %&gt;% select(-cluster_ID))\ndelta_5_1 &lt;- cor(cor_df %&gt;% filter(cluster_ID == 5) %&gt;% select(-cluster_ID)) - cor(cor_df %&gt;% filter(cluster_ID == 1) %&gt;% select(-cluster_ID))\ndelta_2_1[abs(delta_2_1) &lt; 0.2] &lt;- 0 #threshold of 0.2 delta_3_2[abs(delta_3_2) &lt; 0.2] &lt;- 0 #threshold of 0.2 delta_4_3[abs(delta_4_3) &lt; 0.2] &lt;- 0 #threshold of 0.2 delta_5_4[abs(delta_5_4) &lt; 0.2] &lt;- 0 #threshold of 0.2 delta_5_1[abs(delta_5_1) &lt; 0.2] &lt;- 0 #threshold of 0.2\nnet_2_1 &lt;- graph_from_adjacency_matrix(delta_2_1, weighted=T, mode=“undirected”, diag=F) net_3_2 &lt;- graph_from_adjacency_matrix(delta_3_2, weighted=T, mode=“undirected”, diag=F) net_4_3 &lt;- graph_from_adjacency_matrix(delta_4_3, weighted=T, mode=“undirected”, diag=F) net_5_4 &lt;- graph_from_adjacency_matrix(delta_5_4, weighted=T, mode=“undirected”, diag=F) net_5_1 &lt;- graph_from_adjacency_matrix(delta_5_1, weighted=T, mode=“undirected”, diag=F)\nE(net1)\\(color[E(net1)\\)weight &lt; 0] &lt;- “blue” E(net1)\\(color[E(net1)\\)weight &gt; 0] &lt;- “red”\nE(net_2_1)\\(color[E(net_2_1)\\)weight &lt; 0] &lt;- “blue” E(net_2_1)\\(color[E(net_2_1)\\)weight &gt; 0] &lt;- “red”\nE(net_3_2)\\(color[E(net_3_2)\\)weight &lt; 0] &lt;- “blue” E(net_3_2)\\(color[E(net_3_2)\\)weight &gt; 0] &lt;- “red”\nE(net_4_3)\\(color[E(net_4_3)\\)weight &lt; 0] &lt;- “blue” E(net_4_3)\\(color[E(net_4_3)\\)weight &gt; 0] &lt;- “red”\nE(net_5_4)\\(color[E(net_5_4)\\)weight &lt; 0] &lt;- “blue” E(net_5_4)\\(color[E(net_5_4)\\)weight &gt; 0] &lt;- “red”\nE(net_5_1)\\(color[E(net_5_1)\\)weight &lt; 0] &lt;- “blue” E(net_5_1)\\(color[E(net_5_1)\\)weight &gt; 0] &lt;- “red”\np1 &lt;- plot(net1, layout = layout_in_circle, vertex.label.cex=0.8, vertex.label.dist=1, vertex.label.degree=lab.locs, vertex.label.color=“black”, vertex.label.font=2, vertex.color = pal_npg()(5)[1], vertex.size=linMap(average_densities_cluster1, 1, 15), edge.width = rescale(E(net1)\\(weight, to=c(0, 10)), edge.color = E(net1)\\)color, margin = -0.1, main=“Cluster 1”)\np_2_1 &lt;- plot(net_2_1, layout = layout.circle, vertex.label.cex=0.8, vertex.label.dist=1, vertex.label.degree=lab.locs, vertex.label.color=“black”, vertex.color = pal_npg()(5)[2], vertex.label.font=2, vertex.size=linMap(average_densities_cluster2, 1, 15), edge.width = rescale(abs(E(net_2_1)\\(weight), to=c(0, 10)), edge.color = E(net_2_1)\\)color, margin = -0.1, main=“Cluster 2”)\np_3_2 &lt;- plot(net_3_2, layout = layout.circle, vertex.label.cex=0.8, vertex.label.dist=1, vertex.label.degree=lab.locs, vertex.label.color=“black”, vertex.label.font=2, vertex.color = pal_npg()(5)[3], vertex.size=linMap(average_densities_cluster3, 1, 15), edge.width = rescale(abs(E(net_3_2)\\(weight), to=c(0, 10)), edge.color = E(net_3_2)\\)color, margin = -0.1, main=“Cluster 3”)\np_4_3 &lt;- plot(net_4_3, layout = layout.circle, vertex.label.color=“black”, vertex.label.cex=0.8, vertex.label.dist=1, vertex.label.degree=lab.locs, vertex.label.font=2, vertex.color = pal_npg()(5)[4], vertex.size=linMap(average_densities_cluster4, 1, 15), edge.width = rescale(abs(E(net_4_3)\\(weight), to=c(0, 10)), edge.color = E(net_4_3)\\)color, margin = -0.1, main=“Cluster 4”)\np_5_4 &lt;- plot(net_5_4, layout = layout.circle, vertex.label.cex=0.8, vertex.label.font=2, vertex.label.dist=1, vertex.label.degree=lab.locs, vertex.label.color=“black”, vertex.color = pal_npg()(5)[5], vertex.size=linMap(average_densities_cluster5, 1, 15), edge.width = rescale(abs(E(net_5_4)\\(weight), to=c(0, 10)), edge.color = E(net_5_4)\\)color, margin = -0.1, main=“Cluster 5”)\np_5_1 &lt;- plot(net_5_1, layout = layout.circle, vertex.label.cex=0.8, vertex.label.font=2, vertex.label.dist=1, vertex.label.degree=lab.locs, vertex.label.color=“black”, vertex.color = pal_npg()(5)[5], vertex.size=linMap(average_densities_cluster5, 1, 15), edge.width = rescale(abs(E(net_5_1)\\(weight), to=c(0, 10)), edge.color = E(net_5_1)\\)color, margin = -0.1, main=“Cluster 5”)\n\n\nCompare network in cluster 5 to the network in the whole dataset\nall_cases_cor &lt;- cor(cor_df %&gt;% select(-cluster_ID)) average_densities &lt;- apply(cor_df %&gt;% select(-cluster_ID), 2, mean) #avg. density for size of nodes\nall_cases_cor[abs(all_cases_cor) &lt; 0.5] &lt;- 0 #threshold of 0.2\nnet_all &lt;- graph_from_adjacency_matrix(all_cases_cor, weighted=T, mode=“undirected”, diag=F)\nE(net_all)\\(color[E(net_all)\\)weight &lt; 0] &lt;- “blue” E(net_all)\\(color[E(net_all)\\)weight &gt; 0] &lt;- “red”\np_all &lt;- plot(net_all, layout = layout.circle, vertex.label.cex=0.8, vertex.label.font=2, vertex.label.dist=1, vertex.label.degree=lab.locs, vertex.label.color=“black”, vertex.color = pal_npg()(6)[6], vertex.size=linMap(average_densities, 1, 15), edge.width = rescale(abs(E(net_all)\\(weight), to=c(0, 10)), edge.color = E(net_all)\\)color, margin = -0.1, main=“Correlation in entire dataset”)\n\n\nDifference between network 5 and entire dataset\ncorrelation_cluster5 &lt;- cor(cor_df %&gt;% filter(cluster_ID == 5) %&gt;% select(-cluster_ID)) delta_5_all &lt;- correlation_cluster5 - all_cases_cor\ncorrplot(delta_5_all, type = “full”)\ndelta_5_all[abs(delta_5_all) &lt; 0.2] &lt;- 0 #threshold of 0.2\nnet_5_all &lt;- graph_from_adjacency_matrix(delta_5_all, weighted=T, mode=“undirected”, diag=F)\nE(net_5_all)\\(color[E(net_5_all)\\)weight &lt; 0] &lt;- “blue” E(net_5_all)\\(color[E(net_5_all)\\)weight &gt; 0] &lt;- “red”\np_net_5_all &lt;- plot(net_5_all, layout = layout.circle, vertex.label.cex=0.8, vertex.label.font=2, vertex.label.dist=1, vertex.label.degree=lab.locs, vertex.label.color=“black”, vertex.color = pal_npg()(5)[5], vertex.size=linMap(average_densities_cluster5, 1, 15), edge.width = rescale(abs(E(net_5_all)\\(weight), to=c(0, 10)), edge.color = E(net_5_all)\\)color, margin = -0.1, main=“Comparing cluster 5 to entire dataset”)\n\n\nLast but not least, since the main survival differences are between clusters 1/2/3/4 and5\n\n\nI want to compare cluster 5 to all the other cases\ncorrelation_cluster5 &lt;- cor(cor_df %&gt;% filter(cluster_ID == 5) %&gt;% select(-cluster_ID)) delta_5_onehot &lt;- correlation_cluster5 - cor(cor_df %&gt;% filter(cluster_ID != 5) %&gt;% select(-cluster_ID))\ncorrplot(delta_5_onehot)\ndelta_5_onehot[abs(delta_5_onehot) &lt; 0.2] &lt;- 0 #threshold of 0.2\nnet_5_onehot &lt;- graph_from_adjacency_matrix(delta_5_onehot, weighted=T, mode=“undirected”, diag=F)\nE(net_5_onehot)\\(color[E(net_5_onehot)\\)weight &lt; 0] &lt;- “blue” E(net_5_onehot)\\(color[E(net_5_onehot)\\)weight &gt; 0] &lt;- “red”\np_net_5_onehot &lt;- plot(net_5_onehot, layout = layout.circle, vertex.label.cex=0.8, vertex.label.font=2, vertex.label.dist=1, vertex.label.degree=lab.locs, vertex.label.color=“black”, vertex.color = pal_npg()(5)[5], vertex.size=linMap(average_densities_cluster5, 1, 15), edge.width = rescale(abs(E(net_5_onehot)\\(weight), to=c(0, 10)), edge.color = E(net_5_onehot)\\)color, margin = -0.1, main=“Comparing cluster 5 to clusters 1-2-3-4”)\n\n\nB cell versus plasma cell densities in cluster 5\n\n\nMerge with B&T data\nBT &lt;- read.csv(“E:/COEUR_mcIF/final_data/COEUR_B&T_final_counts_and_densities.csv”) %&gt;% select(1:22) %&gt;% select(-contains(c(“Sector”, “Row”,“Column”,“TMA”, “Detections”))) colnames(BT) &lt;- gsub(“_t”, “_E”, colnames(BT)) %&gt;% gsub(“_s”, “_S”, .)\nBT &lt;- BT %&gt;% group_by(pNum) %&gt;% summarise(across(where(is.numeric), ~sum(.x, na.rm=TRUE)))\nBT\\(total_B &lt;- BT\\)CD20p_E + BT\\(CD20p_S BT\\)total_plasma &lt;- BT\\(CD79ApCD20n_E + BT\\)CD79ApCD20n_S\nDENSITIES_LOGGED_FINAL &lt;- left_join(DENSITIES_LOGGED_FINAL, BT %&gt;% select(pNum, total_B, total_plasma)) DENSITIES_LOGGED_FINAL %&gt;% filter(cluster_ID==5) %&gt;% ggplot(aes(x=log10(total_B+0.1), y=log10(total_plasma+0.1)))+ geom_point()+ theme_cowplot()\nDENSITIES_LOGGED_FINAL&lt;- DENSITIES_LOGGED_FINAL %&gt;% mutate(B_PLASMA_LOG_DIFF = log2(total_B+1) - log2(total_plasma+1))\nDENSITIES_LOGGED_FINAL %&gt;% filter(cluster_ID %in% c(3,4,5)) %&gt;% mutate(pNum = factor(pNum), cluster_ID = factor(cluster_ID)) %&gt;% ggplot(aes(x=reorder(pNum, B_PLASMA_LOG_DIFF), y=B_PLASMA_LOG_DIFF, fill=cluster_ID))+ geom_col()+ theme_cowplot()+ theme(axis.ticks.y = element_blank())+ scale_fill_manual(values=pal_npg()(5)[3:5])+ scale_x_discrete(labels=NULL)+ geom_hline(yintercept = 1)+ geom_hline(yintercept = -1)+ labs(x=NULL, y=“log2(B cell counts+1) - log2(plasma cell counts+ 1)”)+ coord_flip()\nDENSITIES_LOGGED_FINAL %&gt;% filter(cluster_ID %in% c(5)) %&gt;% mutate(pNum = factor(pNum), cluster_ID = factor(cluster_ID)) %&gt;% ggplot(aes(x=reorder(pNum, B_PLASMA_LOG_DIFF), y=B_PLASMA_LOG_DIFF, fill=cluster_ID))+ geom_col()+ theme_cowplot()+ theme(axis.ticks.y = element_blank())+ scale_fill_manual(values=pal_npg()(5)[5])+ scale_x_discrete(labels=NULL)+ geom_hline(yintercept = 1)+ geom_hline(yintercept = -1)+ labs(x=NULL, y=“log2(B cell counts+1) - log2(plasma cell counts+ 1)”)+ coord_flip()\n\n\n\n\nNEGATIVE CELLS\n\n\n```"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "COEUR/Results/Spatial Analysis/RMD/BT-adapt-clustering-followup-analysis.html",
    "href": "COEUR/Results/Spatial Analysis/RMD/BT-adapt-clustering-followup-analysis.html",
    "title": "COEUR BT and ADAPT LMAs Analysis",
    "section": "",
    "text": "I have identified neighborhood in each image stained with the BT and ADAPT panel from the COEUR TMAs. I need to import this cell level data, filter for the cases that we are using in the heatmap (have survival analysis, samples are pre-treatment)."
  },
  {
    "objectID": "COEUR/Results/Spatial Analysis/RMD/BT-adapt-clustering-followup-analysis.html#bt-panel",
    "href": "COEUR/Results/Spatial Analysis/RMD/BT-adapt-clustering-followup-analysis.html#bt-panel",
    "title": "COEUR BT and ADAPT LMAs Analysis",
    "section": "BT Panel",
    "text": "BT Panel\nFigure 1a\n\n\nCode\ngetClusterPlots(btLMAs, breaks = c(\"CD3pCD8n\", \"CD3pCD8p\", \"CD79ApCD20n\", \"CD20p\", \"CD3pCD8nFoxP3p\", \"CD3pCD8pFoxP3p\"), cell_type_colors = c(\"#377EB8\",\n                                \"#E41A1C\",\n                                \"#4DAF4A\",\n                                \"#FF7F00\",\n                                \"#FFFF33\",\n                                \"#F781BF\"))\n\n\n\n\n\nRenaming LMAs for easier interpretation - LMA1 is mostly B cells (B1), LMA7-2-6 have similar compositions (mostly T cells), with decreasing CD8+ and increasing CD8- proportions (T1,T2,T3). LMA5-4-3 are mostly plasma cell dominated with increasing proportions of plasma cells (P1,P2,P3).\nFigure 1b\n\n\nCode\nbtLMAs$LMA &lt;- recode_factor(btLMAs$LMA, `7`=\"T1\", `2`=\"T2\", `6`=\"T3\", `5`=\"P1\", `4`=\"P2\", `3`=\"P3\", `1`=\"B1\")\n\ngetClusterPlots(btLMAs, breaks = c(\"CD3pCD8n\", \"CD3pCD8p\", \"CD79ApCD20n\", \"CD20p\", \"CD3pCD8nFoxP3p\", \"CD3pCD8pFoxP3p\"), cell_type_colors = c(\"#377EB8\",\n                                \"#E41A1C\",\n                                \"#4DAF4A\",\n                                \"#FF7F00\",\n                                \"#FFFF33\",\n                                \"#F781BF\"))"
  },
  {
    "objectID": "COEUR/Results/Spatial Analysis/RMD/BT-adapt-clustering-followup-analysis.html#adapt-panel",
    "href": "COEUR/Results/Spatial Analysis/RMD/BT-adapt-clustering-followup-analysis.html#adapt-panel",
    "title": "COEUR BT and ADAPT LMAs Analysis",
    "section": "ADAPT Panel",
    "text": "ADAPT Panel\nFigure 2a\n\n\nCode\ngetClusterPlots(adaptLMAs, breaks =  c(\"CD68pPDL1n\", \"CD68pPDL1p\", \"CD3pCD8pPD1n\", \"CD3pCD8pPD1p\", \"CD3pCD8nPD1n\", \"CD3pCD8nPD1p\"), cell_type_colors = c(\"#4DAF4A\",\n              \"#FFFF33\",\n              \n              \"#f4a3a5\",\n              \"#e41a1d\",\n              \"#afcbe3\",\n              \"#377eb8\"))\n\n\n\n\n\nRenaming LMA1-LMA6-LMA2-4 to M1-M2-M3-M4. LMA7-3-5 to T1-T2-T3\nFigure 2b\n\n\nCode\nadaptLMAs$LMA &lt;- recode_factor(adaptLMAs$LMA, `1`=\"M1\", `6`=\"M2\", `2`=\"M3\", `4`=\"M4\", `7`=\"T1\", `3`=\"T2\", `5`=\"T3\")\ngetClusterPlots(adaptLMAs, breaks =  c(\"CD68pPDL1n\", \"CD68pPDL1p\", \"CD3pCD8pPD1n\", \"CD3pCD8pPD1p\", \"CD3pCD8nPD1n\", \"CD3pCD8nPD1p\"), cell_type_colors = c(\"#4DAF4A\",\n              \"#FFFF33\",\n              \n              \"#f4a3a5\",\n              \"#e41a1d\",\n              \"#afcbe3\",\n              \"#377eb8\"))"
  },
  {
    "objectID": "COEUR/Scripts/Data Processing/BT_ADAPT_merging.html",
    "href": "COEUR/Scripts/Data Processing/BT_ADAPT_merging.html",
    "title": "Merging ADAPT and BT counts",
    "section": "",
    "text": "# Import BT and ADAPT per image counts\nADAPT_per_image &lt;- read.csv(\"../../Final_Data/ADAPT_per_image_counts.csv\")\nglimpse(ADAPT_per_image)\n\nRows: 1,894\nColumns: 26\n$ Image            &lt;chr&gt; \"HGS_A_4_Scan1_Core[1,1,B]_[3937,39813]_component_dat…\n$ CD3pCD8nPD1n_S   &lt;int&gt; 43, 174, 0, 13, 4, 19, 49, 216, 0, 2, 15, 30, 12, 7, …\n$ CD3pCD8nPD1n_E   &lt;int&gt; 27, 70, 0, 19, 9, 5, 25, 29, 1, 1, 12, 50, 24, 7, 15,…\n$ CD3pCD8nPD1p_S   &lt;int&gt; 5, 52, 0, 3, 0, 4, 12, 123, 0, 0, 2, 80, 0, 0, 0, 27,…\n$ CD3pCD8nPD1p_E   &lt;int&gt; 4, 20, 0, 2, 4, 1, 1, 9, 2, 0, 6, 65, 2, 2, 5, 3, 0, …\n$ CD3pCD8pPD1n_S   &lt;int&gt; 33, 7, 0, 8, 4, 6, 27, 88, 0, 0, 2, 33, 2, 2, 0, 336,…\n$ CD3pCD8pPD1n_E   &lt;int&gt; 16, 5, 1, 18, 44, 7, 23, 36, 1, 0, 0, 203, 1, 2, 12, …\n$ CD3pCD8pPD1p_S   &lt;int&gt; 7, 4, 0, 4, 0, 1, 8, 83, 0, 1, 1, 193, 0, 0, 0, 103, …\n$ CD3pCD8pPD1p_E   &lt;int&gt; 1, 6, 0, 12, 40, 5, 2, 34, 4, 0, 2, 225, 0, 0, 3, 39,…\n$ CD68nPDL1nPD1p_S &lt;int&gt; 2, 5, 4, 1, 0, 2, 4, 163, 2, 0, 1, 26, 0, 0, 0, 13, 2…\n$ CD68nPDL1nPD1p_E &lt;int&gt; 2, 3, 13, 4, 5, 6, 12, 22, 14, 0, 7, 59, 1, 0, 12, 1,…\n$ area_mm2_S       &lt;dbl&gt; 0.0398304, 0.2006432, 0.0982136, 0.0364687, 0.0181770…\n$ area_mm2_E       &lt;dbl&gt; 0.3308669, 0.2030755, 0.0765365, 0.3187362, 0.3807839…\n$ TMA              &lt;chr&gt; \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\"…\n$ Sector           &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Row              &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3,…\n$ Column           &lt;chr&gt; \"B\", \"C\", \"D\", \"F\", \"G\", \"H\", \"I\", \"J\", \"B\", \"C\", \"D\"…\n$ tma_seC_row_col  &lt;chr&gt; \"A_1_1_B\", \"A_1_1_C\", \"A_1_1_D\", \"A_1_1_F\", \"A_1_1_G\"…\n$ pNum             &lt;int&gt; 664, 89, 107, 215, 330, 391, 892, 429, 601, 103, 457,…\n$ total_area       &lt;dbl&gt; 0.3706973, 0.4037187, 0.1747501, 0.3552049, 0.3989609…\n$ CD68pPDL1n_S     &lt;int&gt; 30, 113, 12, 71, 0, 45, 97, 132, 0, 6, 61, 24, 64, 18…\n$ CD68pPDL1n_E     &lt;int&gt; 92, 205, 12, 196, 62, 30, 150, 17, 3, 120, 180, 59, 1…\n$ CD68pPDL1p_S     &lt;int&gt; 3, 128, 0, 46, 9, 11, 3, 181, 2, 29, 34, 167, 39, 1, …\n$ CD68pPDL1p_E     &lt;int&gt; 30, 264, 0, 15, 82, 3, 29, 21, 3, 43, 49, 82, 49, 4, …\n$ PDL1pCKp_S       &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,…\n$ PDL1pCKp_E       &lt;int&gt; 0, 68, 0, 0, 2, 0, 0, 0, 0, 9, 0, 1, 0, 0, 0, 0, 0, 0…\n\nBT_per_image &lt;- read.csv(\"../../Final_Data/BT_per_image_counts.csv\")[,-1]\nglimpse(BT_per_image)\n\nRows: 1,994\nColumns: 22\n$ Image            &lt;chr&gt; \"HGS_A_4_B+T_Scan1_Core[1,1,B]_[4615,44342]_component…\n$ CD3pCD8n_t       &lt;int&gt; 3, 6, 23, 15, 0, 0, 2, 18, 1, 0, 3, 35, 2, 1, 3, 0, 0…\n$ CD3pCD8n_s       &lt;int&gt; 44, 3, 49, 62, 1, 0, 1, 6, 147, 5, 7, 32, 8, 1, 6, 7,…\n$ CD3pCD8nFoxP3p_t &lt;int&gt; 0, 14, 0, 19, 0, 0, 1, 8, 2, 0, 5, 39, 2, 2, 0, 0, 0,…\n$ CD3pCD8nFoxP3p_s &lt;int&gt; 3, 2, 15, 84, 0, 0, 0, 1, 88, 5, 6, 16, 2, 5, 4, 3, 0…\n$ CD3pCD8p_t       &lt;int&gt; 19, 91, 18, 157, 0, 4, 0, 14, 8, 1, 18, 98, 0, 6, 2, …\n$ CD3pCD8p_s       &lt;int&gt; 47, 10, 39, 67, 0, 3, 0, 5, 154, 12, 35, 51, 5, 1, 9,…\n$ area_mm2_t       &lt;dbl&gt; 0.3646832, 0.3635600, 0.2753643, 0.2088972, 0.1503123…\n$ area_mm2_s       &lt;dbl&gt; 0.1108339, 0.0522965, 0.1711708, 0.1609591, 0.1873150…\n$ CD20p_t          &lt;int&gt; 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0,…\n$ CD20p_s          &lt;int&gt; 0, 1, 9, 0, 1, 0, 0, 0, 32, 1, 0, 5, 0, 0, 0, 0, 0, 0…\n$ CD3pCD8pFoxP3p_t &lt;int&gt; 0, 2, 0, 6, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0,…\n$ CD3pCD8pFoxP3p_s &lt;int&gt; 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ CD79ApCD20n_t    &lt;int&gt; 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 4, 8, 3, 0, 0, 0, 0,…\n$ CD79ApCD20n_s    &lt;int&gt; 0, 1, 3, 221, 0, 2, 0, 0, 34, 2, 1, 54, 3, 1, 11, 0, …\n$ TMA              &lt;chr&gt; \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\"…\n$ Sector           &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ Row              &lt;int&gt; 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4,…\n$ Column           &lt;chr&gt; \"B\", \"G\", \"I\", \"J\", \"A\", \"B\", \"C\", \"J\", \"A\", \"C\", \"D\"…\n$ tma_sec_row_col  &lt;chr&gt; \"A_1_1_B\", \"A_1_1_G\", \"A_1_1_I\", \"A_1_1_J\", \"A_1_2_A\"…\n$ pNum             &lt;int&gt; 664, 330, 892, 429, 525, 601, 103, 9, 323, 437, 492, …\n$ total_area       &lt;dbl&gt; 0.4755171, 0.4158565, 0.4465351, 0.3698563, 0.3376273…\n\n\n\n# Standardize suffixes so all epithelial columns have _E and stromal have _S\ncolnames(BT_per_image) &lt;- gsub(\"_t\", \"_E\", colnames(BT_per_image)) %&gt;%\n  gsub(\"_s\", \"_S\", .)\n\n\n#Patient summary (add all counts and area measurements across cores for the same patient)\nADAPT_per_patient &lt;- ADAPT_per_image %&gt;% group_by(pNum) %&gt;% select(-contains(c(\"Sector\", \"Row\",\"Column\",\"TMA\", \"Detections\"))) %&gt;%\n  summarise(across(where(is.numeric), ~sum(.x, na.rm=TRUE)))\nglimpse(ADAPT_per_patient)\n\nRows: 1,077\nColumns: 20\n$ pNum             &lt;int&gt; 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ CD3pCD8nPD1n_S   &lt;int&gt; 22, 0, 19, 1, 31, 13, 0, 0, 3, 42, 21, 13, 2, 3, 8, 5…\n$ CD3pCD8nPD1n_E   &lt;int&gt; 1, 0, 22, 1, 27, 8, 18, 1, 0, 0, 2, 36, 2, 0, 10, 6, …\n$ CD3pCD8nPD1p_S   &lt;int&gt; 23, 0, 59, 0, 18, 3, 0, 0, 0, 86, 29, 22, 0, 3, 1, 1,…\n$ CD3pCD8nPD1p_E   &lt;int&gt; 2, 1, 13, 0, 10, 1, 6, 0, 0, 1, 8, 24, 0, 0, 3, 0, 10…\n$ CD3pCD8pPD1n_S   &lt;int&gt; 5, 0, 24, 0, 10, 42, 0, 0, 2, 47, 18, 35, 1, 1, 2, 12…\n$ CD3pCD8pPD1n_E   &lt;int&gt; 0, 4, 15, 0, 7, 69, 12, 0, 1, 0, 5, 200, 0, 1, 4, 3, …\n$ CD3pCD8pPD1p_S   &lt;int&gt; 4, 0, 50, 0, 5, 14, 0, 0, 2, 78, 36, 27, 0, 0, 2, 0, …\n$ CD3pCD8pPD1p_E   &lt;int&gt; 4, 14, 28, 0, 11, 26, 4, 0, 0, 1, 2, 86, 0, 0, 2, 2, …\n$ CD68nPDL1nPD1p_S &lt;int&gt; 32, 0, 147, 2, 6, 0, 0, 0, 1, 312, 31, 112, 3, 5, 1, …\n$ CD68nPDL1nPD1p_E &lt;int&gt; 3, 1, 24, 1, 7, 1, 12, 0, 16, 2, 14, 27, 2, 17, 9, 5,…\n$ area_mm2_S       &lt;dbl&gt; 0.2547233, 0.0083039, 0.2807866, 0.2022337, 0.1164539…\n$ area_mm2_E       &lt;dbl&gt; 0.3355177, 0.3397186, 0.3017874, 0.3333567, 0.5991730…\n$ total_area       &lt;dbl&gt; 0.5902410, 0.3480225, 0.5825740, 0.5355904, 0.7156269…\n$ CD68pPDL1n_S     &lt;int&gt; 207, 5, 185, 41, 77, 103, 3, 4, 155, 163, 216, 84, 84…\n$ CD68pPDL1n_E     &lt;int&gt; 47, 127, 154, 2, 360, 320, 114, 20, 62, 10, 93, 135, …\n$ CD68pPDL1p_S     &lt;int&gt; 10, 1, 43, 6, 350, 211, 17, 2, 15, 19, 92, 114, 16, 0…\n$ CD68pPDL1p_E     &lt;int&gt; 0, 39, 1, 0, 292, 48, 70, 1, 1, 0, 8, 57, 1, 0, 1, 27…\n$ PDL1pCKp_S       &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1,…\n$ PDL1pCKp_E       &lt;int&gt; 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 108, 0, …\n\nBT_per_patient &lt;- BT_per_image %&gt;% group_by(pNum) %&gt;% select(-contains(c(\"Sector\", \"Row\",\"Column\",\"TMA\", \"Detections\"))) %&gt;%\n  summarise(across(where(is.numeric), ~sum(.x, na.rm=TRUE)))\nglimpse(BT_per_patient)\n\nRows: 1,090\nColumns: 16\n$ pNum             &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16…\n$ CD3pCD8n_E       &lt;int&gt; 2, 0, 4, 0, 3, 12, 0, 1, 19, 1, 0, 11, 2, 52, 0, 4, 1…\n$ CD3pCD8n_S       &lt;int&gt; 22, 0, 15, 0, 15, 5, 6, 33, 6, 0, 2, 147, 20, 61, 2, …\n$ CD3pCD8nFoxP3p_E &lt;int&gt; 5, 7, 37, 0, 2, 23, 2, 1, 9, 0, 0, 1, 1, 66, 0, 1, 3,…\n$ CD3pCD8nFoxP3p_S &lt;int&gt; 23, 0, 38, 0, 9, 10, 0, 4, 1, 0, 0, 22, 12, 11, 0, 2,…\n$ CD3pCD8p_E       &lt;int&gt; 5, 20, 44, 0, 4, 20, 105, 22, 17, 1, 1, 7, 7, 273, 1,…\n$ CD3pCD8p_S       &lt;int&gt; 8, 1, 63, 2, 23, 19, 29, 61, 6, 0, 3, 196, 38, 119, 1…\n$ area_mm2_E       &lt;dbl&gt; 0.4120475, 0.3123235, 0.2967971, 0.3529410, 0.0138621…\n$ area_mm2_S       &lt;dbl&gt; 0.3318424, 0.0932541, 0.4454908, 0.3709558, 0.2521645…\n$ CD20p_E          &lt;int&gt; 0, 1, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0…\n$ CD20p_S          &lt;int&gt; 0, 1, 2, 0, 3, 0, 0, 1, 0, 0, 0, 13, 0, 29, 0, 1, 0, …\n$ CD3pCD8pFoxP3p_E &lt;int&gt; 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 3, 0, 0, 0, 0,…\n$ CD3pCD8pFoxP3p_S &lt;int&gt; 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0,…\n$ CD79ApCD20n_E    &lt;int&gt; 0, 0, 17, 0, 3, 1, 0, 0, 0, 0, 0, 2, 0, 66, 0, 1, 0, …\n$ CD79ApCD20n_S    &lt;int&gt; 11, 0, 249, 0, 8, 29, 0, 1, 0, 0, 0, 340, 2, 354, 0, …\n$ total_area       &lt;dbl&gt; 0.7438899, 0.4055776, 0.7422879, 0.7238968, 0.2660266…\n\n\n\n# Combine panels and save\nCOMBINED_PANEL_INNER_JOIN &lt;- inner_join(ADAPT_per_patient, BT_per_patient, by=\"pNum\", suffix = c(\".ADAPT\", \".BT\"))\nglimpse(COMBINED_PANEL_INNER_JOIN)\n\nRows: 1,064\nColumns: 35\n$ pNum             &lt;int&gt; 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ CD3pCD8nPD1n_S   &lt;int&gt; 22, 0, 19, 1, 31, 13, 0, 0, 3, 42, 21, 13, 2, 3, 8, 5…\n$ CD3pCD8nPD1n_E   &lt;int&gt; 1, 0, 22, 1, 27, 8, 18, 1, 0, 0, 2, 36, 2, 0, 10, 6, …\n$ CD3pCD8nPD1p_S   &lt;int&gt; 23, 0, 59, 0, 18, 3, 0, 0, 0, 86, 29, 22, 0, 3, 1, 1,…\n$ CD3pCD8nPD1p_E   &lt;int&gt; 2, 1, 13, 0, 10, 1, 6, 0, 0, 1, 8, 24, 0, 0, 3, 0, 10…\n$ CD3pCD8pPD1n_S   &lt;int&gt; 5, 0, 24, 0, 10, 42, 0, 0, 2, 47, 18, 35, 1, 1, 2, 12…\n$ CD3pCD8pPD1n_E   &lt;int&gt; 0, 4, 15, 0, 7, 69, 12, 0, 1, 0, 5, 200, 0, 1, 4, 3, …\n$ CD3pCD8pPD1p_S   &lt;int&gt; 4, 0, 50, 0, 5, 14, 0, 0, 2, 78, 36, 27, 0, 0, 2, 0, …\n$ CD3pCD8pPD1p_E   &lt;int&gt; 4, 14, 28, 0, 11, 26, 4, 0, 0, 1, 2, 86, 0, 0, 2, 2, …\n$ CD68nPDL1nPD1p_S &lt;int&gt; 32, 0, 147, 2, 6, 0, 0, 0, 1, 312, 31, 112, 3, 5, 1, …\n$ CD68nPDL1nPD1p_E &lt;int&gt; 3, 1, 24, 1, 7, 1, 12, 0, 16, 2, 14, 27, 2, 17, 9, 5,…\n$ area_mm2_S.ADAPT &lt;dbl&gt; 0.2547233, 0.0083039, 0.2807866, 0.2022337, 0.1164539…\n$ area_mm2_E.ADAPT &lt;dbl&gt; 0.3355177, 0.3397186, 0.3017874, 0.3333567, 0.5991730…\n$ total_area.ADAPT &lt;dbl&gt; 0.5902410, 0.3480225, 0.5825740, 0.5355904, 0.7156269…\n$ CD68pPDL1n_S     &lt;int&gt; 207, 5, 185, 41, 77, 103, 3, 4, 155, 163, 216, 84, 84…\n$ CD68pPDL1n_E     &lt;int&gt; 47, 127, 154, 2, 360, 320, 114, 20, 62, 10, 93, 135, …\n$ CD68pPDL1p_S     &lt;int&gt; 10, 1, 43, 6, 350, 211, 17, 2, 15, 19, 92, 114, 16, 0…\n$ CD68pPDL1p_E     &lt;int&gt; 0, 39, 1, 0, 292, 48, 70, 1, 1, 0, 8, 57, 1, 0, 1, 27…\n$ PDL1pCKp_S       &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1,…\n$ PDL1pCKp_E       &lt;int&gt; 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 108, 0, …\n$ CD3pCD8n_E       &lt;int&gt; 2, 0, 4, 0, 12, 0, 19, 1, 0, 11, 2, 52, 0, 4, 15, 1, …\n$ CD3pCD8n_S       &lt;int&gt; 22, 0, 15, 0, 5, 6, 6, 0, 2, 147, 20, 61, 2, 6, 13, 2…\n$ CD3pCD8nFoxP3p_E &lt;int&gt; 5, 7, 37, 0, 23, 2, 9, 0, 0, 1, 1, 66, 0, 1, 3, 1, 3,…\n$ CD3pCD8nFoxP3p_S &lt;int&gt; 23, 0, 38, 0, 10, 0, 1, 0, 0, 22, 12, 11, 0, 2, 3, 3,…\n$ CD3pCD8p_E       &lt;int&gt; 5, 20, 44, 0, 20, 105, 17, 1, 1, 7, 7, 273, 1, 5, 14,…\n$ CD3pCD8p_S       &lt;int&gt; 8, 1, 63, 2, 19, 29, 6, 0, 3, 196, 38, 119, 1, 6, 5, …\n$ area_mm2_E.BT    &lt;dbl&gt; 0.4120475, 0.3123235, 0.2967971, 0.3529410, 0.5621711…\n$ area_mm2_S.BT    &lt;dbl&gt; 0.3318424, 0.0932541, 0.4454908, 0.3709558, 0.1531451…\n$ CD20p_E          &lt;int&gt; 0, 1, 2, 0, 2, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 0, 1, 1…\n$ CD20p_S          &lt;int&gt; 0, 1, 2, 0, 0, 0, 0, 0, 0, 13, 0, 29, 0, 1, 0, 1, 0, …\n$ CD3pCD8pFoxP3p_E &lt;int&gt; 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0,…\n$ CD3pCD8pFoxP3p_S &lt;int&gt; 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1,…\n$ CD79ApCD20n_E    &lt;int&gt; 0, 0, 17, 0, 1, 0, 0, 0, 0, 2, 0, 66, 0, 1, 0, 1, 3, …\n$ CD79ApCD20n_S    &lt;int&gt; 11, 0, 249, 0, 29, 0, 0, 0, 0, 340, 2, 354, 0, 1, 0, …\n$ total_area.BT    &lt;dbl&gt; 0.7438899, 0.4055776, 0.7422879, 0.7238968, 0.7153162…\n\n#Calculate stroma proportion\nCOMBINED_PANEL_INNER_JOIN &lt;- COMBINED_PANEL_INNER_JOIN %&gt;% mutate(BT_str_prop = (area_mm2_S.BT/total_area.BT)*100,\n                                                                  BT_epi_prop = (area_mm2_E.BT/total_area.BT)*100,\n                                                                  ADAPT_epi_prop = (area_mm2_E.ADAPT/total_area.ADAPT)*100,\n                                                                  ADAPT_str_prop = (area_mm2_S.ADAPT/total_area.ADAPT)*100) %&gt;%\n  mutate(avg_str_prop = (BT_str_prop+ADAPT_str_prop)/2,\n         avg_epi_prop = (BT_epi_prop+ADAPT_epi_prop)/2)\n\n\n# Write file\n# COMBINED_PANEL_INNER_JOIN %&gt;% write.csv(\"final_data/COMBINED_PANELS_COUNTS_08NOV22.csv\", row.names = FALSE)\n\n\n# Densities\nBT_per_patient_densities &lt;- BT_per_patient %&gt;% mutate(across(ends_with(\"_S\") & -area_mm2_E & -area_mm2_S & -total_area, ~ .x/area_mm2_S)) %&gt;%\n  mutate(across(ends_with(\"_E\") & -area_mm2_E & -area_mm2_S & -total_area, ~.x/area_mm2_E))\n\nglimpse(BT_per_patient_densities)\n\nRows: 1,090\nColumns: 16\n$ pNum             &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16…\n$ CD3pCD8n_E       &lt;dbl&gt; 4.853809, 0.000000, 13.477221, 0.000000, 216.417426, …\n$ CD3pCD8n_S       &lt;dbl&gt; 66.296531, 0.000000, 33.670729, 0.000000, 59.484979, …\n$ CD3pCD8nFoxP3p_E &lt;dbl&gt; 12.134523, 22.412659, 124.664291, 0.000000, 144.27828…\n$ CD3pCD8nFoxP3p_S &lt;dbl&gt; 69.310010, 0.000000, 85.299180, 0.000000, 35.690987, …\n$ CD3pCD8p_E       &lt;dbl&gt; 12.134523, 64.036168, 148.249427, 0.000000, 288.55656…\n$ CD3pCD8p_S       &lt;dbl&gt; 24.107829, 10.723389, 141.417062, 5.391478, 91.210301…\n$ area_mm2_E       &lt;dbl&gt; 0.4120475, 0.3123235, 0.2967971, 0.3529410, 0.0138621…\n$ area_mm2_S       &lt;dbl&gt; 0.3318424, 0.0932541, 0.4454908, 0.3709558, 0.2521645…\n$ CD20p_E          &lt;dbl&gt; 0.000000, 3.201808, 6.738610, 0.000000, 0.000000, 3.5…\n$ CD20p_S          &lt;dbl&gt; 0.000000, 10.723389, 4.489431, 0.000000, 11.896996, 0…\n$ CD3pCD8pFoxP3p_E &lt;dbl&gt; 0.000000, 0.000000, 3.369305, 0.000000, 0.000000, 0.0…\n$ CD3pCD8pFoxP3p_S &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.5…\n$ CD79ApCD20n_E    &lt;dbl&gt; 0.000000, 0.000000, 57.278188, 0.000000, 216.417426, …\n$ CD79ApCD20n_S    &lt;dbl&gt; 33.148266, 0.000000, 558.934101, 0.000000, 31.725322,…\n$ total_area       &lt;dbl&gt; 0.7438899, 0.4055776, 0.7422879, 0.7238968, 0.2660266…\n\nADAPT_per_patient_densities &lt;- ADAPT_per_patient %&gt;% mutate(across(ends_with(\"_S\") & -area_mm2_E & -area_mm2_S & -total_area, ~ .x/area_mm2_S)) %&gt;%\n  mutate(across(ends_with(\"_E\")  & -area_mm2_E & -area_mm2_S & -total_area, ~.x/area_mm2_E))\n\nglimpse(ADAPT_per_patient_densities)\n\nRows: 1,077\nColumns: 20\n$ pNum             &lt;int&gt; 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ CD3pCD8nPD1n_S   &lt;dbl&gt; 86.368228, 0.000000, 67.667047, 4.944774, 266.199758,…\n$ CD3pCD8nPD1n_E   &lt;dbl&gt; 2.980469, 0.000000, 72.899001, 2.999790, 45.062111, 1…\n$ CD3pCD8nPD1p_S   &lt;dbl&gt; 90.294056, 0.000000, 210.123987, 0.000000, 154.567601…\n$ CD3pCD8nPD1p_E   &lt;dbl&gt; 5.960937, 2.943613, 43.076682, 0.000000, 16.689671, 2…\n$ CD3pCD8pPD1n_S   &lt;dbl&gt; 19.629143, 0.000000, 85.474164, 0.000000, 85.870890, …\n$ CD3pCD8pPD1n_E   &lt;dbl&gt; 0.000000, 11.774451, 49.703864, 0.000000, 11.682769, …\n$ CD3pCD8pPD1p_S   &lt;dbl&gt; 15.703314, 0.000000, 178.071176, 0.000000, 42.935445,…\n$ CD3pCD8pPD1p_E   &lt;dbl&gt; 11.921875, 41.210578, 92.780547, 0.000000, 18.358638,…\n$ CD68nPDL1nPD1p_S &lt;dbl&gt; 125.626513, 0.000000, 523.529257, 9.889549, 51.522534…\n$ CD68nPDL1nPD1p_E &lt;dbl&gt; 8.941406, 2.943613, 79.526183, 2.999790, 11.682769, 2…\n$ area_mm2_S       &lt;dbl&gt; 0.2547233, 0.0083039, 0.2807866, 0.2022337, 0.1164539…\n$ area_mm2_E       &lt;dbl&gt; 0.3355177, 0.3397186, 0.3017874, 0.3333567, 0.5991730…\n$ total_area       &lt;dbl&gt; 0.5902410, 0.3480225, 0.5825740, 0.5355904, 0.7156269…\n$ CD68pPDL1n_S     &lt;dbl&gt; 812.64651, 602.12671, 658.86335, 202.73575, 661.20585…\n$ CD68pPDL1n_E     &lt;dbl&gt; 140.082028, 373.838818, 510.293008, 5.999579, 600.828…\n$ CD68pPDL1p_S     &lt;dbl&gt; 39.258285, 120.425342, 153.141211, 29.668646, 3005.48…\n$ CD68pPDL1p_E     &lt;dbl&gt; 0.000000, 114.800897, 3.313591, 0.000000, 487.338381,…\n$ PDL1pCKp_S       &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.0…\n$ PDL1pCKp_E       &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 1.668967, 0.0…\n\n\n\n# Combine densities dataframes\nCOMBINED_PANEL_INNER_JOIN &lt;- inner_join(ADAPT_per_patient_densities, BT_per_patient_densities, by=\"pNum\", suffix = c(\".ADAPT\", \".BT\"))\n\nCOMBINED_PANEL_INNER_JOIN &lt;- COMBINED_PANEL_INNER_JOIN %&gt;% mutate(BT_str_prop = (area_mm2_S.BT/total_area.BT)*100,\n                                                                  BT_epi_prop = (area_mm2_E.BT/total_area.BT)*100,\n                                                                  ADAPT_epi_prop = (area_mm2_E.ADAPT/total_area.ADAPT)*100,\n                                                                  ADAPT_str_prop = (area_mm2_S.ADAPT/total_area.ADAPT)*100) %&gt;%\n  mutate(avg_str_prop = (BT_str_prop+ADAPT_str_prop)/2,\n         avg_epi_prop = (BT_epi_prop+ADAPT_epi_prop)/2)\n\nglimpse(COMBINED_PANEL_INNER_JOIN)\n\nRows: 1,064\nColumns: 41\n$ pNum             &lt;int&gt; 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ CD3pCD8nPD1n_S   &lt;dbl&gt; 86.368228, 0.000000, 67.667047, 4.944774, 266.199758,…\n$ CD3pCD8nPD1n_E   &lt;dbl&gt; 2.980469, 0.000000, 72.899001, 2.999790, 45.062111, 1…\n$ CD3pCD8nPD1p_S   &lt;dbl&gt; 90.294056, 0.000000, 210.123987, 0.000000, 154.567601…\n$ CD3pCD8nPD1p_E   &lt;dbl&gt; 5.960937, 2.943613, 43.076682, 0.000000, 16.689671, 2…\n$ CD3pCD8pPD1n_S   &lt;dbl&gt; 19.629143, 0.000000, 85.474164, 0.000000, 85.870890, …\n$ CD3pCD8pPD1n_E   &lt;dbl&gt; 0.000000, 11.774451, 49.703864, 0.000000, 11.682769, …\n$ CD3pCD8pPD1p_S   &lt;dbl&gt; 15.703314, 0.000000, 178.071176, 0.000000, 42.935445,…\n$ CD3pCD8pPD1p_E   &lt;dbl&gt; 11.921875, 41.210578, 92.780547, 0.000000, 18.358638,…\n$ CD68nPDL1nPD1p_S &lt;dbl&gt; 125.626513, 0.000000, 523.529257, 9.889549, 51.522534…\n$ CD68nPDL1nPD1p_E &lt;dbl&gt; 8.941406, 2.943613, 79.526183, 2.999790, 11.682769, 2…\n$ area_mm2_S.ADAPT &lt;dbl&gt; 0.2547233, 0.0083039, 0.2807866, 0.2022337, 0.1164539…\n$ area_mm2_E.ADAPT &lt;dbl&gt; 0.3355177, 0.3397186, 0.3017874, 0.3333567, 0.5991730…\n$ total_area.ADAPT &lt;dbl&gt; 0.5902410, 0.3480225, 0.5825740, 0.5355904, 0.7156269…\n$ CD68pPDL1n_S     &lt;dbl&gt; 812.64651, 602.12671, 658.86335, 202.73575, 661.20585…\n$ CD68pPDL1n_E     &lt;dbl&gt; 140.082028, 373.838818, 510.293008, 5.999579, 600.828…\n$ CD68pPDL1p_S     &lt;dbl&gt; 39.258285, 120.425342, 153.141211, 29.668646, 3005.48…\n$ CD68pPDL1p_E     &lt;dbl&gt; 0.000000, 114.800897, 3.313591, 0.000000, 487.338381,…\n$ PDL1pCKp_S       &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.0…\n$ PDL1pCKp_E       &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 1.668967, 0.0…\n$ CD3pCD8n_E       &lt;dbl&gt; 4.853809, 0.000000, 13.477221, 0.000000, 21.345814, 0…\n$ CD3pCD8n_S       &lt;dbl&gt; 66.296531, 0.000000, 33.670729, 0.000000, 32.648776, …\n$ CD3pCD8nFoxP3p_E &lt;dbl&gt; 12.134523, 22.412659, 124.664291, 0.000000, 40.912811…\n$ CD3pCD8nFoxP3p_S &lt;dbl&gt; 69.310010, 0.000000, 85.299180, 0.000000, 65.297551, …\n$ CD3pCD8p_E       &lt;dbl&gt; 12.134523, 64.036168, 148.249427, 0.000000, 35.576357…\n$ CD3pCD8p_S       &lt;dbl&gt; 24.107829, 10.723389, 141.417062, 5.391478, 124.06534…\n$ area_mm2_E.BT    &lt;dbl&gt; 0.4120475, 0.3123235, 0.2967971, 0.3529410, 0.5621711…\n$ area_mm2_S.BT    &lt;dbl&gt; 0.3318424, 0.0932541, 0.4454908, 0.3709558, 0.1531451…\n$ CD20p_E          &lt;dbl&gt; 0.000000, 3.201808, 6.738610, 0.000000, 3.557636, 0.0…\n$ CD20p_S          &lt;dbl&gt; 0.000000, 10.723389, 4.489431, 0.000000, 0.000000, 0.…\n$ CD3pCD8pFoxP3p_E &lt;dbl&gt; 0.000000, 0.000000, 3.369305, 0.000000, 0.000000, 0.0…\n$ CD3pCD8pFoxP3p_S &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 6.529755, 0.0…\n$ CD79ApCD20n_E    &lt;dbl&gt; 0.000000, 0.000000, 57.278188, 0.000000, 1.778818, 0.…\n$ CD79ApCD20n_S    &lt;dbl&gt; 33.148266, 0.000000, 558.934101, 0.000000, 189.362898…\n$ total_area.BT    &lt;dbl&gt; 0.7438899, 0.4055776, 0.7422879, 0.7238968, 0.7153162…\n$ BT_str_prop      &lt;dbl&gt; 44.60907, 22.99291, 60.01590, 51.24429, 21.40943, 25.…\n$ BT_epi_prop      &lt;dbl&gt; 55.39093, 77.00709, 39.98410, 48.75571, 78.59057, 74.…\n$ ADAPT_epi_prop   &lt;dbl&gt; 56.84419, 97.61398, 51.80241, 62.24098, 83.72701, 78.…\n$ ADAPT_str_prop   &lt;dbl&gt; 43.155813, 2.386024, 48.197585, 37.759023, 16.272991,…\n$ avg_str_prop     &lt;dbl&gt; 43.88244, 12.68947, 54.10675, 44.50166, 18.84121, 23.…\n$ avg_epi_prop     &lt;dbl&gt; 56.11756, 87.31053, 45.89325, 55.49834, 81.15879, 76.…\n\n#COMBINED_PANEL_INNER_JOIN %&gt;% write.csv(\"../../Final_Data/COMBINED_PANELS_DENSITIES_08NOV22.csv\", row.names = FALSE)"
  },
  {
    "objectID": "COEUR/Scripts/Data Processing/BT_processing.html",
    "href": "COEUR/Scripts/Data Processing/BT_processing.html",
    "title": "Processing QuPath Data [BT Panel]",
    "section": "",
    "text": "## Takes qupath annotation level data and combines it with pNums\ncoreIDs &lt;- read.csv(\"../../../coreIDs.csv\")\npatientIDs &lt;- read.csv(\"../../../patientID_core.csv\")\n\nannotation_data &lt;- vroom::vroom(\"/Volumes/Sangiustino/COEUR_mcIF/QuPath final data/final_BT_annotation_level.csv\")\n\nRows: 4056 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): Image, Class\ndbl (7): Num CD3pCD8n, Num CD3pCD8nFoxP3p, Num CD3pCD8p, Area µm^2, Num CD20...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nannotation_data[is.na(annotation_data)] &lt;- 0 #cores that don't have a specific type of cell come up as NA\n\n# colnames(annotation_data)\n# [1] \"Image\"              \"Class\"              \"Num.CD3pCD8n\"       \"Num.CD3pCD8nFoxP3p\" \"Num.CD3pCD8p\"       \"Area.Âµm.2\"        \n# [7] \"Num.CD20p\"          \"Num.CD3pCD8pFoxP3p\" \"Num.CD79ApCD20n\"   \n\nnames(annotation_data)[6] &lt;- \"area_um2\""
  },
  {
    "objectID": "COEUR/Scripts/Data Processing/BT_processing.html#load-data-and-fix-colnames",
    "href": "COEUR/Scripts/Data Processing/BT_processing.html#load-data-and-fix-colnames",
    "title": "Processing QuPath Data [BT Panel]",
    "section": "",
    "text": "## Takes qupath annotation level data and combines it with pNums\ncoreIDs &lt;- read.csv(\"../../../coreIDs.csv\")\npatientIDs &lt;- read.csv(\"../../../patientID_core.csv\")\n\nannotation_data &lt;- vroom::vroom(\"/Volumes/Sangiustino/COEUR_mcIF/QuPath final data/final_BT_annotation_level.csv\")\n\nRows: 4056 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): Image, Class\ndbl (7): Num CD3pCD8n, Num CD3pCD8nFoxP3p, Num CD3pCD8p, Area µm^2, Num CD20...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nannotation_data[is.na(annotation_data)] &lt;- 0 #cores that don't have a specific type of cell come up as NA\n\n# colnames(annotation_data)\n# [1] \"Image\"              \"Class\"              \"Num.CD3pCD8n\"       \"Num.CD3pCD8nFoxP3p\" \"Num.CD3pCD8p\"       \"Area.Âµm.2\"        \n# [7] \"Num.CD20p\"          \"Num.CD3pCD8pFoxP3p\" \"Num.CD79ApCD20n\"   \n\nnames(annotation_data)[6] &lt;- \"area_um2\""
  },
  {
    "objectID": "COEUR/Scripts/Data Processing/BT_processing.html#conver-to-wide-format-and-fix-image-names",
    "href": "COEUR/Scripts/Data Processing/BT_processing.html#conver-to-wide-format-and-fix-image-names",
    "title": "Processing QuPath Data [BT Panel]",
    "section": "Conver to wide format and fix image names",
    "text": "Conver to wide format and fix image names\nThere are mismatches between the TMA coordinates and the image names\n\n# widen data\nannotation_wide &lt;- pivot_wider(annotation_data, names_from = c(\"Class\"), values_from = c(3:9))\nglimpse(annotation_wide)\n\nRows: 2,028\nColumns: 15\n$ Image                       &lt;chr&gt; \"HGS_A_4_B+T_Scan1_Core[1,1,B]_[4615,44342…\n$ `Num CD3pCD8n_Tumor`        &lt;dbl&gt; 3, 6, 23, 15, 0, 0, 2, 18, 1, 0, 3, 35, 2,…\n$ `Num CD3pCD8n_Stroma`       &lt;dbl&gt; 44, 3, 49, 62, 1, 0, 1, 6, 147, 5, 7, 32, …\n$ `Num CD3pCD8nFoxP3p_Tumor`  &lt;dbl&gt; 0, 14, 0, 19, 0, 0, 1, 8, 2, 0, 5, 39, 2, …\n$ `Num CD3pCD8nFoxP3p_Stroma` &lt;dbl&gt; 3, 2, 15, 84, 0, 0, 0, 1, 88, 5, 6, 16, 2,…\n$ `Num CD3pCD8p_Tumor`        &lt;dbl&gt; 19, 91, 18, 157, 0, 4, 0, 14, 8, 1, 18, 98…\n$ `Num CD3pCD8p_Stroma`       &lt;dbl&gt; 47, 10, 39, 67, 0, 3, 0, 5, 154, 12, 35, 5…\n$ area_um2_Tumor              &lt;dbl&gt; 364683.2, 363560.0, 275364.3, 208897.2, 15…\n$ area_um2_Stroma             &lt;dbl&gt; 110833.9, 52296.5, 171170.8, 160959.1, 187…\n$ `Num CD20p_Tumor`           &lt;dbl&gt; 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, …\n$ `Num CD20p_Stroma`          &lt;dbl&gt; 0, 1, 9, 0, 1, 0, 0, 0, 32, 1, 0, 5, 0, 0,…\n$ `Num CD3pCD8pFoxP3p_Tumor`  &lt;dbl&gt; 0, 2, 0, 6, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, …\n$ `Num CD3pCD8pFoxP3p_Stroma` &lt;dbl&gt; 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, …\n$ `Num CD79ApCD20n_Tumor`     &lt;dbl&gt; 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 4, 8, 3, …\n$ `Num CD79ApCD20n_Stroma`    &lt;dbl&gt; 0, 1, 3, 221, 0, 2, 0, 0, 34, 2, 1, 54, 3,…\n\n\n\n# Adjust core names\nannotation_wide$Image &lt;- gsub(\"HGS_A_4_B+T_Scan1_Core[4,1,B]_[11997,53841]_component_data.tif\", \"HGS_A_4_B+T_Scan1_Core[4,1,A]_[11997,53841]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_A_4_B+T_Scan1_Core[4,1,F]_[15061,54128]_component_data.tif\", \"HGS_A_4_B+T_Scan1_Core[4,1,E]_[15061,54128]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_A_4_B+T_Scan1_Core[4,1,I]_[17662,54510]_component_data.tif\", \"HGS_A_4_B+T_Scan1_Core[4,1,H]_[17662,54510]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_A_4_B+T_Scan1_Core[4,3,A]_[12388,55631]_component_data.tif\", \"HGS_A_4_B+T_Scan1_Core[4,3,B]_[12388,55631]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_A_4_B+T_Scan1_Core[4,3,B]_[11578,55514]_component_data.tif\", \"HGS_A_4_B+T_Scan1_Core[4,3,A]_[11578,55514]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_A_4_B+T_Scan1_Core[4,3,E]_[15681,56061]_component_data.tif\", \"HGS_A_4_B+T_Scan1_Core[4,3,F]_[15681,56061]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_A_4_B+T_Scan1_Core[4,3,H]_[18068,56275]_component_data.tif\", \"HGS_A_4_B+T_Scan1_Core[4,3,I]_[18068,56275]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_A_4_B+T_Scan1_Core[4,3,I]_[18879,56323]_component_data.tif\", \"HGS_A_4_B+T_Scan1_Core[4,3,J]_[18879,56323]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_A_4_B+T_Scan1_Core[4,4,A]_[13319,56514]_component_data.tif\", \"HGS_A_4_B+T_Scan1_Core[4,4,C]_[13319,56514]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_A_4_B+T_Scan1_Core[4,4,J]_[11608,56430]_component_data.tif\", \"HGS_A_4_B+T_Scan1_Core[4,4,A]_[11608,56430]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_A_4_B+T_Scan1_Core[4,5,A]_[14034,57636]_component_data.tif\", \"HGS_A_4_B+T_Scan1_Core[4,5,D]_[14034,57636]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_A_4_B+T_Scan1_Core[4,5,B]_[14942,57683]_component_data.tif\", \"HGS_A_4_B+T_Scan1_Core[4,5,E]_[14942,57683]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_A_4_B+T_Scan1_Core[4,5,E]_[11646,57269]_component_data.tif\", \"HGS_A_4_B+T_Scan1_Core[4,5,A]_[11646,57269]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_D_4_B+T_Scan1_Core[4,1,K]_[19794,52261]_component_data.tif\", \"HGS_D_4_B+T_Scan1_Core[4,1,J]_[19794,52261]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_D_4_B+T_Scan1_Core[4,3,K]_[19746,54075]_component_data.tif\", \"HGS_D_4_B+T_Scan1_Core[4,3,J]_[19746,54075]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_D_4_B+T_Scan1_Core[4,6,A]_[12348,55746]_component_data.tif\", \"HGS_D_4_B+T_Scan1_Core[4,5,A]_[12348,55746]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_D_4_B+T_Scan1_Core[4,6,B]_[13136,55769]_component_data.tif\", \"HGS_D_4_B+T_Scan1_Core[4,5,B]_[13136,55769]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_D_4_B+T_Scan1_Core[4,6,C]_[14030,55780]_component_data.tif\", \"HGS_D_4_B+T_Scan1_Core[4,5,C]_[14030,55780]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_A_4_B+T_Scan1_Core[4,1,G]_[15991,54295]_component_data.tif\", \"HGS_A_4_B+T_Scan1_Core[4,1,F]_[15991,54295]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_A_4_B+T_Scan1_Core[4,1,H]_[16779,54414]_component_data.tif\", \"HGS_A_4_B+T_Scan1_Core[4,1,G]_[16779,54414]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_A_4_B+T_Scan1_Core[4,1,J]_[18521,54605]_component_data.tif\", \"HGS_A_4_B+T_Scan1_Core[4,1,I]_[18521,54605]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_A_4_B+T_Scan1_Core[4,1,K]_[19332,54676]_component_data.tif\", \"HGS_A_4_B+T_Scan1_Core[4,1,J]_[19332,54676]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_A_4_B+T_Scan1_Core[4,3,C]_[14839,55938]_component_data.tif\", \"HGS_A_4_B+T_Scan1_Core[4,3,E]_[14839,55938]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_A_4_B+T_Scan1_Core[4,3,F]_[16660,56180]_component_data.tif\", \"HGS_A_4_B+T_Scan1_Core[4,3,G]_[16660,56180]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_A_4_B+T_Scan1_Core[4,3,G]_[17269,56189]_component_data.tif\", \"HGS_A_4_B+T_Scan1_Core[4,3,H]_[17269,56189]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_A_4_B+T_Scan1_Core[4,4,B]_[14154,56729]_component_data.tif\", \"HGS_A_4_B+T_Scan1_Core[4,4,D]_[14154,56729]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_A_4_B+T_Scan1_Core[4,4,C]_[15777,56967]_component_data.tif\", \"HGS_A_4_B+T_Scan1_Core[4,4,F]_[15777,56967]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_A_4_B+T_Scan1_Core[4,4,D]_[14965,56872]_component_data.tif\", \"HGS_A_4_B+T_Scan1_Core[4,4,E]_[14965,56872]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_A_4_B+T_Scan1_Core[4,4,E]_[16564,57063]_component_data.tif\", \"HGS_A_4_B+T_Scan1_Core[4,4,G]_[16564,57063]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_A_4_B+T_Scan1_Core[4,4,F]_[17328,57111]_component_data.tif\", \"HGS_A_4_B+T_Scan1_Core[4,4,H]_[17328,57111]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_A_4_B+T_Scan1_Core[4,4,G]_[18139,57182]_component_data.tif\", \"HGS_A_4_B+T_Scan1_Core[4,4,I]_[18139,57182]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_A_4_B+T_Scan1_Core[4,4,H]_[19022,57206]_component_data.tif\", \"HGS_A_4_B+T_Scan1_Core[4,4,J]_[19022,57206]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_A_4_B+T_Scan1_Core[4,4,I]_[12543,56536]_component_data.tif\", \"HGS_A_4_B+T_Scan1_Core[4,4,B]_[12543,56536]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_D_4_B+T_Scan1_Core[4,2,K]_[19656,53146]_component_data.tif\", \"HGS_D_4_B+T_Scan1_Core[4,2,J]_[19656,53146]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_D_4_B+T_Scan1_Core[4,6,E]_[15642,55793]_component_data.tif\", \"HGS_D_4_B+T_Scan1_Core[4,5,E]_[15642,55793]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\n\n\n# Function to extract TMA/SECTOR/ROW/COLUMN from image name\nmid &lt;- function(text, start, n) {\n  substr(text, start, start + n - 1)\n}\n\n#make new identifier columns\nannotation_wide$TMA &lt;- mid(annotation_wide$Image, 5, 1) ##parsing sector/row/column info from image column\nannotation_wide$Sector &lt;- mid(annotation_wide$Image, 24, 1)\nannotation_wide$Row &lt;- mid(annotation_wide$Image, 26, 2)\nannotation_wide$Column &lt;- mid(annotation_wide$Image, 28, 2)\n\n#clean up names\nannotation_wide$Row &lt;- gsub(\",\", \"\", annotation_wide$Row) ##delete extra symbols (some row values are 2 char long)\nannotation_wide$Column &lt;- gsub(\",\", \"\", annotation_wide$Column)\nannotation_wide$Column &lt;- gsub(\"]\", \"\", annotation_wide$Column)\n\n# Each patient has two cores - need to match both\nindex_core1 &lt;- match(coreIDs$TMA_ID, patientIDs$TMA_ID_1)\nindex_core2 &lt;- match(coreIDs$TMA_ID, patientIDs$TMA_ID_2)\n\npNum_1 &lt;- patientIDs$PATIENT_ID[index_core1]\npNum_2 &lt;- patientIDs$PATIENT_ID[index_core2]\npNum_1[is.na(pNum_1)] &lt;- pNum_2[is.na(pNum_1)] #merging the two lists\n\ncoreIDs$pNum &lt;- pNum_1\ncoreIDs$Column &lt;- LETTERS[coreIDs$Column]\n\n#Unique identifier column per image\ncoreIDs$tma_sec_row_col &lt;- paste(coreIDs$TMA, coreIDs$Sector, coreIDs$Row, coreIDs$Column, sep=\"_\")\nannotation_wide$tma_sec_row_col &lt;- paste(annotation_wide$TMA, annotation_wide$Sector, annotation_wide$Row, annotation_wide$Column, sep=\"_\")\n\n#Which cores don't have an associated patient identifier\nmissingCOREids &lt;- annotation_wide[!(annotation_wide$tma_sec_row_col %in% coreIDs$tma_sec_row_col),] #all are accounted for\n\nannotation_wide$pNum &lt;- coreIDs$pNum[match(annotation_wide$tma_sec_row_col, coreIDs$tma_sec_row_col)]\n\n#Remove NAs\nannotation_wide &lt;- annotation_wide %&gt;% na.omit()\n\n#changing some colnames\ncolnames(annotation_wide) &lt;- gsub(\"Num.CD\", \"CD\", colnames(annotation_wide))\ncolnames(annotation_wide) &lt;- gsub(\"Tumor\", \"t\", colnames(annotation_wide))\ncolnames(annotation_wide) &lt;- gsub(\"Stroma\", \"s\", colnames(annotation_wide))\n\n#converting area(um2) to area(mm2)\nannotation_wide$area_um2_t &lt;- annotation_wide$area_um2_t/1e6\nannotation_wide$area_um2_s &lt;- annotation_wide$area_um2_s/1e6\nannotation_wide$total_area &lt;- annotation_wide$area_um2_t+annotation_wide$area_um2_s\ncolnames(annotation_wide) &lt;- gsub(\"um2\", \"mm2\", colnames(annotation_wide))\n\n\nglimpse(annotation_wide)\n\nRows: 1,994\nColumns: 22\n$ Image            &lt;chr&gt; \"HGS_A_4_B+T_Scan1_Core[1,1,B]_[4615,44342]_component…\n$ CD3pCD8n_t       &lt;dbl&gt; 3, 6, 23, 15, 0, 0, 2, 18, 1, 0, 3, 35, 2, 1, 3, 0, 0…\n$ CD3pCD8n_s       &lt;dbl&gt; 44, 3, 49, 62, 1, 0, 1, 6, 147, 5, 7, 32, 8, 1, 6, 7,…\n$ CD3pCD8nFoxP3p_t &lt;dbl&gt; 0, 14, 0, 19, 0, 0, 1, 8, 2, 0, 5, 39, 2, 2, 0, 0, 0,…\n$ CD3pCD8nFoxP3p_s &lt;dbl&gt; 3, 2, 15, 84, 0, 0, 0, 1, 88, 5, 6, 16, 2, 5, 4, 3, 0…\n$ CD3pCD8p_t       &lt;dbl&gt; 19, 91, 18, 157, 0, 4, 0, 14, 8, 1, 18, 98, 0, 6, 2, …\n$ CD3pCD8p_s       &lt;dbl&gt; 47, 10, 39, 67, 0, 3, 0, 5, 154, 12, 35, 51, 5, 1, 9,…\n$ area_mm2_t       &lt;dbl&gt; 0.3646832, 0.3635600, 0.2753643, 0.2088972, 0.1503123…\n$ area_mm2_s       &lt;dbl&gt; 0.1108339, 0.0522965, 0.1711708, 0.1609591, 0.1873150…\n$ CD20p_t          &lt;dbl&gt; 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0,…\n$ CD20p_s          &lt;dbl&gt; 0, 1, 9, 0, 1, 0, 0, 0, 32, 1, 0, 5, 0, 0, 0, 0, 0, 0…\n$ CD3pCD8pFoxP3p_t &lt;dbl&gt; 0, 2, 0, 6, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0,…\n$ CD3pCD8pFoxP3p_s &lt;dbl&gt; 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ CD79ApCD20n_t    &lt;dbl&gt; 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 4, 8, 3, 0, 0, 0, 0,…\n$ CD79ApCD20n_s    &lt;dbl&gt; 0, 1, 3, 221, 0, 2, 0, 0, 34, 2, 1, 54, 3, 1, 11, 0, …\n$ TMA              &lt;chr&gt; \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\"…\n$ Sector           &lt;chr&gt; \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\"…\n$ Row              &lt;chr&gt; \"1\", \"1\", \"1\", \"1\", \"2\", \"2\", \"2\", \"2\", \"3\", \"3\", \"3\"…\n$ Column           &lt;chr&gt; \"B\", \"G\", \"I\", \"J\", \"A\", \"B\", \"C\", \"J\", \"A\", \"C\", \"D\"…\n$ tma_sec_row_col  &lt;chr&gt; \"A_1_1_B\", \"A_1_1_G\", \"A_1_1_I\", \"A_1_1_J\", \"A_1_2_A\"…\n$ pNum             &lt;int&gt; 664, 330, 892, 429, 525, 601, 103, 9, 323, 437, 492, …\n$ total_area       &lt;dbl&gt; 0.4755171, 0.4158565, 0.4465351, 0.3698563, 0.3376273…\n\n\n\n# Save as per-image counts\n# annotation_wide %&gt;% write.csv(\"BT_per_image_counts.csv\")\n\n\n#calculating densities (stromal and epithelial)\ndensities &lt;- annotation_wide %&gt;% mutate_at(c(3,5,7,11,13,15), list(density=~.x/area_mm2_s), .names = \"density_{.col}\")\ndensities &lt;- densities %&gt;% mutate_at(c(2,4,6,10,12,14), list(density=~.x/area_mm2_t), .names=\"density_{.col}\")\n\n#total densities...\ndensities &lt;- densities %&gt;% mutate(\"sum_CD3pCD8n\" = CD3pCD8n_t+CD3pCD8n_s,\n                                           \"sum_CD3pCD8p\" = CD3pCD8p_t+CD3pCD8p_s,\n                                           \"sum_CD20p\" = CD20p_t+CD20p_s,\n                                           \"sum_CD79ApCD20n\" = CD79ApCD20n_t+CD79ApCD20n_s,\n                                           \"sum_CD3pCD8nFoxP3p\" = CD3pCD8nFoxP3p_t+CD3pCD8nFoxP3p_s,\n                                           \"sum_CD3pCD8pFoxP3p\" = CD3pCD8pFoxP3p_t+CD3pCD8pFoxP3p_s)\n\ndensities &lt;- densities %&gt;% mutate(across(starts_with(\"sum\"), list(density = ~.x/total_area), .names = \"density_{col}\"))                                       \nglimpse(densities)\n\nRows: 1,994\nColumns: 46\n$ Image                      &lt;chr&gt; \"HGS_A_4_B+T_Scan1_Core[1,1,B]_[4615,44342]…\n$ CD3pCD8n_t                 &lt;dbl&gt; 3, 6, 23, 15, 0, 0, 2, 18, 1, 0, 3, 35, 2, …\n$ CD3pCD8n_s                 &lt;dbl&gt; 44, 3, 49, 62, 1, 0, 1, 6, 147, 5, 7, 32, 8…\n$ CD3pCD8nFoxP3p_t           &lt;dbl&gt; 0, 14, 0, 19, 0, 0, 1, 8, 2, 0, 5, 39, 2, 2…\n$ CD3pCD8nFoxP3p_s           &lt;dbl&gt; 3, 2, 15, 84, 0, 0, 0, 1, 88, 5, 6, 16, 2, …\n$ CD3pCD8p_t                 &lt;dbl&gt; 19, 91, 18, 157, 0, 4, 0, 14, 8, 1, 18, 98,…\n$ CD3pCD8p_s                 &lt;dbl&gt; 47, 10, 39, 67, 0, 3, 0, 5, 154, 12, 35, 51…\n$ area_mm2_t                 &lt;dbl&gt; 0.3646832, 0.3635600, 0.2753643, 0.2088972,…\n$ area_mm2_s                 &lt;dbl&gt; 0.1108339, 0.0522965, 0.1711708, 0.1609591,…\n$ CD20p_t                    &lt;dbl&gt; 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0…\n$ CD20p_s                    &lt;dbl&gt; 0, 1, 9, 0, 1, 0, 0, 0, 32, 1, 0, 5, 0, 0, …\n$ CD3pCD8pFoxP3p_t           &lt;dbl&gt; 0, 2, 0, 6, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0…\n$ CD3pCD8pFoxP3p_s           &lt;dbl&gt; 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0…\n$ CD79ApCD20n_t              &lt;dbl&gt; 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 4, 8, 3, 0…\n$ CD79ApCD20n_s              &lt;dbl&gt; 0, 1, 3, 221, 0, 2, 0, 0, 34, 2, 1, 54, 3, …\n$ TMA                        &lt;chr&gt; \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\"…\n$ Sector                     &lt;chr&gt; \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\"…\n$ Row                        &lt;chr&gt; \"1\", \"1\", \"1\", \"1\", \"2\", \"2\", \"2\", \"2\", \"3\"…\n$ Column                     &lt;chr&gt; \"B\", \"G\", \"I\", \"J\", \"A\", \"B\", \"C\", \"J\", \"A\"…\n$ tma_sec_row_col            &lt;chr&gt; \"A_1_1_B\", \"A_1_1_G\", \"A_1_1_I\", \"A_1_1_J\",…\n$ pNum                       &lt;int&gt; 664, 330, 892, 429, 525, 601, 103, 9, 323, …\n$ total_area                 &lt;dbl&gt; 0.4755171, 0.4158565, 0.4465351, 0.3698563,…\n$ CD3pCD8n_s_density         &lt;dbl&gt; 396.990451, 57.365216, 286.263779, 385.1910…\n$ CD3pCD8nFoxP3p_s_density   &lt;dbl&gt; 27.067531, 38.243477, 87.631769, 521.871705…\n$ CD3pCD8p_s_density         &lt;dbl&gt; 424.057982, 191.217385, 227.842599, 416.254…\n$ CD20p_s_density            &lt;dbl&gt; 0.000000, 19.121739, 52.579061, 0.000000, 5…\n$ CD3pCD8pFoxP3p_s_density   &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 6.212758, 0.0…\n$ CD79ApCD20n_s_density      &lt;dbl&gt; 0.000000, 19.121739, 17.526354, 1373.019606…\n$ CD3pCD8n_t_density         &lt;dbl&gt; 8.226318, 16.503466, 83.525715, 71.805654, …\n$ CD3pCD8nFoxP3p_t_density   &lt;dbl&gt; 0.000000, 38.508087, 0.000000, 90.953828, 0…\n$ CD3pCD8p_t_density         &lt;dbl&gt; 52.100014, 250.302564, 65.367951, 751.56584…\n$ CD20p_t_density            &lt;dbl&gt; 0.000000, 5.501155, 3.631553, 0.000000, 0.0…\n$ CD3pCD8pFoxP3p_t_density   &lt;dbl&gt; 0.000000, 5.501155, 0.000000, 28.722261, 0.…\n$ CD79ApCD20n_t_density      &lt;dbl&gt; 0.000000, 2.750578, 3.631553, 4.787044, 0.0…\n$ sum_CD3pCD8n               &lt;dbl&gt; 47, 9, 72, 77, 1, 0, 3, 24, 148, 5, 10, 67,…\n$ sum_CD3pCD8p               &lt;dbl&gt; 66, 101, 57, 224, 0, 7, 0, 19, 162, 13, 53,…\n$ sum_CD20p                  &lt;dbl&gt; 0, 3, 10, 0, 1, 0, 0, 0, 32, 1, 0, 7, 0, 0,…\n$ sum_CD79ApCD20n            &lt;dbl&gt; 0, 2, 4, 222, 0, 2, 0, 0, 34, 2, 1, 58, 11,…\n$ sum_CD3pCD8nFoxP3p         &lt;dbl&gt; 3, 16, 15, 103, 0, 0, 1, 9, 90, 5, 11, 55, …\n$ sum_CD3pCD8pFoxP3p         &lt;dbl&gt; 0, 2, 0, 7, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0, 0…\n$ density_sum_CD3pCD8n       &lt;dbl&gt; 98.839768, 21.642081, 161.241524, 208.18896…\n$ density_sum_CD3pCD8p       &lt;dbl&gt; 138.796270, 242.872241, 127.649540, 605.640…\n$ density_sum_CD20p          &lt;dbl&gt; 0.000000, 7.214027, 22.394656, 0.000000, 2.…\n$ density_sum_CD79ApCD20n    &lt;dbl&gt; 0.000000, 4.809351, 8.957862, 600.233118, 0…\n$ density_sum_CD3pCD8nFoxP3p &lt;dbl&gt; 6.308921, 38.474810, 33.591984, 278.486537,…\n$ density_sum_CD3pCD8pFoxP3p &lt;dbl&gt; 0.000000, 4.809351, 0.000000, 18.926269, 0.…"
  },
  {
    "objectID": "COEUR/Scripts/Data Processing/ADAPT_processing.html",
    "href": "COEUR/Scripts/Data Processing/ADAPT_processing.html",
    "title": "ADAPT_Processing",
    "section": "",
    "text": "## Library imports\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   1.0.1 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.3.0      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n## Takes qupath annotation level data and combines it with pNums - 25Apr22\ncoreIDs &lt;- read.csv(\"../../../coreIDs.csv\")\npatientIDs &lt;- read.csv(\"../../../patientID_core.csv\")\n\nannotation_data &lt;- vroom::vroom(\"/Volumes/Sangiustino/COEUR_mcIF/QuPath final data/final_ADAPTIVE_annotation_level.csv\")\n\nRows: 3885 Columns: 22\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): Image, Name, Class, Parent, ROI\ndbl (17): Centroid X µm, Centroid Y µm, Num Detections, Num CD3pCD8n: PD1n, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nannotation_data[is.na(annotation_data)] &lt;- 0 #cores that don't have a specific type of cell come up as NA\n\n# colnames(annotation_data)\n# [1] \"Image\"              \"Class\"              \"Num.CD3pCD8n\"       \"Num.CD3pCD8nFoxP3p\" \"Num.CD3pCD8p\"       \"Area.Âµm.2\"        \n# [7] \"Num.CD20p\"          \"Num.CD3pCD8pFoxP3p\" \"Num.CD79ApCD20n\"   \n\nnames(annotation_data)[18] &lt;- \"area_um2\"\nglimpse(annotation_data)\n\nRows: 3,885\nColumns: 22\n$ Image                  &lt;chr&gt; \"HSC_D_4_Scan1_Core[4,5,B]_[14256,58900]_compon…\n$ Name                   &lt;chr&gt; \"Stroma\", \"Tumor\", \"Tumor\", \"Stroma\", \"Stroma\",…\n$ Class                  &lt;chr&gt; \"Stroma\", \"Tumor\", \"Tumor\", \"Stroma\", \"Stroma\",…\n$ Parent                 &lt;chr&gt; \"Image\", \"Image\", \"Image\", \"Image\", \"Image\", \"I…\n$ ROI                    &lt;chr&gt; \"Geometry\", \"Geometry\", \"Geometry\", \"Geometry\",…\n$ `Centroid X µm`        &lt;dbl&gt; 445.34, 491.92, 376.03, 509.60, 353.57, 422.23,…\n$ `Centroid Y µm`        &lt;dbl&gt; 313.10, 391.64, 327.67, 395.29, 393.68, 385.87,…\n$ `Num Detections`       &lt;dbl&gt; 907, 1084, 2066, 1346, 1068, 778, 3287, 695, 28…\n$ `Num CD3pCD8n: PD1n`   &lt;dbl&gt; 7, 2, 70, 174, 0, 0, 25, 49, 216, 29, 1, 0, 1, …\n$ `Num CD3pCD8n: PD1p`   &lt;dbl&gt; 7, 1, 20, 52, 0, 0, 1, 12, 123, 9, 2, 0, 0, 0, …\n$ `Num CD3pCD8p: PD1n`   &lt;dbl&gt; 3, 3, 5, 7, 0, 1, 23, 27, 88, 36, 1, 0, 0, 0, 0…\n$ `Num CD3pCD8p: PD1p`   &lt;dbl&gt; 6, 1, 6, 4, 0, 0, 2, 8, 83, 34, 4, 0, 0, 1, 2, …\n$ `Num CD68nPDL1n: PD1n` &lt;dbl&gt; 549, 1019, 1425, 863, 1052, 752, 3045, 495, 181…\n$ `Num CD68nPDL1n: PD1p` &lt;dbl&gt; 3, 0, 3, 5, 4, 13, 12, 4, 163, 22, 14, 2, 0, 0,…\n$ `Num CD68pPDL1n: PD1n` &lt;dbl&gt; 216, 41, 205, 112, 12, 12, 149, 96, 121, 16, 3,…\n$ `Num CD68pPDL1p: PD1n` &lt;dbl&gt; 116, 16, 264, 128, 0, 0, 29, 3, 172, 21, 3, 1, …\n$ `Num CD68pPDL1p: PD1p` &lt;dbl&gt; 0, 1, 0, 0, 0, 0, 0, 0, 9, 0, 0, 1, 0, 0, 0, 0,…\n$ area_um2               &lt;dbl&gt; 138269.5, 136284.1, 203075.5, 200643.2, 98213.6…\n$ `Perimeter µm`         &lt;dbl&gt; 16188.1, 8957.1, 15591.5, 13614.7, 4084.8, 7433…\n$ `Num CD68pPDL1n: PD1p` &lt;dbl&gt; 0, 0, 0, 1, 0, 0, 1, 1, 11, 1, 0, 0, 0, 0, 0, 0…\n$ `Num PDL1pCKp: PD1n`   &lt;dbl&gt; 0, 0, 68, 0, 0, 0, 0, 0, 1, 0, 0, 0, 9, 0, 0, 0…\n$ `Num PDL1pCKp: PD1p`   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n\n\n\n# Some images have annotations that are split into 2-3, merge those together\nannotation_data &lt;- annotation_data %&gt;% group_by(Image, Name, Class) %&gt;% select(contains(c(\"Num\", \"area\"))) %&gt;%\n  summarise(across(where(is.numeric), ~sum(.x)))\n\nAdding missing grouping variables: `Image`, `Name`, `Class`\n`summarise()` has grouped output by 'Image', 'Name'. You can override using the\n`.groups` argument.\n\n# Delete annotations that don't have a class\nannotation_data &lt;- annotation_data %&gt;% filter(Class %in% c(\"Stroma\", \"Tumor\")) #delete pathannotationobject class?\n\n\n# widen data\nannotation_wide &lt;- pivot_wider(annotation_data %&gt;% ungroup() %&gt;% select(-Name, -`Num Detections`), names_from = c(\"Class\"), values_from = -c(1,2))\n\nglimpse(annotation_wide)\n\nRows: 1,938\nColumns: 27\n$ Image                         &lt;chr&gt; \"HGS_A_4_Scan1_Core[1,1,B]_[3937,39813]_…\n$ `Num CD3pCD8n: PD1n_Stroma`   &lt;dbl&gt; 43, 174, 0, 13, 4, 19, 49, 216, 0, 2, 15…\n$ `Num CD3pCD8n: PD1n_Tumor`    &lt;dbl&gt; 27, 70, 0, 19, 9, 5, 25, 29, 1, 1, 12, 5…\n$ `Num CD3pCD8n: PD1p_Stroma`   &lt;dbl&gt; 5, 52, 0, 3, 0, 4, 12, 123, 0, 0, 2, 80,…\n$ `Num CD3pCD8n: PD1p_Tumor`    &lt;dbl&gt; 4, 20, 0, 2, 4, 1, 1, 9, 2, 0, 6, 65, 2,…\n$ `Num CD3pCD8p: PD1n_Stroma`   &lt;dbl&gt; 33, 7, 0, 8, 4, 6, 27, 88, 0, 0, 2, 33, …\n$ `Num CD3pCD8p: PD1n_Tumor`    &lt;dbl&gt; 16, 5, 1, 18, 44, 7, 23, 36, 1, 0, 0, 20…\n$ `Num CD3pCD8p: PD1p_Stroma`   &lt;dbl&gt; 7, 4, 0, 4, 0, 1, 8, 83, 0, 1, 1, 193, 0…\n$ `Num CD3pCD8p: PD1p_Tumor`    &lt;dbl&gt; 1, 6, 0, 12, 40, 5, 2, 34, 4, 0, 2, 225,…\n$ `Num CD68nPDL1n: PD1n_Stroma` &lt;dbl&gt; 415, 863, 1052, 215, 134, 907, 495, 1819…\n$ `Num CD68nPDL1n: PD1n_Tumor`  &lt;dbl&gt; 3017, 1425, 752, 2934, 2726, 2634, 3045,…\n$ `Num CD68nPDL1n: PD1p_Stroma` &lt;dbl&gt; 2, 5, 4, 1, 0, 2, 4, 163, 2, 0, 1, 26, 0…\n$ `Num CD68nPDL1n: PD1p_Tumor`  &lt;dbl&gt; 2, 3, 13, 4, 5, 6, 12, 22, 14, 0, 7, 59,…\n$ `Num CD68pPDL1n: PD1n_Stroma` &lt;dbl&gt; 30, 112, 12, 71, 0, 45, 96, 121, 0, 6, 6…\n$ `Num CD68pPDL1n: PD1n_Tumor`  &lt;dbl&gt; 92, 205, 12, 195, 61, 30, 149, 16, 3, 12…\n$ `Num CD68pPDL1p: PD1n_Stroma` &lt;dbl&gt; 3, 128, 0, 46, 9, 11, 3, 172, 1, 29, 34,…\n$ `Num CD68pPDL1p: PD1n_Tumor`  &lt;dbl&gt; 28, 264, 0, 15, 82, 3, 29, 21, 3, 43, 49…\n$ `Num CD68pPDL1p: PD1p_Stroma` &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 9, 1, 0, 0, 47, 0, …\n$ `Num CD68pPDL1p: PD1p_Tumor`  &lt;dbl&gt; 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, …\n$ `Num CD68pPDL1n: PD1p_Stroma` &lt;dbl&gt; 0, 1, 0, 0, 0, 0, 1, 11, 0, 0, 0, 3, 0, …\n$ `Num CD68pPDL1n: PD1p_Tumor`  &lt;dbl&gt; 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0…\n$ `Num PDL1pCKp: PD1n_Stroma`   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0…\n$ `Num PDL1pCKp: PD1n_Tumor`    &lt;dbl&gt; 0, 68, 0, 0, 2, 0, 0, 0, 0, 9, 0, 1, 0, …\n$ `Num PDL1pCKp: PD1p_Stroma`   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ `Num PDL1pCKp: PD1p_Tumor`    &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ area_um2_Stroma               &lt;dbl&gt; 39830.4, 200643.2, 98213.6, 36468.7, 181…\n$ area_um2_Tumor                &lt;dbl&gt; 330866.9, 203075.5, 76536.5, 318736.2, 3…\n\n\n\n# Adjust core names\nannotation_wide$Image &lt;- gsub(\"HGS_B_4_Scan1_Core[4,6,K]_[19971,55132]_component_data.tif\", \"HGS_B_4_Scan1_Core[4,6,J]_[19971,55132]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_B_4_Scan1_Core[4,8,K]_[19971,55919]_component_data.tif\", \"HGS_B_4_Scan1_Core[4,8,J]_[19971,55919]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_B_4_Scan1_Core[4,1,K]_[19589,51027]_component_data.tif\", \"HGS_B_4_Scan1_Core[4,1,J]_[19589,51027]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_B_4_Scan1_Core[4,2,K]_[19565,51982]_component_data.tif\", \"HGS_B_4_Scan1_Core[4,2,J]_[19565,51982]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_B_4_Scan1_Core[4,3,K]_[19613,52769]_component_data.tif\", \"HGS_B_4_Scan1_Core[4,3,J]_[19613,52769]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_B_4_Scan1_Core[4,4,K]_[19565,53628]_component_data.tif\", \"HGS_B_4_Scan1_Core[4,4,J]_[19565,53628]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_B_4_Scan1_Core[4,5,K]_[20015,54384]_component_data.tif\", \"HGS_B_4_Scan1_Core[4,5,J]_[20015,54384]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_G_4_Scan1_Core[1,7,G]_[9292,50278]_component_data.tif\", \"HGS_G_4_Scan1_Core[1,6,G]_[9292,50278]_component_data\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_G_4_Scan1_Core[1,7,I]_[10796,50325]_component_data.tif\", \"HGS_G_4_Scan1_Core[1,6,I]_[10796,50325]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_G_4_Scan1_Core[1,7,J]_[11774,50445]_component_data.tif\", \"HGS_G_4_Scan1_Core[1,6,J]_[11774,50445]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_G_4_Scan1_Core[1,9,I]_[10748,51137]_component_data.tif\", \"HGS_G_4_Scan1_Core[1,8,I]_[10748,51137]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_G_4_Scan1_Core[1,9,J]_[11631,51256]_component_data.tif\", \"HGS_G_4_Scan1_Core[1,8,J]_[11631,51256]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_G_4_Scan1_Core[1,10,A]_[4114,51733]_component_data.tif\", \"HGS_G_4_Scan1_Core[1,9,A]_[4114,51733]_component_data\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_G_4_Scan1_Core[1,10,B]_[5092,51733]_component_data.tif\", \"HGS_G_4_Scan1_Core[1,9,B]_[5092,51733]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_G_4_Scan1_Core[1,10,C]_[5951,51709]_component_data.tif\", \"HGS_G_4_Scan1_Core[1,9,C]_[5951,51709]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_G_4_Scan1_Core[1,10,D]_[6786,51685]_component_data.tif\", \"HGS_G_4_Scan1_Core[1,9,D]_[6786,51685]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_G_4_Scan1_Core[1,10,E]_[7646,51685]_component_data.tif\", \"HGS_G_4_Scan1_Core[1,9,E]_[7646,51685]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_G_4_Scan1_Core[1,10,F]_[8505,51662]_component_data.tif\", \"HGS_G_4_Scan1_Core[1,9,F]_[8505,51662]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_G_4_Scan1_Core[1,10,I]_[10686,51961]_component_data.tif\", \"HGS_G_4_Scan1_Core[1,9,I]_[10686,51961]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_G_4_Scan1_Core[1,10,J]_[11560,52071]_component_data.tif\", \"HGS_G_4_Scan1_Core[1,9,J]_[11560,52071]_component_data.tif\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_H_4_Scan1_Core[6,1,A]\", \"HGS_H_4_Scan1_Core[6,0,A]\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_H_4_Scan1_Core[6,1,B]\", \"HGS_H_4_Scan1_Core[6,1,A]\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_H_4_Scan1_Core[6,1,C]\", \"HGS_H_4_Scan1_Core[6,1,B]\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_H_4_Scan1_Core[6,1,D]\", \"HGS_H_4_Scan1_Core[6,1,C]\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_H_4_Scan1_Core[6,1,E]\", \"HGS_H_4_Scan1_Core[6,1,D]\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_H_4_Scan1_Core[6,2,D]\", \"HGS_H_4_Scan1_Core[6,2,C]\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_H_4_Scan1_Core[6,2,E]\", \"HGS_H_4_Scan1_Core[6,2,D]\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_H_4_Scan1_Core[6,3,D]\", \"HGS_H_4_Scan1_Core[6,3,C]\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_H_4_Scan1_Core[6,3,E]\", \"HGS_H_4_Scan1_Core[6,3,D]\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_H_4_Scan1_Core[6,4,C]\", \"HGS_H_4_Scan1_Core[6,4,B]\", annotation_wide$Image, fixed=TRUE)\nannotation_wide$Image &lt;- gsub(\"HGS_H_4_Scan1_Core[6,4,E]\", \"HGS_H_4_Scan1_Core[6,4,D]\", annotation_wide$Image, fixed=TRUE)\n\n\n# Add core identified information column to match with patient #\nmid &lt;- function(text, start, n) {\n  substr(text, start, start + n - 1)\n}\n\nannotation_wide$TMA &lt;- mid(annotation_wide$Image, 5, 1) ##parsing sector/row/column info from image column\nannotation_wide$Sector &lt;- mid(annotation_wide$Image, 20, 1)\nannotation_wide$Row &lt;- mid(annotation_wide$Image, 22, 2)\nannotation_wide$Column &lt;- mid(annotation_wide$Image, 24, 2)\n\nannotation_wide$Row &lt;- gsub(\",\", \"\", annotation_wide$Row) ##delete extra symbols (some row values are 2 char long)\nannotation_wide$Column &lt;- gsub(\",\", \"\", annotation_wide$Column)\nannotation_wide$Column &lt;- gsub(\"]\", \"\", annotation_wide$Column)\n\nindex_core1 &lt;- match(coreIDs$TMA_ID, patientIDs$TMA_ID_1)\nindex_core2 &lt;- match(coreIDs$TMA_ID, patientIDs$TMA_ID_2)\n\npNum_1 &lt;- patientIDs$PATIENT_ID[index_core1]\npNum_2 &lt;- patientIDs$PATIENT_ID[index_core2]\npNum_1[is.na(pNum_1)] &lt;- pNum_2[is.na(pNum_1)] #merging the two lists\n\ncoreIDs$pNum &lt;- pNum_1\n\ncoreIDs$Column &lt;- LETTERS[coreIDs$Column]\n\ncoreIDs$tma_seC_row_col &lt;- paste(coreIDs$TMA, coreIDs$Sector, coreIDs$Row, coreIDs$Column, sep=\"_\")\nannotation_wide$tma_seC_row_col &lt;- paste(annotation_wide$TMA, annotation_wide$Sector, annotation_wide$Row, annotation_wide$Column, sep=\"_\")\n\nmissingCOREids &lt;- annotation_wide[!(annotation_wide$tma_seC_row_col %in% coreIDs$tma_seC_row_col),] #all are accounted for\n\nannotation_wide$pNum &lt;- coreIDs$pNum[match(annotation_wide$tma_seC_row_col, coreIDs$tma_seC_row_col)]\nannotation_wide &lt;- annotation_wide %&gt;% na.omit()\n\n#changing some colnames\ncolnames(annotation_wide) &lt;- gsub(\"Num.CD\", \"CD\", colnames(annotation_wide)) %&gt;%\n  gsub(\"..\", \"\", ., fixed = TRUE) %&gt;%\n  gsub(\": \", \"\", .) %&gt;%\n  gsub(\"Num.PDL1p\", \"PDL1p\", .) %&gt;%\n  gsub(\"Tumor\", \"E\", .) %&gt;%\n  gsub(\"Stroma\", \"S\", .)\n\n#converting area(um2) to area(mm2)\nannotation_wide$area_um2_E &lt;- annotation_wide$area_um2_E/1e6\nannotation_wide$area_um2_S &lt;- annotation_wide$area_um2_S/1e6\nannotation_wide$total_area &lt;- annotation_wide$area_um2_E+annotation_wide$area_um2_S\ncolnames(annotation_wide) &lt;- gsub(\"um2\", \"mm2\", colnames(annotation_wide))\n\n#Merge 'PD1p' and 'PD1n' macrophages\nannotation_wide &lt;- annotation_wide %&gt;% select(-CD68nPDL1nPD1n_S, -CD68nPDL1nPD1n_E) %&gt;% \n  mutate(CD68pPDL1n_S = CD68pPDL1nPD1n_S + CD68pPDL1nPD1p_S,\n         CD68pPDL1n_E = CD68pPDL1nPD1n_E + CD68pPDL1nPD1p_E,\n         CD68pPDL1p_S = CD68pPDL1pPD1n_S + CD68pPDL1pPD1p_S,\n         CD68pPDL1p_E = CD68pPDL1pPD1n_E + CD68pPDL1pPD1p_E,\n         PDL1pCKp_S = PDL1pCKpPD1n_S + PDL1pCKpPD1p_S,\n         PDL1pCKp_E = PDL1pCKpPD1n_E + PDL1pCKpPD1p_E)  %&gt;%\n  select(-CD68pPDL1nPD1n_S, -CD68pPDL1nPD1p_S, -CD68pPDL1nPD1n_E, -CD68pPDL1nPD1p_E, -CD68pPDL1pPD1n_S, -CD68pPDL1pPD1p_S,\n         -CD68pPDL1pPD1n_E, -CD68pPDL1pPD1p_E, -PDL1pCKpPD1n_S, -PDL1pCKpPD1p_S, -PDL1pCKpPD1n_E, -PDL1pCKpPD1p_E)\n\n\n# Write per-image summary\n#annotation_wide %&gt;% write.csv(\"ADAPT_per_image_counts.csv\", row.names=FALSE)"
  },
  {
    "objectID": "IROC_TMA/Results/Neighborhood-analysis/RMD/lmas-and-stroma-iroc-tma.html",
    "href": "IROC_TMA/Results/Neighborhood-analysis/RMD/lmas-and-stroma-iroc-tma.html",
    "title": "LMAs and Stroma (IROC)",
    "section": "",
    "text": "lma &lt;- vroom::vroom(\"/Users/karanvir/Documents/LMAProject/IROC_TMA/Results/Neighborhood-analysis/7LMAs_15r15n_IROC_TMA.csv\")\n\ncolnames(lma) &lt;- gsub(\"CD20p\" , \"CD79ApCD20p\", colnames(lma)) %&gt;%\n  gsub(\"^PD1p$\", \"CD3nCD8nPD1p\", .)\n\ngetClusterPlots(lma, breaks = c(\"CD3pCD8nPD1p\", \"CD3pCD8nPD1n\", \"CD3pCD8pPD1p\", \"CD3pCD8pPD1n\", \"CD68pPDL1n\", \n\"CD68pPDL1p\", \"CD79ApCD20p\", \"CD79ApCD20n\",  \"CD3nCD8nPD1p\"), cell_type_colors = c(\"#E64B35FF\",\n                                                                                   \"#f5b8af\",\n                                                                                   \"#358295\",\n                                                                                   \"#a6ddea\",\n                                                                                   \"green\",\n                                                                                   \"yellow\",\n                                                                                   \"#744960\",\n                                                                                   \"#d4a2bc\",\n                                                                                   \"black\"))"
  },
  {
    "objectID": "IROC_TMA/Results/Neighborhood-analysis/RMD/lmas-and-stroma-iroc-tma.html#figure-1---lma-barplots",
    "href": "IROC_TMA/Results/Neighborhood-analysis/RMD/lmas-and-stroma-iroc-tma.html#figure-1---lma-barplots",
    "title": "LMAs and Stroma (IROC)",
    "section": "",
    "text": "lma &lt;- vroom::vroom(\"/Users/karanvir/Documents/LMAProject/IROC_TMA/Results/Neighborhood-analysis/7LMAs_15r15n_IROC_TMA.csv\")\n\ncolnames(lma) &lt;- gsub(\"CD20p\" , \"CD79ApCD20p\", colnames(lma)) %&gt;%\n  gsub(\"^PD1p$\", \"CD3nCD8nPD1p\", .)\n\ngetClusterPlots(lma, breaks = c(\"CD3pCD8nPD1p\", \"CD3pCD8nPD1n\", \"CD3pCD8pPD1p\", \"CD3pCD8pPD1n\", \"CD68pPDL1n\", \n\"CD68pPDL1p\", \"CD79ApCD20p\", \"CD79ApCD20n\",  \"CD3nCD8nPD1p\"), cell_type_colors = c(\"#E64B35FF\",\n                                                                                   \"#f5b8af\",\n                                                                                   \"#358295\",\n                                                                                   \"#a6ddea\",\n                                                                                   \"green\",\n                                                                                   \"yellow\",\n                                                                                   \"#744960\",\n                                                                                   \"#d4a2bc\",\n                                                                                   \"black\"))"
  },
  {
    "objectID": "IROC_TMA/Results/Neighborhood-analysis/RMD/lmas-and-stroma-iroc-tma.html#figure-2-number-of-cases-by-stroma-percentage",
    "href": "IROC_TMA/Results/Neighborhood-analysis/RMD/lmas-and-stroma-iroc-tma.html#figure-2-number-of-cases-by-stroma-percentage",
    "title": "LMAs and Stroma (IROC)",
    "section": "Figure 2: Number of cases by stroma percentage",
    "text": "Figure 2: Number of cases by stroma percentage\nThere are 60 cores with neighborhoods detected, out of 137 images stained. The median stroma proportion is 38% - cases with more stroma than these are catagorizes as ‘high’, lower as ‘low’.\nThe total number of LMAs detected is quite similar between high and low stroma cases, however the distribution by LMA subtype is different. There are more LMA5/6/7 in low stroma cores (these are the LMAs with more PDL1p macs). LMA1/2/3 are found in high stroma cores more often (these are the LMAs with more PDL1- macs).\n\ndensities &lt;- vroom::vroom(\"/Users/karanvir/Documents/LMAProject/IROC_TMA/Results/IROC-tma-per-patient-densities.csv\")\ncounts &lt;- vroom::vroom(\"/Users/karanvir/Documents/LMAProject/IROC_TMA/Results/IROC-tma-per-image-counts.csv\")\n\nlma &lt;- left_join(lma, counts %&gt;% select(Image, ID))\nlma &lt;- left_join(lma, densities %&gt;% select(ID, stroma_proportion))\nlma &lt;-  mutate(lma, stroma_cat = case_when(stroma_proportion &lt;= median(stroma_proportion) ~ \"low\",\n                                           TRUE ~ \"high\"))\n\nstroma_tally &lt;- lma %&gt;% group_by(ID, LMA, stroma_cat) %&gt;% summarise(numberOfLMAs = n()) %&gt;%\n  group_by(stroma_cat, LMA) %&gt;% summarise(sumLMAs = sum(numberOfLMAs))\n\n\nstroma_tally %&gt;% \n  ggplot(aes(x=stroma_cat, y=sumLMAs)) +\n  geom_col(position=position_dodge())+\n  xlab(\"Stroma category\")+\n  ylab(\"Nunber of LMAs\")+\n  ggtitle(\"Fig. 2: Total number of neighborhoods detected by stroma %\")\n\n\n\nstroma_tally %&gt;% \n  ggplot(aes(x=stroma_cat, y=sumLMAs)) +\n  geom_col(position=position_dodge())+\n  facet_wrap(~LMA, nrow=1)+\n  xlab(\"Stroma category\")+\n  ylab(\"Nunber of LMAs\")+\n  ggtitle(\"Fig. 3: Total number of neighborhoods detected by stroma % and LMA type\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "LMAProject",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "COEUR/Results/Clustering/COEUR_Clustering.html",
    "href": "COEUR/Results/Clustering/COEUR_Clustering.html",
    "title": "Clustering COEUR data into distinct tumor microenvironments",
    "section": "",
    "text": "Code\n# Combined densities (ADAPT AND BT panels), cells/mm2\nCOMBINED_PANEL_DENSITIES &lt;- read.csv(\"../../Final_Data/COMBINED_PANELS_DENSITIES_08NOV22.csv\")\n\n\nThere data that I am loading contains cell densities that have been aggregated between the two mcIF panels. For each panel, cell counts and areas were summed between the two cores per patient and divided by the summed stromal/epithelial/stromal+epithelial area to calculate densities (cells/mm^2).\nTable 1: Cell types scored\n\n\n\nMarker\nCell Type\nPanel\n\n\n\n\nCD3+CD8+PD1+\nCD8+PD1+ T cell\nAdaptive\n\n\nCD3+CD8+PD1-\nCD8+PD1- T cell\nAdaptive\n\n\nCD3+CD8-PD1+\nCD8-PD1+ T cell\nAdaptive\n\n\nCD3+CD8+PD1-\nCD8+PD1- T cell\nAdaptive\n\n\nCD3+CD8-FoxP3+\nT regulatory\nB and T cell panel\n\n\nCD68+PDL1+\nPDL1+ macrophage\nAdaptive\n\n\nCD68+PDL1-\nPDL1+ macrophage\nAdaptive\n\n\nCD79a+CD20+\nB cell\nB and T cell panel\n\n\nCD79a+CD20-\nPlasma cell\nB and T cell panel\n\n\n\n\n\nCode\n# This is the list of patients that are (1) pre-chemo (2) have outcomes data\nfinal_pNum &lt;- read.csv(\"../../Final_Data/final_pNum.csv\") %&gt;% .[,1]\nlength(final_pNum)\n\n\n[1] 981\n\n\nFron the outcome data, there are 981/1064 patients that are pre-treatment and have overall survival data (which I will need for survival analysis) - only these patients will be considered in the clustering."
  },
  {
    "objectID": "COEUR/Results/Clustering/COEUR_Clustering.html#load-data-and-clean-it-up-a-bit",
    "href": "COEUR/Results/Clustering/COEUR_Clustering.html#load-data-and-clean-it-up-a-bit",
    "title": "Clustering COEUR data into distinct tumor microenvironments",
    "section": "",
    "text": "Code\n# Combined densities (ADAPT AND BT panels), cells/mm2\nCOMBINED_PANEL_DENSITIES &lt;- read.csv(\"../../Final_Data/COMBINED_PANELS_DENSITIES_08NOV22.csv\")\n\n\nThere data that I am loading contains cell densities that have been aggregated between the two mcIF panels. For each panel, cell counts and areas were summed between the two cores per patient and divided by the summed stromal/epithelial/stromal+epithelial area to calculate densities (cells/mm^2).\nTable 1: Cell types scored\n\n\n\nMarker\nCell Type\nPanel\n\n\n\n\nCD3+CD8+PD1+\nCD8+PD1+ T cell\nAdaptive\n\n\nCD3+CD8+PD1-\nCD8+PD1- T cell\nAdaptive\n\n\nCD3+CD8-PD1+\nCD8-PD1+ T cell\nAdaptive\n\n\nCD3+CD8+PD1-\nCD8+PD1- T cell\nAdaptive\n\n\nCD3+CD8-FoxP3+\nT regulatory\nB and T cell panel\n\n\nCD68+PDL1+\nPDL1+ macrophage\nAdaptive\n\n\nCD68+PDL1-\nPDL1+ macrophage\nAdaptive\n\n\nCD79a+CD20+\nB cell\nB and T cell panel\n\n\nCD79a+CD20-\nPlasma cell\nB and T cell panel\n\n\n\n\n\nCode\n# This is the list of patients that are (1) pre-chemo (2) have outcomes data\nfinal_pNum &lt;- read.csv(\"../../Final_Data/final_pNum.csv\") %&gt;% .[,1]\nlength(final_pNum)\n\n\n[1] 981\n\n\nFron the outcome data, there are 981/1064 patients that are pre-treatment and have overall survival data (which I will need for survival analysis) - only these patients will be considered in the clustering."
  },
  {
    "objectID": "COEUR/Results/Clustering/COEUR_Clustering.html#format-data-for-clustering",
    "href": "COEUR/Results/Clustering/COEUR_Clustering.html#format-data-for-clustering",
    "title": "Clustering COEUR data into distinct tumor microenvironments",
    "section": "Format data for clustering",
    "text": "Format data for clustering\nHere I remove the area (stroma, epithelial and proportions of) columns from the data. I also remove PDL1pCK+ cells, and CD3+CD8+- scores from the B and T panel, as I am quantifying PD1+/PD1- subsets of this population in the adaptive panel.\nI also log10 transform the data, with a small offset of 0.1 to deal with zeroes.\n\n\nCode\n# Remove tissue proportion data, and cell types that are redundant (ie. the CD3CD8- calls from the BT panel)\nDENSITIES_BY_TISSUE &lt;- COMBINED_PANEL_DENSITIES %&gt;% select(-contains(\"area\")) %&gt;%\n  select(-PDL1pCKp_S, -BT_str_prop, -BT_epi_prop, -ADAPT_epi_prop, -ADAPT_str_prop, -avg_epi_prop) %&gt;%\n  select(-CD3pCD8p_S,-CD3pCD8p_E)\n\nDENSITIES_LOGGED &lt;- DENSITIES_BY_TISSUE %&gt;%\n  mutate(across(-contains(c(\"prop\", \"area\", \"pNum\")), ~log10(.+0.1))) #log all densities"
  },
  {
    "objectID": "COEUR/Results/Clustering/COEUR_Clustering.html#robust-and-sparse-k-means-clustering",
    "href": "COEUR/Results/Clustering/COEUR_Clustering.html#robust-and-sparse-k-means-clustering",
    "title": "Clustering COEUR data into distinct tumor microenvironments",
    "section": "Robust and sparse k-means clustering",
    "text": "Robust and sparse k-means clustering\nI run the robust and sparse k-means algorithm on the 981 patient’s densities, using a k=5.\nThe table shows the number of cases in each cluster.\n\n\nCode\n# Making heatmap with only final patients (n=981) #\n\n# Making a logged densities matrix. I am also removing CD3-PD1p cells here because I am confident in their calls.\n\ndensities_final_m &lt;- DENSITIES_LOGGED %&gt;% \n  filter(pNum %in% final_pNum) %&gt;%\n  select(-contains(c(\"prop\", \"area\")), -PDL1pCKp_E, -CD68nPDL1nPD1p_S, -CD68nPDL1nPD1p_E) %&gt;% \n  column_to_rownames(\"pNum\") %&gt;% \n  as.matrix()\n\n#optimal_n_final &lt;- Clest(densities_final_m, 8, alpha=0.05, beta=0.05) #Trimming 10% of cases, significance level between clusters at least 0.05\n\n#Optimal cluster N is 4 without or with PDL1+CK+\nset.seed(1000)\n#clusters &lt;- RSKC(densities_final_m, 5, alpha=0.05)$labels\n\n# Freeze output\nclusters &lt;- c(2, 3, 3, 2, 1, 3, 3, 3, 4, 2, 5, 3, 3, 1, 4, 2, 5, 4, 4, 1, \n              2, 4, 3, 1, 3, 4, 2, 5, 4, 1, 3, 4, 2, 1, 4, 4, 5, 4, 2, 1, 4, \n              5, 3, 2, 4, 2, 5, 3, 2, 4, 1, 4, 5, 2, 4, 1, 4, 5, 4, 1, 3, 2, \n              4, 3, 5, 1, 4, 3, 2, 3, 1, 5, 5, 5, 4, 5, 3, 5, 4, 4, 1, 1, 3, \n              1, 5, 1, 1, 3, 2, 3, 1, 5, 5, 3, 5, 2, 2, 4, 4, 1, 4, 1, 4, 4, \n              4, 5, 3, 4, 4, 3, 2, 1, 5, 2, 4, 2, 5, 3, 2, 2, 1, 2, 2, 4, 4, \n              2, 4, 1, 5, 5, 3, 5, 4, 2, 5, 1, 3, 5, 2, 2, 3, 5, 1, 4, 1, 4, \n              4, 4, 5, 5, 5, 5, 2, 4, 2, 4, 1, 5, 4, 3, 4, 3, 1, 4, 2, 5, 1, \n              3, 1, 5, 2, 3, 3, 3, 1, 3, 5, 5, 4, 4, 1, 4, 3, 2, 1, 5, 5, 4, \n              3, 3, 2, 4, 4, 4, 2, 5, 4, 4, 3, 3, 3, 4, 1, 2, 4, 2, 1, 2, 4, \n              3, 2, 2, 1, 5, 2, 4, 5, 5, 4, 1, 3, 3, 4, 5, 3, 4, 1, 5, 1, 2, \n              3, 2, 5, 4, 4, 5, 2, 3, 5, 3, 2, 3, 2, 1, 1, 5, 2, 5, 4, 2, 4, \n              3, 1, 5, 1, 4, 4, 4, 4, 3, 4, 4, 4, 2, 3, 2, 5, 3, 4, 4, 5, 2, \n              1, 3, 4, 5, 4, 4, 5, 4, 5, 4, 1, 5, 1, 2, 4, 3, 3, 1, 4, 5, 4, \n              2, 3, 2, 3, 2, 2, 5, 4, 1, 3, 3, 4, 1, 2, 3, 4, 3, 2, 4, 4, 5, \n              1, 1, 3, 1, 4, 2, 2, 3, 5, 2, 3, 4, 5, 2, 4, 3, 4, 4, 4, 5, 4, \n              1, 4, 2, 5, 3, 3, 4, 3, 3, 5, 4, 4, 2, 5, 3, 5, 1, 3, 4, 4, 1, \n              5, 3, 1, 1, 2, 2, 3, 2, 5, 4, 1, 4, 2, 1, 4, 2, 2, 4, 1, 4, 3, \n              1, 3, 1, 4, 4, 5, 4, 3, 1, 1, 3, 1, 2, 3, 4, 1, 5, 1, 2, 5, 4, \n              1, 4, 2, 4, 2, 2, 1, 4, 3, 1, 1, 3, 4, 2, 1, 2, 5, 3, 1, 1, 4, \n              1, 1, 1, 4, 3, 3, 2, 1, 2, 1, 4, 3, 4, 5, 1, 4, 5, 4, 1, 3, 5, \n              4, 5, 2, 4, 1, 5, 4, 1, 1, 5, 2, 3, 5, 1, 5, 4, 5, 4, 2, 3, 3, \n              1, 3, 3, 1, 2, 3, 5, 5, 3, 4, 2, 4, 3, 5, 4, 2, 5, 4, 5, 5, 1, \n              3, 1, 3, 3, 3, 2, 4, 5, 4, 3, 4, 2, 5, 4, 5, 4, 5, 5, 1, 1, 3, \n              1, 2, 5, 3, 4, 4, 4, 1, 4, 3, 3, 4, 2, 2, 3, 4, 2, 3, 5, 5, 5, \n              1, 2, 4, 5, 4, 5, 3, 1, 2, 2, 1, 2, 5, 2, 4, 4, 1, 3, 2, 1, 4, \n              5, 4, 4, 5, 1, 5, 4, 3, 3, 3, 5, 4, 4, 5, 2, 5, 4, 3, 3, 3, 2, \n              5, 5, 4, 3, 5, 1, 3, 4, 4, 1, 5, 2, 1, 2, 5, 1, 1, 4, 5, 5, 4, \n              2, 3, 1, 3, 1, 4, 1, 2, 4, 5, 1, 4, 1, 1, 1, 5, 2, 4, 5, 5, 4, \n              5, 5, 3, 5, 5, 5, 1, 3, 2, 5, 1, 1, 3, 5, 2, 4, 2, 3, 4, 2, 5, \n              5, 4, 5, 3, 1, 4, 5, 5, 3, 5, 5, 1, 1, 5, 1, 4, 3, 2, 3, 5, 1, \n              1, 2, 5, 5, 3, 5, 5, 3, 3, 3, 4, 3, 2, 3, 3, 5, 4, 2, 2, 1, 5, \n              3, 5, 2, 3, 3, 1, 5, 4, 2, 2, 2, 5, 3, 4, 3, 2, 2, 1, 2, 1, 5, \n              5, 1, 2, 2, 3, 2, 5, 4, 4, 1, 4, 2, 2, 2, 1, 4, 4, 5, 2, 5, 4, \n              3, 4, 5, 5, 1, 1, 4, 2, 5, 2, 5, 4, 4, 5, 4, 4, 1, 4, 2, 4, 1, \n              4, 4, 2, 3, 2, 4, 4, 5, 2, 2, 3, 2, 3, 2, 4, 4, 3, 4, 2, 5, 4, \n              3, 5, 5, 4, 1, 4, 5, 2, 1, 4, 3, 4, 1, 3, 1, 3, 5, 1, 3, 3, 1, \n              1, 5, 4, 5, 3, 5, 1, 5, 2, 4, 3, 4, 2, 2, 1, 3, 5, 4, 4, 4, 4, \n              2, 3, 4, 4, 5, 4, 5, 3, 1, 3, 2, 5, 3, 1, 4, 2, 2, 3, 4, 4, 5, \n              5, 5, 4, 5, 2, 1, 2, 4, 2, 4, 5, 5, 2, 5, 2, 2, 5, 2, 4, 4, 5, \n              5, 4, 3, 5, 3, 2, 5, 5, 1, 3, 5, 4, 5, 4, 4, 1, 3, 5, 4, 3, 4, \n              3, 5, 3, 2, 5, 2, 2, 3, 3, 4, 5, 2, 4, 4, 3, 4, 5, 4, 4, 5, 1, \n              4, 4, 1, 1, 3, 4, 3, 3, 4, 3, 2, 4, 3, 5, 4, 2, 4, 5, 3, 5, 5, \n              5, 1, 2, 2, 5, 1, 4, 3, 5, 2, 1, 4, 5, 2, 4, 5, 2, 5, 1, 3, 3, \n              1, 5, 5, 2, 5, 2, 3, 3, 4, 1, 3, 3, 3, 5, 4, 3, 5, 1, 1, 4, 1, \n              5, 1, 5, 1, 5, 4, 4, 5, 5, 1, 5, 2, 4, 1, 3, 5, 1, 5, 3, 3, 5, \n              2, 5, 4, 5, 4, 4, 1, 3, 3, 5, 1, 1, 1, 2, 1, 3)\n\n# Change order of labels. 2 -&gt; 1, 5 -&gt; 2, 3 -&gt;3, 4 -&gt; 4, 1 -&gt; 5\nnew_clusters &lt;- recode(clusters, '3' = 1L, '1' = 2L, '2' = 3L, '4' = 4L, '5' = 5L)\n\n#new densities DF with clusters\nDENSITIES_LOGGED_FINAL &lt;- DENSITIES_LOGGED %&gt;% filter(pNum %in% final_pNum) %&gt;% \n  mutate(cluster_ID = new_clusters)\n\ntable(DENSITIES_LOGGED_FINAL$cluster_ID)\n\n\n\n  1   2   3   4   5 \n187 167 169 245 213"
  },
  {
    "objectID": "COEUR/Results/Clustering/COEUR_Clustering.html#heatmap-plotting",
    "href": "COEUR/Results/Clustering/COEUR_Clustering.html#heatmap-plotting",
    "title": "Clustering COEUR data into distinct tumor microenvironments",
    "section": "Heatmap plotting",
    "text": "Heatmap plotting\n\n\nCode\n# subset data to only include densities\nH1 &lt;- DENSITIES_LOGGED_FINAL %&gt;%\n  mutate(clusterID = new_clusters) %&gt;%\n  arrange(clusterID) %&gt;%\n  select(-contains(c(\"prop\", \"category\", \"cluster\", \"ratio\")), -CD68nPDL1nPD1p_S, -CD68nPDL1nPD1p_E, -PDL1pCKp_E) %&gt;% column_to_rownames(\"pNum\")\n\n#renaming the columns so that they're prettier\ncolnames(H1) &lt;- gsub(\"p\", \"+\", colnames(H1))\ncolnames(H1) &lt;- gsub(\"n\", \"-\", colnames(H1))\nH1 &lt;- dplyr::rename(H1, \"CD79a+CD20+_E\" = \"CD20+_E\",\n                       \"CD79a+CD20+_S\" = \"CD20+_S\",\n                   \"CD79a+CD20-_E\" = \"CD79A+CD20-_E\",\n                        \"CD79a+CD20-_S\" = \"CD79A+CD20-_S\",\n                   \"CD3+CD8-FoxP3-_E\" = \"CD3+CD8-_E\",\n                   \"CD3+CD8-FoxP3-_S\" = \"CD3+CD8-_S\")\n\n#the order of the rows (grouped by cell type)\nH1_row_order &lt;- c(\n  \"CD3+CD8-FoxP3-_S\", \n  \"CD3+CD8-FoxP3-_E\",\n  \"CD3+CD8-PD1-_S\",\n  \"CD3+CD8-PD1-_E\",\n  \"CD3+CD8-PD1+_S\",\n  \"CD3+CD8-PD1+_E\",\n  \"CD3+CD8+PD1-_S\",\n  \"CD3+CD8+PD1-_E\",\n  \"CD3+CD8+PD1+_S\",\n  \"CD3+CD8+PD1+_E\",\n  \"CD3+CD8+FoxP3+_S\",\n  \"CD3+CD8+FoxP3+_E\",\n  \"CD3+CD8-FoxP3+_S\",\n  \"CD3+CD8-FoxP3+_E\",\n  \"CD68+PDL1-_S\",\n  \"CD68+PDL1-_E\",\n  \"CD68+PDL1+_S\",\n  \"CD68+PDL1+_E\",\n  \"CD79a+CD20+_S\",\n  \"CD79a+CD20+_E\",\n  \"CD79a+CD20-_S\",\n  \"CD79a+CD20-_E\")\n\n#split the rows by cell type\nrow_split &lt;- c(rep(\"CD8-\", 6),\n               rep(\"CD8+\", 6),\n               rep(\"T reg\", 2),\n               rep(\"Macrophage\", 4), \n               rep(\"B cell\", 4))[match(colnames(H1), H1_row_order)]\n\n#legend color breaks\ncol_fun &lt;- colorRamp2(c(0,2,4), c(\"#2c7bb6\", \"#ffffbf\", \"#d7191c\"))\n\n#Cluster labels\nclust_labels &lt;- paste(\"C\",1:5, \" (\", table(new_clusters), \")\", sep=\"\")\n\n#Row names\nrow_names &lt;- gsub(\"+\", \"&lt;sup&gt;+&lt;/sup&gt;\", colnames(H1), fixed = TRUE) %&gt;%\n  gsub(\"-\", \"&lt;sup&gt;-&lt;/sup&gt;\", ., fixed = TRUE) %&gt;%\n  gsub(\"_E\", \"\", .) %&gt;%\n  gsub(\"_S\", \"\", .)\n\nlgd = Legend(labels = c(\"Stromal\", \"Intraepithelial\"),\n             title = \"Cell Location\", legend_gp = gpar(fill = c(\"#3C5488FF\",\"#DC0000FF\")),\n             nrow = 1)\n\nheatmap1 &lt;- Heatmap(\n  t(H1),\n  # name = \"hey\",\n  row_split = factor(\n    row_split,\n    levels = c(\"CD8+\", \"CD8-\", \"T reg\", \"Macrophage\", \"B cell\")\n  ),\n  row_labels = gt_render(row_names),\n  row_names_gp = gpar(col = c(rep(c(\"#3C5488FF\",\"#DC0000FF\"), times = 12), \"#DC0000FF\")[match(colnames(H1), H1_row_order)]),\n  column_split = sort(new_clusters),\n  row_order = H1_row_order,\n  row_gap = unit(2.5, \"mm\"),\n  cluster_row_slices = FALSE,\n  show_column_names = FALSE,\n  cluster_columns = FALSE,\n  top_annotation = HeatmapAnnotation(cluster = anno_block(\n    gp = gpar(fill = pal_npg()(5)),\n    labels = clust_labels,\n    labels_gp = gpar(col =\"white\", fontsize = 10)\n  )),\n  heatmap_legend_param = list(\n    title = gt_render(\"log&lt;sub&gt;10&lt;/sub&gt;(cells/mm&lt;sup&gt;2&lt;/sup&gt; + 0.1)\"),\n    legend_width = unit(6, \"cm\"),\n    direction = \"horizontal\",\n    at = c(-1, 0, 1, 2, 3, 4)\n  ),\n  col = col_fun,\n  column_title = NULL,\n  border = TRUE\n)\n\n\n\n\nCode\ndraw(heatmap1, heatmap_legend_side = \"bottom\")\ndraw(lgd, x=unit(0.8, \"npc\"), y=unit(0.05, \"npc\"))"
  },
  {
    "objectID": "COEUR/Results/Clustering/COEUR_Clustering.html#boxplots",
    "href": "COEUR/Results/Clustering/COEUR_Clustering.html#boxplots",
    "title": "Clustering COEUR data into distinct tumor microenvironments",
    "section": "",
    "text": "Code\nDENSITIES_LONGER &lt;- DENSITIES_LOGGED_FINAL %&gt;% select(-avg_str_prop) %&gt;%\n  mutate(cluster_ID = factor(cluster_ID)) %&gt;%\n  pivot_longer(cols=-c(\"cluster_ID\", \"pNum\"), names_sep = \"_\", names_to=c(\"density\", \"location\"))\nDENSITIES_LONGER$density &lt;- gsub(\"p\", \"+\", DENSITIES_LONGER$density, fixed=TRUE) %&gt;%\n  gsub(\"n\", \"-\", ., fixed = TRUE) %&gt;%\n  gsub(\"CD20+\", \"CD79a+CD20+\", ., fixed = TRUE) %&gt;%\n  replace(., .==\"CD3+CD8-\", \"CD3+CD8-FoxP3-\") %&gt;%\n  replace(., .==\"CD79A+CD20-\", \"CD79a+CD20-\") %&gt;%\n  replace(., .==\"CD68-PDL1-PD1+\", \"CD3-CD8-PD1+\") %&gt;%\n  replace(., .==\"PDL1pCKp\", \"PDL1+CK+\")\n\n# add jitter..\nDENSITIES_LONGER &lt;- DENSITIES_LONGER %&gt;% group_by(density, location, cluster_ID) %&gt;%\n  mutate(outlier = value &gt; median(value) + \n           IQR(value)*1.5 | value &lt; median(value) -\n           IQR(value)*1.5) \n\n\nT_cells = c(\"CD3+CD8-FoxP3-\", \"CD3+CD8-PD1-\", \"CD3+CD8-PD1+\", \"CD3+CD8+PD1-\", \"CD3+CD8+PD1+\", \"CD3+CD8-FoxP3+\", \"CD3+CD8+FoxP3+\")\n\nT_cells_subset = c(\"CD3+CD8-PD1-\", \"CD3+CD8-PD1+\", \"CD3+CD8+PD1-\", \"CD3+CD8+PD1+\", \"CD3+CD8+FoxP3+\")\nB_cells = c(\"CD79a+CD20+\", \"CD79a+CD20-\")\nMac = c(\"CD68+PDL1+\", \"CD68+PDL1-\")\nother = \"PDL1+CK+\"\n\nstats &lt;- DENSITIES_LONGER %&gt;% group_by(density, location) %&gt;% t_test(value ~ cluster_ID) %&gt;% add_xy_position()\n\nmedian_densities &lt;- DENSITIES_LONGER %&gt;% group_by(density, location, cluster_ID) %&gt;% summarise(median_density = median(value)) %&gt;% pivot_wider(names_from = cluster_ID, values_from = median_density, names_prefix=\"cluster_\")\n\nmake_label &lt;- function(value) {\nx &lt;- as.character(value)\nbquote(x)\n}\n\nplot_labeller &lt;- function(variable, value) { do.call(expression, lapply(levels(value), make_label)) }\n\nT_cell_boxplots &lt;- DENSITIES_LONGER %&gt;%\n  filter(density %in% T_cells) %&gt;%\n  mutate(density = ordered(density, levels=T_cells)) %&gt;%\nggplot(aes(x=cluster_ID, y=value))+ geom_boxplot(outlier.shape = NA, position=position_dodge(2))+\n  facet_grid(location~density, switch = \"y\", labeller = label_parsed)+\n  geom_jitter(data = function(x) dplyr::filter(x, outlier), height=0, width = 0.1, alpha=0.5)+ labs(y=NULL, x=NULL)+ theme_cowplot(12)\n\nT_cell_subset_boxplots &lt;- DENSITIES_LONGER %&gt;%\n  filter(density %in% T_cells_subset) %&gt;%\n  mutate(density = ordered(density, levels=T_cells)) %&gt;%\n  ggplot(aes(x=cluster_ID, y=value))+\n  geom_boxplot(outlier.shape = NA, position=position_dodge(2))+ facet_grid(location~density, switch = \"y\", labeller = labeller(density = function(x) gsub(\"CD3+\",\"\",x, fixed = TRUE)))+\n  geom_jitter(data = function(x) dplyr::filter(x, outlier), height=0, width = 0.1, alpha=0.5)+\n  labs(y=NULL, x=NULL)+ theme_cowplot(12)\n\nB_cell_boxplots &lt;- DENSITIES_LONGER %&gt;%\n  filter(density %in% B_cells) %&gt;%\n  ggplot(aes(x=cluster_ID, y=value))+ geom_boxplot(outlier.shape = NA, position=position_dodge(2))+\n  facet_grid(location~density, switch = \"y\")+\n  geom_jitter(data = function(x) dplyr::filter(x, outlier), height=0, width = 0.1, alpha=0.5)+ labs(y=NULL, x=NULL)+\n  theme_cowplot(12)\n\nMac_boxplots &lt;- DENSITIES_LONGER %&gt;%\n  filter(density %in% Mac) %&gt;%\n  ggplot(aes(x=cluster_ID, y=value))+\n  geom_boxplot(outlier.shape = NA, position=position_dodge(2))+\n  facet_grid(location~density, switch = \"y\")+\n  geom_jitter(data = function(x) dplyr::filter(x, outlier), height=0, width = 0.1, alpha=0.5)+\n  labs(y=NULL, x=NULL)+\n  theme_cowplot(12)\n\nother_boxplot &lt;- DENSITIES_LONGER %&gt;%\n  filter(density %in% other) %&gt;%\n  ggplot(aes(x=cluster_ID, y=value))+\n  geom_boxplot(outlier.shape = NA, position=position_dodge(2))+\n  facet_grid(location~density, switch = \"y\")+\n  geom_jitter(data = function(x) dplyr::filter(x, outlier), height=0, width = 0.1, alpha=0.5)+\n  labs(y=NULL, x=NULL)+\n  theme_cowplot(12)\n\nyleft = richtext_grob(\"log&lt;sub&gt;*10*&lt;/sub&gt;(cells/mm&lt;sup&gt;*2*&lt;/sup&gt;+0.1)\", rot=90)\nxbottom = richtext_grob(\"Cluster\")\n\n# gridExtra::grid.arrange(grobs = list(T_cell_boxplots, B_cell_boxplots, Mac_boxplots, other_boxplot), layout_matrix = rbind(c(1,1,1,1,1), c(1,1,1,1,1), c(1,1,1,1,1), c(2,2,3,3,4), c(2,2,3,3,4)), left=yleft, bottom=xbottom)\n\ngridExtra::grid.arrange(grobs = list(T_cell_subset_boxplots, B_cell_boxplots, Mac_boxplots), layout_matrix = rbind(c(1,1,1,1), c(1,1,1,1), c(2,2,3,3), c(2,2,3,3)), left=yleft, bottom=xbottom)"
  },
  {
    "objectID": "COEUR/Results/Clustering/COEUR_Clustering.html#boxplots-by-tme",
    "href": "COEUR/Results/Clustering/COEUR_Clustering.html#boxplots-by-tme",
    "title": "Clustering COEUR data into distinct tumor microenvironments",
    "section": "Boxplots by TME",
    "text": "Boxplots by TME\n\n\nCode\nDENSITIES_LONGER &lt;- DENSITIES_LOGGED_FINAL %&gt;% select(-avg_str_prop) %&gt;%\n  mutate(cluster_ID = factor(cluster_ID)) %&gt;%\n  pivot_longer(cols=-c(\"cluster_ID\", \"pNum\"), names_sep = \"_\", names_to=c(\"density\", \"location\"))\nDENSITIES_LONGER$density &lt;- gsub(\"p\", \"+\", DENSITIES_LONGER$density, fixed=TRUE) %&gt;%\n  gsub(\"n\", \"-\", ., fixed = TRUE) %&gt;%\n  gsub(\"CD20+\", \"CD79a+CD20+\", ., fixed = TRUE) %&gt;%\n  replace(., .==\"CD3+CD8-\", \"CD3+CD8-FoxP3-\") %&gt;%\n  replace(., .==\"CD79A+CD20-\", \"CD79a+CD20-\") %&gt;%\n  replace(., .==\"CD68-PDL1-PD1+\", \"CD3-CD8-PD1+\") %&gt;%\n  replace(., .==\"PDL1pCKp\", \"PDL1+CK+\")\n\n# add jitter..\nDENSITIES_LONGER &lt;- DENSITIES_LONGER %&gt;% group_by(density, location, cluster_ID) %&gt;%\n  mutate(outlier = value &gt; median(value) + \n           IQR(value)*1.5 | value &lt; median(value) -\n           IQR(value)*1.5) \n\n\nT_cells = c(\"CD3+CD8-FoxP3-\", \"CD3+CD8-PD1-\", \"CD3+CD8-PD1+\", \"CD3+CD8+PD1-\", \"CD3+CD8+PD1+\", \"CD3+CD8-FoxP3+\", \"CD3+CD8+FoxP3+\")\n\nT_cells_subset = c(\"CD3+CD8-PD1-\", \"CD3+CD8-PD1+\", \"CD3+CD8+PD1-\", \"CD3+CD8+PD1+\", \"CD3+CD8+FoxP3+\")\nB_cells = c(\"CD79a+CD20+\", \"CD79a+CD20-\")\nMac = c(\"CD68+PDL1+\", \"CD68+PDL1-\")\nother = \"PDL1+CK+\"\n\nstats &lt;- DENSITIES_LONGER %&gt;% group_by(density, location) %&gt;% t_test(value ~ cluster_ID) %&gt;% add_xy_position()\n\nmedian_densities &lt;- DENSITIES_LONGER %&gt;% group_by(density, location, cluster_ID) %&gt;% summarise(median_density = median(value)) %&gt;% pivot_wider(names_from = cluster_ID, values_from = median_density, names_prefix=\"cluster_\")\n\nmake_label &lt;- function(value) {\nx &lt;- as.character(value)\nbquote(x)\n}\n\nplot_labeller &lt;- function(variable, value) { do.call(expression, lapply(levels(value), make_label)) }\n\nT_cell_boxplots &lt;- DENSITIES_LONGER %&gt;%\n  filter(density %in% T_cells) %&gt;%\n  mutate(density = ordered(density, levels=T_cells)) %&gt;%\nggplot(aes(x=cluster_ID, y=value))+ geom_boxplot(outlier.shape = NA, position=position_dodge(2))+\n  facet_grid(location~density, switch = \"y\", labeller = label_parsed)+\n  geom_jitter(data = function(x) dplyr::filter(x, outlier), height=0, width = 0.1, alpha=0.5)+ labs(y=NULL, x=NULL)+ theme_cowplot(12)\n\nT_cell_subset_boxplots &lt;- DENSITIES_LONGER %&gt;%\n  filter(density %in% T_cells_subset) %&gt;%\n  mutate(density = ordered(density, levels=T_cells)) %&gt;%\n  ggplot(aes(x=cluster_ID, y=value))+\n  geom_boxplot(outlier.shape = NA, position=position_dodge(2))+ facet_grid(location~density, switch = \"y\", labeller = labeller(density = function(x) gsub(\"CD3+\",\"\",x, fixed = TRUE)))+\n  geom_jitter(data = function(x) dplyr::filter(x, outlier), height=0, width = 0.1, alpha=0.5)+\n  labs(y=NULL, x=NULL)+ theme_cowplot(12)\n\nB_cell_boxplots &lt;- DENSITIES_LONGER %&gt;%\n  filter(density %in% B_cells) %&gt;%\n  ggplot(aes(x=cluster_ID, y=value))+ geom_boxplot(outlier.shape = NA, position=position_dodge(2))+\n  facet_grid(location~density, switch = \"y\")+\n  geom_jitter(data = function(x) dplyr::filter(x, outlier), height=0, width = 0.1, alpha=0.5)+ labs(y=NULL, x=NULL)+\n  theme_cowplot(12)\n\nMac_boxplots &lt;- DENSITIES_LONGER %&gt;%\n  filter(density %in% Mac) %&gt;%\n  ggplot(aes(x=cluster_ID, y=value))+\n  geom_boxplot(outlier.shape = NA, position=position_dodge(2))+\n  facet_grid(location~density, switch = \"y\")+\n  geom_jitter(data = function(x) dplyr::filter(x, outlier), height=0, width = 0.1, alpha=0.5)+\n  labs(y=NULL, x=NULL)+\n  theme_cowplot(12)\n\nother_boxplot &lt;- DENSITIES_LONGER %&gt;%\n  filter(density %in% other) %&gt;%\n  ggplot(aes(x=cluster_ID, y=value))+\n  geom_boxplot(outlier.shape = NA, position=position_dodge(2))+\n  facet_grid(location~density, switch = \"y\")+\n  geom_jitter(data = function(x) dplyr::filter(x, outlier), height=0, width = 0.1, alpha=0.5)+\n  labs(y=NULL, x=NULL)+\n  theme_cowplot(12)\n\nyleft = richtext_grob(\"log&lt;sub&gt;*10*&lt;/sub&gt;(cells/mm&lt;sup&gt;*2*&lt;/sup&gt;+0.1)\", rot=90)\nxbottom = richtext_grob(\"TME\")\n\n# gridExtra::grid.arrange(grobs = list(T_cell_boxplots, B_cell_boxplots, Mac_boxplots, other_boxplot), layout_matrix = rbind(c(1,1,1,1,1), c(1,1,1,1,1), c(1,1,1,1,1), c(2,2,3,3,4), c(2,2,3,3,4)), left=yleft, bottom=xbottom)\n\ngridExtra::grid.arrange(grobs = list(T_cell_subset_boxplots, B_cell_boxplots, Mac_boxplots), layout_matrix = rbind(c(1,1,1,1), c(1,1,1,1), c(2,2,3,3), c(2,2,3,3)), left=yleft, bottom=xbottom)"
  },
  {
    "objectID": "COEUR/Results/Clustering/COEUR_Clustering.html#epithelial-area-by-tme",
    "href": "COEUR/Results/Clustering/COEUR_Clustering.html#epithelial-area-by-tme",
    "title": "Clustering COEUR data into distinct tumor microenvironments",
    "section": "Epithelial area by TME",
    "text": "Epithelial area by TME\n\n\nCode\nEPI_PROP &lt;- DENSITIES_LOGGED_FINAL %&gt;% left_join(., COMBINED_PANEL_DENSITIES %&gt;% select(pNum, avg_epi_prop))\n\n\nJoining, by = \"pNum\"\n\n\nCode\nanova_epi_prop &lt;- EPI_PROP %&gt;%\n  mutate(cluster_ID = factor(cluster_ID)) %&gt;%\n  tukey_hsd(avg_epi_prop ~ cluster_ID) %&gt;%\n  add_xy_position()\n\nEPI_PROP %&gt;% ggplot(aes(x=factor(cluster_ID), y=avg_epi_prop))+\n  geom_boxplot()+\n  ggtitle(\"Average proportion of epithelial tissue per case, by TME\")+\n  xlab(\"TME\")+\n  ylab(\"Epithelial area/Total core area (%)\")+\n  stat_pvalue_manual(data=anova_epi_prop, hide.ns=T, \n                     remove.bracket = F,\n                     step.increase = 0.05)+\n  labs(caption=\"P-values from Tukey HSD test, adjusted for multiple testing\")+\n  theme_minimal()"
  },
  {
    "objectID": "COEUR/Results/Clustering/COEUR_Clustering.html#association-between-immune-cell-density-and-epithelial-area",
    "href": "COEUR/Results/Clustering/COEUR_Clustering.html#association-between-immune-cell-density-and-epithelial-area",
    "title": "Clustering COEUR data into distinct tumor microenvironments",
    "section": "Association between immune cell density and epithelial area",
    "text": "Association between immune cell density and epithelial area\nAll densities are negatively associated with epithelial area (more epithelium than stroma = lower densities), except for PDL1p macrophages. P-values in the table not adjusted for multiple testing.\n\n\nCode\ncell_types &lt;- c(\"CD3pCD8nPD1n_S\", \"CD3pCD8nPD1n_E\", \"CD3pCD8nPD1p_S\", \n\"CD3pCD8nPD1p_E\", \"CD3pCD8pPD1n_S\", \"CD3pCD8pPD1n_E\", \"CD3pCD8pPD1p_S\", \n\"CD3pCD8pPD1p_E\", \"CD68nPDL1nPD1p_S\", \"CD68nPDL1nPD1p_E\", \"CD68pPDL1n_S\", \n\"CD68pPDL1n_E\", \"CD68pPDL1p_S\", \"CD68pPDL1p_E\", \"PDL1pCKp_E\", \n\"CD3pCD8n_E\", \"CD3pCD8n_S\", \"CD3pCD8nFoxP3p_E\", \"CD3pCD8nFoxP3p_S\", \n\"CD20p_E\", \"CD20p_S\", \"CD3pCD8pFoxP3p_E\", \"CD3pCD8pFoxP3p_S\", \n\"CD79ApCD20n_E\", \"CD79ApCD20n_S\")\n\nDENSITIES_LOGGED_FINAL &lt;- DENSITIES_LOGGED_FINAL %&gt;% left_join(., COMBINED_PANEL_DENSITIES %&gt;% select(pNum, avg_epi_prop))\n\n\nJoining, by = \"pNum\"\n\n\nCode\ndensity_stroma_lm &lt;- list()\nfor(celltype in cell_types){\n  reg_formula = formula(paste0(celltype, \"~ avg_epi_prop\"))\n  \n  model &lt;- lm(reg_formula, data=DENSITIES_LOGGED_FINAL)\n  model_summary &lt;- tidy(model)\n  \n  density_stroma_lm[[celltype]] &lt;- data.frame(CellType = celltype,\n                                              estimate = model_summary$estimate[2],\n                                              p = model_summary$estimate[2])\n}\n\ndensity_stroma_lm &lt;- bind_rows(density_stroma_lm)\ndensity_stroma_lm$p &lt;- format.pval(density_stroma_lm$p, digits=3)\n\ndensity_stroma_lm$CellType &lt;- gsub(\"p\", \"+\", density_stroma_lm$CellType, fixed=TRUE) %&gt;%\n  gsub(\"n\", \"-\", ., fixed = TRUE) %&gt;%\n  gsub(\"CD20+\", \"CD79a+CD20+\", ., fixed = TRUE) %&gt;%\n  replace(., .==\"CD3+CD8-\", \"CD3+CD8-FoxP3-\") %&gt;%\n  replace(., .==\"CD79A+CD20-\", \"CD79a+CD20-\") %&gt;%\n  replace(., .==\"CD68-PDL1-PD1+\", \"CD3-CD8-PD1+\") %&gt;%\n  replace(., .==\"PDL1pCKp\", \"PDL1+CK+\")\n\ndensity_stroma_lm %&gt;% kableExtra::kbl(col.names = c(\"Cell Type\", \"Effect Size\", \"P value\")) %&gt;%\n  kable_paper()\n\n\n\n\n\nCell Type\nEffect Size\nP value\n\n\n\n\nCD3+CD8-PD1-_S\n-0.0036033\n&lt; 2e-16\n\n\nCD3+CD8-PD1-_E\n-0.0001883\n&lt; 2e-16\n\n\nCD3+CD8-PD1+_S\n-0.0096121\n&lt; 2e-16\n\n\nCD3+CD8-PD1+_E\n-0.0000632\n&lt; 2e-16\n\n\nCD3+CD8+PD1-_S\n-0.0100398\n&lt; 2e-16\n\n\nCD3+CD8+PD1-_E\n-0.0042755\n&lt; 2e-16\n\n\nCD3+CD8+PD1+_S\n-0.0110333\n&lt; 2e-16\n\n\nCD3+CD8+PD1+_E\n-0.0026931\n&lt; 2e-16\n\n\nCD68-PDL1-PD1+_S\n-0.0134121\n&lt; 2e-16\n\n\nCD68-PDL1-PD1+_E\n-0.0039378\n&lt; 2e-16\n\n\nCD68+PDL1-_S\n-0.0024194\n&lt; 2e-16\n\n\nCD68+PDL1-_E\n-0.0014233\n&lt; 2e-16\n\n\nCD68+PDL1+_S\n0.0094262\n0.00943\n\n\nCD68+PDL1+_E\n0.0095077\n0.00951\n\n\nPDL1+CK+_E\n0.0041710\n0.00417\n\n\nCD3+CD8-_E\n-0.0008040\n&lt; 2e-16\n\n\nCD3+CD8-_S\n-0.0109507\n&lt; 2e-16\n\n\nCD3+CD8-FoxP3+_E\n-0.0008349\n&lt; 2e-16\n\n\nCD3+CD8-FoxP3+_S\n-0.0104265\n&lt; 2e-16\n\n\nCD79a+CD20+_E\n-0.0032007\n&lt; 2e-16\n\n\nCD79a+CD20+_S\n-0.0141103\n&lt; 2e-16\n\n\nCD3+CD8+FoxP3+_E\n-0.0009249\n&lt; 2e-16\n\n\nCD3+CD8+FoxP3+_S\n-0.0076985\n&lt; 2e-16\n\n\nCD79A+CD20-_E\n-0.0039731\n&lt; 2e-16\n\n\nCD79A+CD20-_S\n-0.0160384\n&lt; 2e-16"
  },
  {
    "objectID": "COEUR/Results/Spatial Analysis/RMD/BT-adapt-clustering-followup-analysis.html#importing-.rdata-files-from-the-spiat-workflow",
    "href": "COEUR/Results/Spatial Analysis/RMD/BT-adapt-clustering-followup-analysis.html#importing-.rdata-files-from-the-spiat-workflow",
    "title": "COEUR BT and ADAPT LMAs Analysis",
    "section": "Importing .RData files from the SPIAT workflow",
    "text": "Importing .RData files from the SPIAT workflow\n\n\nCode\nload(\"/Users/karanvir/Documents/LMAProject/COEUR/Results/Spatial Analysis/RData/BT_15r_15n_SPIAT.RData\")\nbtNeighborhoods &lt;- neighborhoods\nload(\"/Users/karanvir/Documents/LMAProject/COEUR/Results/Spatial Analysis/RData/ADAPT_15r_15n_SPIAT.RData\")\nadaptNeighborhoods &lt;- neighborhoods\nrm(neighborhoods)\n\nstroma_information&lt;- read.csv(\"../../../Final_Data/COMBINED_PANELS_DENSITIES_08NOV22.csv\") %&gt;%\n  select(pNum, avg_epi_prop)"
  },
  {
    "objectID": "COEUR/Results/Spatial Analysis/RMD/BT-adapt-clustering-followup-analysis.html#collapse-list-into-one-dataframe",
    "href": "COEUR/Results/Spatial Analysis/RMD/BT-adapt-clustering-followup-analysis.html#collapse-list-into-one-dataframe",
    "title": "COEUR BT and ADAPT LMAs Analysis",
    "section": "Collapse list into one dataframe",
    "text": "Collapse list into one dataframe\n\n\nCode\nbtNeighborhoods &lt;- bind_rows(btNeighborhoods, .id=\"Image\")\nadaptNeighborhoods &lt;- bind_rows(adaptNeighborhoods, .id=\"Image\")"
  },
  {
    "objectID": "COEUR/Results/Spatial Analysis/RMD/BT-adapt-clustering-followup-analysis.html#filter-for-patients-used-in-tme-clustering-and-survival-analysis",
    "href": "COEUR/Results/Spatial Analysis/RMD/BT-adapt-clustering-followup-analysis.html#filter-for-patients-used-in-tme-clustering-and-survival-analysis",
    "title": "COEUR BT and ADAPT LMAs Analysis",
    "section": "Filter for patients used in TME clustering and survival analysis",
    "text": "Filter for patients used in TME clustering and survival analysis\n\n\nCode\nharmonizedCounts &lt;- vroom::vroom(\"/Users/karanvir/Documents/LMAProject/COEUR/Final_Data/COMBINED_PANELS_DENSITIES_08NOV22.csv\")\ncountsbt &lt;- vroom::vroom(\"/Users/karanvir/Documents/LMAProject/COEUR/Final_Data/BT_per_image_counts.csv\")\ncountsadapt &lt;- vroom::vroom(\"/Users/karanvir/Documents/LMAProject/COEUR/Final_Data/ADAPT_per_image_counts.csv\")\ntme &lt;- vroom::vroom(\"../../Clustering/TME_pNum_key.txt\")\n\n# Adding patient identified to the cell level data\nbtNeighborhoods &lt;- left_join(btNeighborhoods, countsbt %&gt;% select(Image, pNum))\nadaptNeighborhoods &lt;- left_join(adaptNeighborhoods, countsadapt %&gt;% select(Image, pNum))\n\n# Filter for pNums with TME data\nbtNeighborhoods &lt;- filter(btNeighborhoods, pNum %in% tme$pNum)\nadaptNeighborhoods &lt;- filter(adaptNeighborhoods, pNum %in% tme$pNum)"
  },
  {
    "objectID": "COEUR/Results/Spatial Analysis/RMD/BT-adapt-clustering-followup-analysis.html#cluster-the-neighborhoods-into-distinct-lma-types",
    "href": "COEUR/Results/Spatial Analysis/RMD/BT-adapt-clustering-followup-analysis.html#cluster-the-neighborhoods-into-distinct-lma-types",
    "title": "COEUR BT and ADAPT LMAs Analysis",
    "section": "Cluster the neighborhoods into distinct LMA types",
    "text": "Cluster the neighborhoods into distinct LMA types\nUsing the clusterNeighborhoods function in /COEUR/Scripts/Neighborhood Analysis/SPIAT_functions.R. add methods for neighborhood detection\n\n\nCode\nsource(\"/Users/karanvir/Documents/LMAProject/COEUR/Scripts/Neighborhood Analysis/SPIAT_functions.R\")\nbtLMAs &lt;- clusterNeighborhoods(btNeighborhoods, 7)\nadaptLMAs &lt;- clusterNeighborhoods(adaptNeighborhoods, 7)"
  }
]